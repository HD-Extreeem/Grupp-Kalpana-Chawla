
PwmTest.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003f40  00080000  00080000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00083f40  00083f40  0000bf40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009a4  20070000  00083f48  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000001cc  200709a4  000848ec  000109a4  2**2
                  ALLOC
  4 .stack        00002000  20070b70  00084ab8  000109a4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109a4  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  000109cd  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000edd8  00000000  00000000  00010a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000276a  00000000  00000000  0001f800  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00004e8e  00000000  00000000  00021f6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000b50  00000000  00000000  00026df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000a18  00000000  00000000  00027948  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00018ad5  00000000  00000000  00028360  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00010e33  00000000  00000000  00040e35  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0006144f  00000000  00000000  00051c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002258  00000000  00000000  000b30b8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072b70 	.word	0x20072b70
   80004:	00080dfd 	.word	0x00080dfd
   80008:	00080df9 	.word	0x00080df9
   8000c:	00080df9 	.word	0x00080df9
   80010:	00080df9 	.word	0x00080df9
   80014:	00080df9 	.word	0x00080df9
   80018:	00080df9 	.word	0x00080df9
	...
   8002c:	00080df9 	.word	0x00080df9
   80030:	00080df9 	.word	0x00080df9
   80034:	00000000 	.word	0x00000000
   80038:	00080df9 	.word	0x00080df9
   8003c:	00080df9 	.word	0x00080df9
   80040:	00080df9 	.word	0x00080df9
   80044:	00080df9 	.word	0x00080df9
   80048:	00080df9 	.word	0x00080df9
   8004c:	00080df9 	.word	0x00080df9
   80050:	00080df9 	.word	0x00080df9
   80054:	00080df9 	.word	0x00080df9
   80058:	00080df9 	.word	0x00080df9
   8005c:	00080df9 	.word	0x00080df9
   80060:	00080df9 	.word	0x00080df9
   80064:	00080df9 	.word	0x00080df9
   80068:	00000000 	.word	0x00000000
   8006c:	00080b79 	.word	0x00080b79
   80070:	00080b8d 	.word	0x00080b8d
   80074:	00080ba1 	.word	0x00080ba1
   80078:	00080bb5 	.word	0x00080bb5
	...
   80084:	00080389 	.word	0x00080389
   80088:	00080df9 	.word	0x00080df9
   8008c:	00080df9 	.word	0x00080df9
   80090:	00080df9 	.word	0x00080df9
   80094:	00080df9 	.word	0x00080df9
   80098:	00080df9 	.word	0x00080df9
   8009c:	00080df9 	.word	0x00080df9
   800a0:	00080df9 	.word	0x00080df9
   800a4:	00000000 	.word	0x00000000
   800a8:	00080df9 	.word	0x00080df9
   800ac:	00080df9 	.word	0x00080df9
   800b0:	00080df9 	.word	0x00080df9
   800b4:	00080df9 	.word	0x00080df9
   800b8:	00080df9 	.word	0x00080df9
   800bc:	00080df9 	.word	0x00080df9
   800c0:	00080df9 	.word	0x00080df9
   800c4:	00080df9 	.word	0x00080df9
   800c8:	00080df9 	.word	0x00080df9
   800cc:	00080df9 	.word	0x00080df9
   800d0:	00080df9 	.word	0x00080df9
   800d4:	00080df9 	.word	0x00080df9
   800d8:	00080df9 	.word	0x00080df9
   800dc:	00080df9 	.word	0x00080df9
   800e0:	00080df9 	.word	0x00080df9
   800e4:	00080df9 	.word	0x00080df9
   800e8:	00080df9 	.word	0x00080df9
   800ec:	00080df9 	.word	0x00080df9
   800f0:	00080df9 	.word	0x00080df9

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709a4 	.word	0x200709a4
   80110:	00000000 	.word	0x00000000
   80114:	00083f48 	.word	0x00083f48

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00083f48 	.word	0x00083f48
   8013c:	200709a8 	.word	0x200709a8
   80140:	00083f48 	.word	0x00083f48
   80144:	00000000 	.word	0x00000000

00080148 <main>:
int e=0;
double kp = 2;
uint16_t speed = 1700;

int main(void)
{
   80148:	b508      	push	{r3, lr}
	/* Initialize the SAM system */
	SystemInit();
   8014a:	4b0c      	ldr	r3, [pc, #48]	; (8017c <main+0x34>)
   8014c:	4798      	blx	r3
	/*Initialize the board configurations*/
	board_init();
   8014e:	4b0c      	ldr	r3, [pc, #48]	; (80180 <main+0x38>)
   80150:	4798      	blx	r3
	configureConsole();
   80152:	4b0c      	ldr	r3, [pc, #48]	; (80184 <main+0x3c>)
   80154:	4798      	blx	r3
	configInterrupts();
   80156:	4b0c      	ldr	r3, [pc, #48]	; (80188 <main+0x40>)
   80158:	4798      	blx	r3
	PWM_init();
   8015a:	4b0c      	ldr	r3, [pc, #48]	; (8018c <main+0x44>)
   8015c:	4798      	blx	r3
	printf("Startar");
   8015e:	480c      	ldr	r0, [pc, #48]	; (80190 <main+0x48>)
   80160:	4b0c      	ldr	r3, [pc, #48]	; (80194 <main+0x4c>)
   80162:	4798      	blx	r3
	delay_s(3);
   80164:	480c      	ldr	r0, [pc, #48]	; (80198 <main+0x50>)
   80166:	4b0d      	ldr	r3, [pc, #52]	; (8019c <main+0x54>)
   80168:	4798      	blx	r3
	pwm_pin_22(1700);
   8016a:	f240 60a4 	movw	r0, #1700	; 0x6a4
   8016e:	4b0c      	ldr	r3, [pc, #48]	; (801a0 <main+0x58>)
   80170:	4798      	blx	r3
	pwm_pin_21(1700);
   80172:	f240 60a4 	movw	r0, #1700	; 0x6a4
   80176:	4b0b      	ldr	r3, [pc, #44]	; (801a4 <main+0x5c>)
   80178:	4798      	blx	r3
   8017a:	e7fe      	b.n	8017a <main+0x32>
   8017c:	2007000d 	.word	0x2007000d
   80180:	000807fd 	.word	0x000807fd
   80184:	00080545 	.word	0x00080545
   80188:	00080615 	.word	0x00080615
   8018c:	00080741 	.word	0x00080741
   80190:	00083e90 	.word	0x00083e90
   80194:	00080f4d 	.word	0x00080f4d
   80198:	0112a880 	.word	0x0112a880
   8019c:	20070001 	.word	0x20070001
   801a0:	000807cd 	.word	0x000807cd
   801a4:	0008079d 	.word	0x0008079d

000801a8 <usart_serial_read_packet>:
   801a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   801ac:	b083      	sub	sp, #12
   801ae:	4605      	mov	r5, r0
   801b0:	4690      	mov	r8, r2
   801b2:	2a00      	cmp	r2, #0
   801b4:	d047      	beq.n	80246 <usart_serial_read_packet+0x9e>
   801b6:	1c4e      	adds	r6, r1, #1
   801b8:	4f25      	ldr	r7, [pc, #148]	; (80250 <usart_serial_read_packet+0xa8>)
   801ba:	4c26      	ldr	r4, [pc, #152]	; (80254 <usart_serial_read_packet+0xac>)
   801bc:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 80268 <usart_serial_read_packet+0xc0>
   801c0:	f8df b094 	ldr.w	fp, [pc, #148]	; 80258 <usart_serial_read_packet+0xb0>
   801c4:	f106 39ff 	add.w	r9, r6, #4294967295
   801c8:	2300      	movs	r3, #0
   801ca:	9301      	str	r3, [sp, #4]
   801cc:	4b22      	ldr	r3, [pc, #136]	; (80258 <usart_serial_read_packet+0xb0>)
   801ce:	429d      	cmp	r5, r3
   801d0:	d106      	bne.n	801e0 <usart_serial_read_packet+0x38>
   801d2:	4658      	mov	r0, fp
   801d4:	4649      	mov	r1, r9
   801d6:	4b21      	ldr	r3, [pc, #132]	; (8025c <usart_serial_read_packet+0xb4>)
   801d8:	4798      	blx	r3
   801da:	2800      	cmp	r0, #0
   801dc:	d1f9      	bne.n	801d2 <usart_serial_read_packet+0x2a>
   801de:	e019      	b.n	80214 <usart_serial_read_packet+0x6c>
   801e0:	4b1f      	ldr	r3, [pc, #124]	; (80260 <usart_serial_read_packet+0xb8>)
   801e2:	429d      	cmp	r5, r3
   801e4:	d109      	bne.n	801fa <usart_serial_read_packet+0x52>
   801e6:	4699      	mov	r9, r3
   801e8:	4648      	mov	r0, r9
   801ea:	a901      	add	r1, sp, #4
   801ec:	47a0      	blx	r4
   801ee:	2800      	cmp	r0, #0
   801f0:	d1fa      	bne.n	801e8 <usart_serial_read_packet+0x40>
   801f2:	9b01      	ldr	r3, [sp, #4]
   801f4:	f806 3c01 	strb.w	r3, [r6, #-1]
   801f8:	e017      	b.n	8022a <usart_serial_read_packet+0x82>
   801fa:	4b1a      	ldr	r3, [pc, #104]	; (80264 <usart_serial_read_packet+0xbc>)
   801fc:	429d      	cmp	r5, r3
   801fe:	d109      	bne.n	80214 <usart_serial_read_packet+0x6c>
   80200:	4699      	mov	r9, r3
   80202:	4648      	mov	r0, r9
   80204:	a901      	add	r1, sp, #4
   80206:	47a0      	blx	r4
   80208:	2800      	cmp	r0, #0
   8020a:	d1fa      	bne.n	80202 <usart_serial_read_packet+0x5a>
   8020c:	9b01      	ldr	r3, [sp, #4]
   8020e:	f806 3c01 	strb.w	r3, [r6, #-1]
   80212:	e014      	b.n	8023e <usart_serial_read_packet+0x96>
   80214:	4555      	cmp	r5, sl
   80216:	d108      	bne.n	8022a <usart_serial_read_packet+0x82>
   80218:	4650      	mov	r0, sl
   8021a:	a901      	add	r1, sp, #4
   8021c:	47a0      	blx	r4
   8021e:	2800      	cmp	r0, #0
   80220:	d1fa      	bne.n	80218 <usart_serial_read_packet+0x70>
   80222:	9b01      	ldr	r3, [sp, #4]
   80224:	f806 3c01 	strb.w	r3, [r6, #-1]
   80228:	e009      	b.n	8023e <usart_serial_read_packet+0x96>
   8022a:	42bd      	cmp	r5, r7
   8022c:	d107      	bne.n	8023e <usart_serial_read_packet+0x96>
   8022e:	4638      	mov	r0, r7
   80230:	a901      	add	r1, sp, #4
   80232:	47a0      	blx	r4
   80234:	2800      	cmp	r0, #0
   80236:	d1fa      	bne.n	8022e <usart_serial_read_packet+0x86>
   80238:	9b01      	ldr	r3, [sp, #4]
   8023a:	f806 3c01 	strb.w	r3, [r6, #-1]
   8023e:	3601      	adds	r6, #1
   80240:	f1b8 0801 	subs.w	r8, r8, #1
   80244:	d1be      	bne.n	801c4 <usart_serial_read_packet+0x1c>
   80246:	2000      	movs	r0, #0
   80248:	b003      	add	sp, #12
   8024a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8024e:	bf00      	nop
   80250:	400a4000 	.word	0x400a4000
   80254:	00080371 	.word	0x00080371
   80258:	400e0800 	.word	0x400e0800
   8025c:	00080349 	.word	0x00080349
   80260:	40098000 	.word	0x40098000
   80264:	4009c000 	.word	0x4009c000
   80268:	400a0000 	.word	0x400a0000

0008026c <_read>:
   8026c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80270:	460c      	mov	r4, r1
   80272:	4690      	mov	r8, r2
   80274:	b960      	cbnz	r0, 80290 <_read+0x24>
   80276:	2a00      	cmp	r2, #0
   80278:	dd0e      	ble.n	80298 <_read+0x2c>
   8027a:	188f      	adds	r7, r1, r2
   8027c:	4e09      	ldr	r6, [pc, #36]	; (802a4 <_read+0x38>)
   8027e:	4d0a      	ldr	r5, [pc, #40]	; (802a8 <_read+0x3c>)
   80280:	6830      	ldr	r0, [r6, #0]
   80282:	4621      	mov	r1, r4
   80284:	682b      	ldr	r3, [r5, #0]
   80286:	4798      	blx	r3
   80288:	3401      	adds	r4, #1
   8028a:	42bc      	cmp	r4, r7
   8028c:	d1f8      	bne.n	80280 <_read+0x14>
   8028e:	e006      	b.n	8029e <_read+0x32>
   80290:	f04f 30ff 	mov.w	r0, #4294967295
   80294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80298:	2000      	movs	r0, #0
   8029a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8029e:	4640      	mov	r0, r8
   802a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   802a4:	20070b18 	.word	0x20070b18
   802a8:	20070b10 	.word	0x20070b10

000802ac <_write>:
   802ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   802b0:	460e      	mov	r6, r1
   802b2:	4615      	mov	r5, r2
   802b4:	3801      	subs	r0, #1
   802b6:	2802      	cmp	r0, #2
   802b8:	d80f      	bhi.n	802da <_write+0x2e>
   802ba:	b192      	cbz	r2, 802e2 <_write+0x36>
   802bc:	2400      	movs	r4, #0
   802be:	f8df 803c 	ldr.w	r8, [pc, #60]	; 802fc <_write+0x50>
   802c2:	4f0d      	ldr	r7, [pc, #52]	; (802f8 <_write+0x4c>)
   802c4:	f8d8 0000 	ldr.w	r0, [r8]
   802c8:	5d31      	ldrb	r1, [r6, r4]
   802ca:	683b      	ldr	r3, [r7, #0]
   802cc:	4798      	blx	r3
   802ce:	2800      	cmp	r0, #0
   802d0:	db0a      	blt.n	802e8 <_write+0x3c>
   802d2:	3401      	adds	r4, #1
   802d4:	42a5      	cmp	r5, r4
   802d6:	d1f5      	bne.n	802c4 <_write+0x18>
   802d8:	e00a      	b.n	802f0 <_write+0x44>
   802da:	f04f 30ff 	mov.w	r0, #4294967295
   802de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   802e2:	2000      	movs	r0, #0
   802e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   802e8:	f04f 30ff 	mov.w	r0, #4294967295
   802ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   802f0:	4620      	mov	r0, r4
   802f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   802f6:	bf00      	nop
   802f8:	20070b14 	.word	0x20070b14
   802fc:	20070b18 	.word	0x20070b18

00080300 <uart_init>:
   80300:	b410      	push	{r4}
   80302:	23ac      	movs	r3, #172	; 0xac
   80304:	6003      	str	r3, [r0, #0]
   80306:	680a      	ldr	r2, [r1, #0]
   80308:	684b      	ldr	r3, [r1, #4]
   8030a:	fbb2 f3f3 	udiv	r3, r2, r3
   8030e:	091b      	lsrs	r3, r3, #4
   80310:	1e5c      	subs	r4, r3, #1
   80312:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   80316:	4294      	cmp	r4, r2
   80318:	d80a      	bhi.n	80330 <uart_init+0x30>
   8031a:	6203      	str	r3, [r0, #32]
   8031c:	688b      	ldr	r3, [r1, #8]
   8031e:	6043      	str	r3, [r0, #4]
   80320:	f240 2302 	movw	r3, #514	; 0x202
   80324:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   80328:	2350      	movs	r3, #80	; 0x50
   8032a:	6003      	str	r3, [r0, #0]
   8032c:	2000      	movs	r0, #0
   8032e:	e000      	b.n	80332 <uart_init+0x32>
   80330:	2001      	movs	r0, #1
   80332:	f85d 4b04 	ldr.w	r4, [sp], #4
   80336:	4770      	bx	lr

00080338 <uart_write>:
   80338:	6943      	ldr	r3, [r0, #20]
   8033a:	f013 0f02 	tst.w	r3, #2
   8033e:	bf1a      	itte	ne
   80340:	61c1      	strne	r1, [r0, #28]
   80342:	2000      	movne	r0, #0
   80344:	2001      	moveq	r0, #1
   80346:	4770      	bx	lr

00080348 <uart_read>:
   80348:	6943      	ldr	r3, [r0, #20]
   8034a:	f013 0f01 	tst.w	r3, #1
   8034e:	bf1d      	ittte	ne
   80350:	6983      	ldrne	r3, [r0, #24]
   80352:	700b      	strbne	r3, [r1, #0]
   80354:	2000      	movne	r0, #0
   80356:	2001      	moveq	r0, #1
   80358:	4770      	bx	lr
   8035a:	bf00      	nop

0008035c <usart_write>:
   8035c:	6943      	ldr	r3, [r0, #20]
   8035e:	f013 0f02 	tst.w	r3, #2
   80362:	bf1d      	ittte	ne
   80364:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   80368:	61c1      	strne	r1, [r0, #28]
   8036a:	2000      	movne	r0, #0
   8036c:	2001      	moveq	r0, #1
   8036e:	4770      	bx	lr

00080370 <usart_read>:
   80370:	6943      	ldr	r3, [r0, #20]
   80372:	f013 0f01 	tst.w	r3, #1
   80376:	d005      	beq.n	80384 <usart_read+0x14>
   80378:	6983      	ldr	r3, [r0, #24]
   8037a:	f3c3 0308 	ubfx	r3, r3, #0, #9
   8037e:	600b      	str	r3, [r1, #0]
   80380:	2000      	movs	r0, #0
   80382:	4770      	bx	lr
   80384:	2001      	movs	r0, #1
   80386:	4770      	bx	lr

00080388 <USART0_Handler>:
   80388:	b500      	push	{lr}
   8038a:	b083      	sub	sp, #12
   8038c:	4813      	ldr	r0, [pc, #76]	; (803dc <USART0_Handler+0x54>)
   8038e:	f10d 0107 	add.w	r1, sp, #7
   80392:	2201      	movs	r2, #1
   80394:	4b12      	ldr	r3, [pc, #72]	; (803e0 <USART0_Handler+0x58>)
   80396:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i");
   80398:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   8039a:	f3bf 8f5f 	dmb	sy
   8039e:	2200      	movs	r2, #0
   803a0:	4b10      	ldr	r3, [pc, #64]	; (803e4 <USART0_Handler+0x5c>)
   803a2:	701a      	strb	r2, [r3, #0]
   803a4:	4b10      	ldr	r3, [pc, #64]	; (803e8 <USART0_Handler+0x60>)
   803a6:	781a      	ldrb	r2, [r3, #0]
   803a8:	3201      	adds	r2, #1
   803aa:	701a      	strb	r2, [r3, #0]
   803ac:	4b0f      	ldr	r3, [pc, #60]	; (803ec <USART0_Handler+0x64>)
   803ae:	781b      	ldrb	r3, [r3, #0]
   803b0:	f89d 1007 	ldrb.w	r1, [sp, #7]
   803b4:	4a0e      	ldr	r2, [pc, #56]	; (803f0 <USART0_Handler+0x68>)
   803b6:	54d1      	strb	r1, [r2, r3]
   803b8:	2b9b      	cmp	r3, #155	; 0x9b
   803ba:	d103      	bne.n	803c4 <USART0_Handler+0x3c>
   803bc:	2200      	movs	r2, #0
   803be:	4b0b      	ldr	r3, [pc, #44]	; (803ec <USART0_Handler+0x64>)
   803c0:	701a      	strb	r2, [r3, #0]
   803c2:	e002      	b.n	803ca <USART0_Handler+0x42>
   803c4:	3301      	adds	r3, #1
   803c6:	4a09      	ldr	r2, [pc, #36]	; (803ec <USART0_Handler+0x64>)
   803c8:	7013      	strb	r3, [r2, #0]
   803ca:	2201      	movs	r2, #1
   803cc:	4b05      	ldr	r3, [pc, #20]	; (803e4 <USART0_Handler+0x5c>)
   803ce:	701a      	strb	r2, [r3, #0]
   803d0:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
   803d4:	b662      	cpsie	i
   803d6:	b003      	add	sp, #12
   803d8:	f85d fb04 	ldr.w	pc, [sp], #4
   803dc:	40098000 	.word	0x40098000
   803e0:	000801a9 	.word	0x000801a9
   803e4:	20070138 	.word	0x20070138
   803e8:	20070a5d 	.word	0x20070a5d
   803ec:	20070a5c 	.word	0x20070a5c
   803f0:	200709c0 	.word	0x200709c0

000803f4 <usart_serial_getchar>:
   803f4:	b5f0      	push	{r4, r5, r6, r7, lr}
   803f6:	b083      	sub	sp, #12
   803f8:	4604      	mov	r4, r0
   803fa:	460d      	mov	r5, r1
   803fc:	2300      	movs	r3, #0
   803fe:	9301      	str	r3, [sp, #4]
   80400:	4b1f      	ldr	r3, [pc, #124]	; (80480 <usart_serial_getchar+0x8c>)
   80402:	4298      	cmp	r0, r3
   80404:	d107      	bne.n	80416 <usart_serial_getchar+0x22>
   80406:	461f      	mov	r7, r3
   80408:	4e1e      	ldr	r6, [pc, #120]	; (80484 <usart_serial_getchar+0x90>)
   8040a:	4638      	mov	r0, r7
   8040c:	4629      	mov	r1, r5
   8040e:	47b0      	blx	r6
   80410:	2800      	cmp	r0, #0
   80412:	d1fa      	bne.n	8040a <usart_serial_getchar+0x16>
   80414:	e019      	b.n	8044a <usart_serial_getchar+0x56>
   80416:	4b1c      	ldr	r3, [pc, #112]	; (80488 <usart_serial_getchar+0x94>)
   80418:	4298      	cmp	r0, r3
   8041a:	d109      	bne.n	80430 <usart_serial_getchar+0x3c>
   8041c:	461f      	mov	r7, r3
   8041e:	4e1b      	ldr	r6, [pc, #108]	; (8048c <usart_serial_getchar+0x98>)
   80420:	4638      	mov	r0, r7
   80422:	a901      	add	r1, sp, #4
   80424:	47b0      	blx	r6
   80426:	2800      	cmp	r0, #0
   80428:	d1fa      	bne.n	80420 <usart_serial_getchar+0x2c>
   8042a:	9b01      	ldr	r3, [sp, #4]
   8042c:	702b      	strb	r3, [r5, #0]
   8042e:	e019      	b.n	80464 <usart_serial_getchar+0x70>
   80430:	4b17      	ldr	r3, [pc, #92]	; (80490 <usart_serial_getchar+0x9c>)
   80432:	4298      	cmp	r0, r3
   80434:	d109      	bne.n	8044a <usart_serial_getchar+0x56>
   80436:	461e      	mov	r6, r3
   80438:	4c14      	ldr	r4, [pc, #80]	; (8048c <usart_serial_getchar+0x98>)
   8043a:	4630      	mov	r0, r6
   8043c:	a901      	add	r1, sp, #4
   8043e:	47a0      	blx	r4
   80440:	2800      	cmp	r0, #0
   80442:	d1fa      	bne.n	8043a <usart_serial_getchar+0x46>
   80444:	9b01      	ldr	r3, [sp, #4]
   80446:	702b      	strb	r3, [r5, #0]
   80448:	e018      	b.n	8047c <usart_serial_getchar+0x88>
   8044a:	4b12      	ldr	r3, [pc, #72]	; (80494 <usart_serial_getchar+0xa0>)
   8044c:	429c      	cmp	r4, r3
   8044e:	d109      	bne.n	80464 <usart_serial_getchar+0x70>
   80450:	461e      	mov	r6, r3
   80452:	4c0e      	ldr	r4, [pc, #56]	; (8048c <usart_serial_getchar+0x98>)
   80454:	4630      	mov	r0, r6
   80456:	a901      	add	r1, sp, #4
   80458:	47a0      	blx	r4
   8045a:	2800      	cmp	r0, #0
   8045c:	d1fa      	bne.n	80454 <usart_serial_getchar+0x60>
   8045e:	9b01      	ldr	r3, [sp, #4]
   80460:	702b      	strb	r3, [r5, #0]
   80462:	e00b      	b.n	8047c <usart_serial_getchar+0x88>
   80464:	4b0c      	ldr	r3, [pc, #48]	; (80498 <usart_serial_getchar+0xa4>)
   80466:	429c      	cmp	r4, r3
   80468:	d108      	bne.n	8047c <usart_serial_getchar+0x88>
   8046a:	461e      	mov	r6, r3
   8046c:	4c07      	ldr	r4, [pc, #28]	; (8048c <usart_serial_getchar+0x98>)
   8046e:	4630      	mov	r0, r6
   80470:	a901      	add	r1, sp, #4
   80472:	47a0      	blx	r4
   80474:	2800      	cmp	r0, #0
   80476:	d1fa      	bne.n	8046e <usart_serial_getchar+0x7a>
   80478:	9b01      	ldr	r3, [sp, #4]
   8047a:	702b      	strb	r3, [r5, #0]
   8047c:	b003      	add	sp, #12
   8047e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80480:	400e0800 	.word	0x400e0800
   80484:	00080349 	.word	0x00080349
   80488:	40098000 	.word	0x40098000
   8048c:	00080371 	.word	0x00080371
   80490:	4009c000 	.word	0x4009c000
   80494:	400a0000 	.word	0x400a0000
   80498:	400a4000 	.word	0x400a4000

0008049c <usart_serial_putchar>:
   8049c:	b570      	push	{r4, r5, r6, lr}
   8049e:	460c      	mov	r4, r1
   804a0:	4b21      	ldr	r3, [pc, #132]	; (80528 <usart_serial_putchar+0x8c>)
   804a2:	4298      	cmp	r0, r3
   804a4:	d107      	bne.n	804b6 <usart_serial_putchar+0x1a>
   804a6:	461e      	mov	r6, r3
   804a8:	4d20      	ldr	r5, [pc, #128]	; (8052c <usart_serial_putchar+0x90>)
   804aa:	4630      	mov	r0, r6
   804ac:	4621      	mov	r1, r4
   804ae:	47a8      	blx	r5
   804b0:	2800      	cmp	r0, #0
   804b2:	d1fa      	bne.n	804aa <usart_serial_putchar+0xe>
   804b4:	e02b      	b.n	8050e <usart_serial_putchar+0x72>
   804b6:	4b1e      	ldr	r3, [pc, #120]	; (80530 <usart_serial_putchar+0x94>)
   804b8:	4298      	cmp	r0, r3
   804ba:	d107      	bne.n	804cc <usart_serial_putchar+0x30>
   804bc:	461e      	mov	r6, r3
   804be:	4d1d      	ldr	r5, [pc, #116]	; (80534 <usart_serial_putchar+0x98>)
   804c0:	4630      	mov	r0, r6
   804c2:	4621      	mov	r1, r4
   804c4:	47a8      	blx	r5
   804c6:	2800      	cmp	r0, #0
   804c8:	d1fa      	bne.n	804c0 <usart_serial_putchar+0x24>
   804ca:	e022      	b.n	80512 <usart_serial_putchar+0x76>
   804cc:	4b1a      	ldr	r3, [pc, #104]	; (80538 <usart_serial_putchar+0x9c>)
   804ce:	4298      	cmp	r0, r3
   804d0:	d107      	bne.n	804e2 <usart_serial_putchar+0x46>
   804d2:	461e      	mov	r6, r3
   804d4:	4d17      	ldr	r5, [pc, #92]	; (80534 <usart_serial_putchar+0x98>)
   804d6:	4630      	mov	r0, r6
   804d8:	4621      	mov	r1, r4
   804da:	47a8      	blx	r5
   804dc:	2800      	cmp	r0, #0
   804de:	d1fa      	bne.n	804d6 <usart_serial_putchar+0x3a>
   804e0:	e019      	b.n	80516 <usart_serial_putchar+0x7a>
   804e2:	4b16      	ldr	r3, [pc, #88]	; (8053c <usart_serial_putchar+0xa0>)
   804e4:	4298      	cmp	r0, r3
   804e6:	d107      	bne.n	804f8 <usart_serial_putchar+0x5c>
   804e8:	461e      	mov	r6, r3
   804ea:	4d12      	ldr	r5, [pc, #72]	; (80534 <usart_serial_putchar+0x98>)
   804ec:	4630      	mov	r0, r6
   804ee:	4621      	mov	r1, r4
   804f0:	47a8      	blx	r5
   804f2:	2800      	cmp	r0, #0
   804f4:	d1fa      	bne.n	804ec <usart_serial_putchar+0x50>
   804f6:	e010      	b.n	8051a <usart_serial_putchar+0x7e>
   804f8:	4b11      	ldr	r3, [pc, #68]	; (80540 <usart_serial_putchar+0xa4>)
   804fa:	4298      	cmp	r0, r3
   804fc:	d10f      	bne.n	8051e <usart_serial_putchar+0x82>
   804fe:	461e      	mov	r6, r3
   80500:	4d0c      	ldr	r5, [pc, #48]	; (80534 <usart_serial_putchar+0x98>)
   80502:	4630      	mov	r0, r6
   80504:	4621      	mov	r1, r4
   80506:	47a8      	blx	r5
   80508:	2800      	cmp	r0, #0
   8050a:	d1fa      	bne.n	80502 <usart_serial_putchar+0x66>
   8050c:	e009      	b.n	80522 <usart_serial_putchar+0x86>
   8050e:	2001      	movs	r0, #1
   80510:	bd70      	pop	{r4, r5, r6, pc}
   80512:	2001      	movs	r0, #1
   80514:	bd70      	pop	{r4, r5, r6, pc}
   80516:	2001      	movs	r0, #1
   80518:	bd70      	pop	{r4, r5, r6, pc}
   8051a:	2001      	movs	r0, #1
   8051c:	bd70      	pop	{r4, r5, r6, pc}
   8051e:	2000      	movs	r0, #0
   80520:	bd70      	pop	{r4, r5, r6, pc}
   80522:	2001      	movs	r0, #1
   80524:	bd70      	pop	{r4, r5, r6, pc}
   80526:	bf00      	nop
   80528:	400e0800 	.word	0x400e0800
   8052c:	00080339 	.word	0x00080339
   80530:	40098000 	.word	0x40098000
   80534:	0008035d 	.word	0x0008035d
   80538:	4009c000 	.word	0x4009c000
   8053c:	400a0000 	.word	0x400a0000
   80540:	400a4000 	.word	0x400a4000

00080544 <configureConsole>:
   80544:	b530      	push	{r4, r5, lr}
   80546:	b085      	sub	sp, #20
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80548:	2008      	movs	r0, #8
   8054a:	4d13      	ldr	r5, [pc, #76]	; (80598 <configureConsole+0x54>)
   8054c:	47a8      	blx	r5
   8054e:	4c13      	ldr	r4, [pc, #76]	; (8059c <configureConsole+0x58>)
   80550:	4b13      	ldr	r3, [pc, #76]	; (805a0 <configureConsole+0x5c>)
   80552:	601c      	str	r4, [r3, #0]
   80554:	4a13      	ldr	r2, [pc, #76]	; (805a4 <configureConsole+0x60>)
   80556:	4b14      	ldr	r3, [pc, #80]	; (805a8 <configureConsole+0x64>)
   80558:	601a      	str	r2, [r3, #0]
   8055a:	4a14      	ldr	r2, [pc, #80]	; (805ac <configureConsole+0x68>)
   8055c:	4b14      	ldr	r3, [pc, #80]	; (805b0 <configureConsole+0x6c>)
   8055e:	601a      	str	r2, [r3, #0]
   80560:	4b14      	ldr	r3, [pc, #80]	; (805b4 <configureConsole+0x70>)
   80562:	9301      	str	r3, [sp, #4]
   80564:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   80568:	9302      	str	r3, [sp, #8]
   8056a:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8056e:	9303      	str	r3, [sp, #12]
   80570:	2008      	movs	r0, #8
   80572:	47a8      	blx	r5
   80574:	4620      	mov	r0, r4
   80576:	a901      	add	r1, sp, #4
   80578:	4b0f      	ldr	r3, [pc, #60]	; (805b8 <configureConsole+0x74>)
   8057a:	4798      	blx	r3
   8057c:	4d0f      	ldr	r5, [pc, #60]	; (805bc <configureConsole+0x78>)
   8057e:	682b      	ldr	r3, [r5, #0]
   80580:	6898      	ldr	r0, [r3, #8]
   80582:	2100      	movs	r1, #0
   80584:	4c0e      	ldr	r4, [pc, #56]	; (805c0 <configureConsole+0x7c>)
   80586:	47a0      	blx	r4
   80588:	682b      	ldr	r3, [r5, #0]
   8058a:	6858      	ldr	r0, [r3, #4]
   8058c:	2100      	movs	r1, #0
   8058e:	47a0      	blx	r4
   80590:	2000      	movs	r0, #0
   80592:	b005      	add	sp, #20
   80594:	bd30      	pop	{r4, r5, pc}
   80596:	bf00      	nop
   80598:	00080bc9 	.word	0x00080bc9
   8059c:	400e0800 	.word	0x400e0800
   805a0:	20070b18 	.word	0x20070b18
   805a4:	0008049d 	.word	0x0008049d
   805a8:	20070b14 	.word	0x20070b14
   805ac:	000803f5 	.word	0x000803f5
   805b0:	20070b10 	.word	0x20070b10
   805b4:	0501bd00 	.word	0x0501bd00
   805b8:	00080301 	.word	0x00080301
   805bc:	20070568 	.word	0x20070568
   805c0:	00081009 	.word	0x00081009

000805c4 <pin12_edge_handler>:
	

}

// Handler which calls when pin 53 is toggle.  
void pin12_edge_handler(const uint32_t id, const uint32_t index){
   805c4:	b508      	push	{r3, lr}
	// Check if pin 53 is high
	if (pio_get(PIOC, PIO_TYPE_PIO_INPUT, PIO_PC12)){
   805c6:	4806      	ldr	r0, [pc, #24]	; (805e0 <pin12_edge_handler+0x1c>)
   805c8:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   805cc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   805d0:	4b04      	ldr	r3, [pc, #16]	; (805e4 <pin12_edge_handler+0x20>)
   805d2:	4798      	blx	r3
   805d4:	b118      	cbz	r0, 805de <pin12_edge_handler+0x1a>
		//increase the counter value
		counter_1++;
   805d6:	4b04      	ldr	r3, [pc, #16]	; (805e8 <pin12_edge_handler+0x24>)
   805d8:	881a      	ldrh	r2, [r3, #0]
   805da:	3201      	adds	r2, #1
   805dc:	801a      	strh	r2, [r3, #0]
   805de:	bd08      	pop	{r3, pc}
   805e0:	400e1200 	.word	0x400e1200
   805e4:	0008087d 	.word	0x0008087d
   805e8:	20070a5e 	.word	0x20070a5e

000805ec <pin14_edge_handler>:
		//printf("\n c1= %d",counter_1);
	}	
}

// Handler which calls when pin 51 is toggle. 
void pin14_edge_handler(const uint32_t id, const uint32_t index){
   805ec:	b508      	push	{r3, lr}
	// Checks if pin 51 is high
	if (pio_get(PIOB, PIO_TYPE_PIO_INPUT, PIO_PB14)){
   805ee:	4806      	ldr	r0, [pc, #24]	; (80608 <pin14_edge_handler+0x1c>)
   805f0:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   805f4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   805f8:	4b04      	ldr	r3, [pc, #16]	; (8060c <pin14_edge_handler+0x20>)
   805fa:	4798      	blx	r3
   805fc:	b118      	cbz	r0, 80606 <pin14_edge_handler+0x1a>
	//Increase the counter value
			counter_2++;
   805fe:	4b04      	ldr	r3, [pc, #16]	; (80610 <pin14_edge_handler+0x24>)
   80600:	881a      	ldrh	r2, [r3, #0]
   80602:	3201      	adds	r2, #1
   80604:	801a      	strh	r2, [r3, #0]
   80606:	bd08      	pop	{r3, pc}
   80608:	400e1000 	.word	0x400e1000
   8060c:	0008087d 	.word	0x0008087d
   80610:	20070a60 	.word	0x20070a60

00080614 <configInterrupts>:
// Counter for Arlo Robot encoders for right and left wheel
 uint16_t counter_1 = 0;
 uint16_t counter_2 = 0;


void configInterrupts(void){
   80614:	b570      	push	{r4, r5, r6, lr}
   80616:	b082      	sub	sp, #8
	
	//Enable the module clock to the PIOB peripheral
	pmc_enable_periph_clk(ID_PIOB);
   80618:	200c      	movs	r0, #12
   8061a:	4c1a      	ldr	r4, [pc, #104]	; (80684 <configInterrupts+0x70>)
   8061c:	47a0      	blx	r4
	//Enable the module clock to the PIOC peripheral
	pmc_enable_periph_clk(ID_PIOC);	
   8061e:	200d      	movs	r0, #13
   80620:	47a0      	blx	r4
	//Set pin 12 direction on PIOC as input, with pullup
	pio_set_input(PIOC,PIO_PC12,PIO_PULLUP);
   80622:	4d19      	ldr	r5, [pc, #100]	; (80688 <configInterrupts+0x74>)
   80624:	4628      	mov	r0, r5
   80626:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   8062a:	2201      	movs	r2, #1
   8062c:	4e17      	ldr	r6, [pc, #92]	; (8068c <configInterrupts+0x78>)
   8062e:	47b0      	blx	r6
	//Set pin 14 direction on PIOB as input, with pullup
	pio_set_input(PIOB,PIO_PB14,PIO_PULLUP);
   80630:	4c17      	ldr	r4, [pc, #92]	; (80690 <configInterrupts+0x7c>)
   80632:	4620      	mov	r0, r4
   80634:	f44f 4180 	mov.w	r1, #16384	; 0x4000
   80638:	2201      	movs	r2, #1
   8063a:	47b0      	blx	r6
	//Configure the input pin 12 interrupt mode and handler
	pio_handler_set(PIOC, ID_PIOC, PIO_PC12, PIO_IT_EDGE, pin12_edge_handler);
   8063c:	4b15      	ldr	r3, [pc, #84]	; (80694 <configInterrupts+0x80>)
   8063e:	9300      	str	r3, [sp, #0]
   80640:	4628      	mov	r0, r5
   80642:	210d      	movs	r1, #13
   80644:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80648:	2340      	movs	r3, #64	; 0x40
   8064a:	4e13      	ldr	r6, [pc, #76]	; (80698 <configInterrupts+0x84>)
   8064c:	47b0      	blx	r6
	//Configure the input pin 14 interrupt mode and handler
	pio_handler_set(PIOB, ID_PIOB, PIO_PB14, PIO_IT_EDGE, pin14_edge_handler);
   8064e:	4b13      	ldr	r3, [pc, #76]	; (8069c <configInterrupts+0x88>)
   80650:	9300      	str	r3, [sp, #0]
   80652:	4620      	mov	r0, r4
   80654:	210c      	movs	r1, #12
   80656:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   8065a:	2340      	movs	r3, #64	; 0x40
   8065c:	47b0      	blx	r6
	//Enable the interrupt for the configured input pin 12
	pio_enable_interrupt(PIOC,PIO_PC12);
   8065e:	4628      	mov	r0, r5
   80660:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   80664:	4d0e      	ldr	r5, [pc, #56]	; (806a0 <configInterrupts+0x8c>)
   80666:	47a8      	blx	r5
	//Enable the interrupt for the configured input pin 12
	pio_enable_interrupt(PIOB,PIO_PB14);
   80668:	4620      	mov	r0, r4
   8066a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
   8066e:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80670:	4b0c      	ldr	r3, [pc, #48]	; (806a4 <configInterrupts+0x90>)
   80672:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   80676:	601a      	str	r2, [r3, #0]
   80678:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   8067c:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOC_IRQn);
	//Enable interrupt handling from the PIOB module:
	NVIC_EnableIRQ(PIOB_IRQn);
	

}
   8067e:	b002      	add	sp, #8
   80680:	bd70      	pop	{r4, r5, r6, pc}
   80682:	bf00      	nop
   80684:	00080bc9 	.word	0x00080bc9
   80688:	400e1200 	.word	0x400e1200
   8068c:	000808d5 	.word	0x000808d5
   80690:	400e1000 	.word	0x400e1000
   80694:	000805c5 	.word	0x000805c5
   80698:	00080b3d 	.word	0x00080b3d
   8069c:	000805ed 	.word	0x000805ed
   806a0:	00080961 	.word	0x00080961
   806a4:	e000e100 	.word	0xe000e100

000806a8 <initPin21>:
	
}

/* This method initialize channel instance and configure PWM channel 4 for pin 9,
 selecting clock A as its source clock, setting the period at 8 ms and setting the duty cycle at 0% */
void initPin21(void){
   806a8:	b538      	push	{r3, r4, r5, lr}
	
	    pio_configure_pin(PIN_21, PIO_TYPE_PIO_PERIPH_B);
   806aa:	2055      	movs	r0, #85	; 0x55
   806ac:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   806b0:	4b0b      	ldr	r3, [pc, #44]	; (806e0 <initPin21+0x38>)
   806b2:	4798      	blx	r3
		/*Pwm channel configuration such as channel, alignments, period, duty etc...*/
		PWM_pin_21.channel = PWM_CHANNEL_4;
   806b4:	4b0b      	ldr	r3, [pc, #44]	; (806e4 <initPin21+0x3c>)
   806b6:	2404      	movs	r4, #4
   806b8:	601c      	str	r4, [r3, #0]
		PWM_pin_21.ul_prescaler = PWM_CMR_CPRE_CLKA;
   806ba:	220b      	movs	r2, #11
   806bc:	605a      	str	r2, [r3, #4]
		PWM_pin_21.polarity = PWM_LOW;
   806be:	2200      	movs	r2, #0
   806c0:	729a      	strb	r2, [r3, #10]
		PWM_pin_21.alignment = PWM_ALIGN_LEFT;
   806c2:	811a      	strh	r2, [r3, #8]
		PWM_pin_21.ul_period = 7500;
   806c4:	f641 514c 	movw	r1, #7500	; 0x1d4c
   806c8:	6119      	str	r1, [r3, #16]
		PWM_pin_21.ul_duty = 0;
   806ca:	60da      	str	r2, [r3, #12]
		
	/*Initializing channel after setting things up*/
	pwm_channel_init(PWM, &PWM_pin_21);
   806cc:	4d06      	ldr	r5, [pc, #24]	; (806e8 <initPin21+0x40>)
   806ce:	4628      	mov	r0, r5
   806d0:	4619      	mov	r1, r3
   806d2:	4b06      	ldr	r3, [pc, #24]	; (806ec <initPin21+0x44>)
   806d4:	4798      	blx	r3
	
	/*Enabling pwm channel after initializing everything correct*/
	pwm_channel_enable(PWM, PWM_CHANNEL_4);
   806d6:	4628      	mov	r0, r5
   806d8:	4621      	mov	r1, r4
   806da:	4b05      	ldr	r3, [pc, #20]	; (806f0 <initPin21+0x48>)
   806dc:	4798      	blx	r3
   806de:	bd38      	pop	{r3, r4, r5, pc}
   806e0:	00080971 	.word	0x00080971
   806e4:	20070b44 	.word	0x20070b44
   806e8:	40094000 	.word	0x40094000
   806ec:	00080cb9 	.word	0x00080cb9
   806f0:	00080de1 	.word	0x00080de1

000806f4 <initPin22>:
}

/* This method initialize channel instance and configure PWM channel 5 for pin 8,
 selecting clock A as its source clock, setting the period at 8 ms and setting the duty cycle at 0% */
void initPin22(void){
   806f4:	b538      	push	{r3, r4, r5, lr}
	   
	    pio_configure_pin(PIN_22, PIO_TYPE_PIO_PERIPH_B);
   806f6:	2056      	movs	r0, #86	; 0x56
   806f8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   806fc:	4b0b      	ldr	r3, [pc, #44]	; (8072c <initPin22+0x38>)
   806fe:	4798      	blx	r3
		/*Pwm channel configuration such as channel, alignments, period, duty etc...*/
		PWM_pin_22.channel = PWM_CHANNEL_5;
   80700:	4b0b      	ldr	r3, [pc, #44]	; (80730 <initPin22+0x3c>)
   80702:	2405      	movs	r4, #5
   80704:	601c      	str	r4, [r3, #0]
		PWM_pin_22.ul_prescaler = PWM_CMR_CPRE_CLKA;
   80706:	220b      	movs	r2, #11
   80708:	605a      	str	r2, [r3, #4]
		PWM_pin_22.polarity = PWM_LOW;
   8070a:	2200      	movs	r2, #0
   8070c:	729a      	strb	r2, [r3, #10]
		PWM_pin_22.alignment = PWM_ALIGN_LEFT;
   8070e:	811a      	strh	r2, [r3, #8]
		PWM_pin_22.ul_period = 7500;
   80710:	f641 514c 	movw	r1, #7500	; 0x1d4c
   80714:	6119      	str	r1, [r3, #16]
		PWM_pin_22.ul_duty = 0;
   80716:	60da      	str	r2, [r3, #12]
		
		/*Initializing channel after setting things up*/
		pwm_channel_init(PWM, &PWM_pin_22);
   80718:	4d06      	ldr	r5, [pc, #24]	; (80734 <initPin22+0x40>)
   8071a:	4628      	mov	r0, r5
   8071c:	4619      	mov	r1, r3
   8071e:	4b06      	ldr	r3, [pc, #24]	; (80738 <initPin22+0x44>)
   80720:	4798      	blx	r3
		
		/*Enabling pwm channel after initializing everything correct*/
		pwm_channel_enable(PWM, PWM_CHANNEL_5);
   80722:	4628      	mov	r0, r5
   80724:	4621      	mov	r1, r4
   80726:	4b05      	ldr	r3, [pc, #20]	; (8073c <initPin22+0x48>)
   80728:	4798      	blx	r3
   8072a:	bd38      	pop	{r3, r4, r5, pc}
   8072c:	00080971 	.word	0x00080971
   80730:	20070b1c 	.word	0x20070b1c
   80734:	40094000 	.word	0x40094000
   80738:	00080cb9 	.word	0x00080cb9
   8073c:	00080de1 	.word	0x00080de1

00080740 <PWM_init>:
pwm_channel_t PWM_pin_21;
pwm_channel_t PWM_pin_22;


/* This method configure PWM clock   */
void PWM_init(void){
   80740:	b530      	push	{r4, r5, lr}
   80742:	b085      	sub	sp, #20
	
	//Enable the module clock for the PWM peripheral
	pmc_enable_periph_clk(ID_PWM);
   80744:	2024      	movs	r0, #36	; 0x24
   80746:	4b0d      	ldr	r3, [pc, #52]	; (8077c <PWM_init+0x3c>)
   80748:	4798      	blx	r3
	
	/*Disable PWM channels for appropriate configuration*/
	pwm_channel_disable(PWM,PWM_CHANNEL_4);
   8074a:	4c0d      	ldr	r4, [pc, #52]	; (80780 <PWM_init+0x40>)
   8074c:	4620      	mov	r0, r4
   8074e:	2104      	movs	r1, #4
   80750:	4d0c      	ldr	r5, [pc, #48]	; (80784 <PWM_init+0x44>)
   80752:	47a8      	blx	r5
	pwm_channel_disable(PWM,PWM_CHANNEL_5);
   80754:	4620      	mov	r0, r4
   80756:	2105      	movs	r1, #5
   80758:	47a8      	blx	r5
	
	/*Setup clock for PWM module*/
	pwm_clock_t PWMDAC_clock_config = {
   8075a:	4b0b      	ldr	r3, [pc, #44]	; (80788 <PWM_init+0x48>)
   8075c:	9301      	str	r3, [sp, #4]
   8075e:	2300      	movs	r3, #0
   80760:	9302      	str	r3, [sp, #8]
   80762:	4b0a      	ldr	r3, [pc, #40]	; (8078c <PWM_init+0x4c>)
   80764:	9303      	str	r3, [sp, #12]
		.ul_clka = 1000000,
		.ul_clkb = 0,
		.ul_mck = sysclk_get_cpu_hz()
	};
	pwm_init(PWM, &PWMDAC_clock_config);
   80766:	4620      	mov	r0, r4
   80768:	a901      	add	r1, sp, #4
   8076a:	4b09      	ldr	r3, [pc, #36]	; (80790 <PWM_init+0x50>)
   8076c:	4798      	blx	r3
	
	//Methods for initializing PWM for pin 8 and 9
	initPin21();
   8076e:	4b09      	ldr	r3, [pc, #36]	; (80794 <PWM_init+0x54>)
   80770:	4798      	blx	r3
	initPin22();
   80772:	4b09      	ldr	r3, [pc, #36]	; (80798 <PWM_init+0x58>)
   80774:	4798      	blx	r3
	
}
   80776:	b005      	add	sp, #20
   80778:	bd30      	pop	{r4, r5, pc}
   8077a:	bf00      	nop
   8077c:	00080bc9 	.word	0x00080bc9
   80780:	40094000 	.word	0x40094000
   80784:	00080ded 	.word	0x00080ded
   80788:	000f4240 	.word	0x000f4240
   8078c:	0501bd00 	.word	0x0501bd00
   80790:	00080c79 	.word	0x00080c79
   80794:	000806a9 	.word	0x000806a9
   80798:	000806f5 	.word	0x000806f5

0008079c <pwm_pin_21>:
		
		/*Enabling pwm channel after initializing everything correct*/
		pwm_channel_enable(PWM, PWM_CHANNEL_5);
}
 /* This method changes the duty cycle of PWM signal on pin 9. The duty cycle is limited between 0.8 ms and 2.2 ms  */
void pwm_pin_21(uint32_t duty){
   8079c:	b508      	push	{r3, lr}
	if(duty<800){
   8079e:	f5b0 7f48 	cmp.w	r0, #800	; 0x320
   807a2:	d305      	bcc.n	807b0 <pwm_pin_21+0x14>
   807a4:	f640 0298 	movw	r2, #2200	; 0x898
   807a8:	4290      	cmp	r0, r2
   807aa:	bf38      	it	cc
   807ac:	4602      	movcc	r2, r0
   807ae:	e001      	b.n	807b4 <pwm_pin_21+0x18>
		duty=800;
   807b0:	f44f 7248 	mov.w	r2, #800	; 0x320
	}
	else if(duty>2200){
		duty=2200;
	}
	// Change the duty cycle of the PWM channel
	pwm_channel_update_duty(PWM, &PWM_pin_21, duty );
   807b4:	4802      	ldr	r0, [pc, #8]	; (807c0 <pwm_pin_21+0x24>)
   807b6:	4903      	ldr	r1, [pc, #12]	; (807c4 <pwm_pin_21+0x28>)
   807b8:	4b03      	ldr	r3, [pc, #12]	; (807c8 <pwm_pin_21+0x2c>)
   807ba:	4798      	blx	r3
   807bc:	bd08      	pop	{r3, pc}
   807be:	bf00      	nop
   807c0:	40094000 	.word	0x40094000
   807c4:	20070b44 	.word	0x20070b44
   807c8:	00080dbd 	.word	0x00080dbd

000807cc <pwm_pin_22>:
}

 /* This method changes the duty cycle of PWM signal on pin 8. The duty cycle is limited between 0.8 ms and 2.2 ms  */
void pwm_pin_22(uint32_t duty){
   807cc:	b508      	push	{r3, lr}
	
	if(duty<800){
   807ce:	f5b0 7f48 	cmp.w	r0, #800	; 0x320
   807d2:	d305      	bcc.n	807e0 <pwm_pin_22+0x14>
   807d4:	f640 0298 	movw	r2, #2200	; 0x898
   807d8:	4290      	cmp	r0, r2
   807da:	bf38      	it	cc
   807dc:	4602      	movcc	r2, r0
   807de:	e001      	b.n	807e4 <pwm_pin_22+0x18>
		duty=800;
   807e0:	f44f 7248 	mov.w	r2, #800	; 0x320
	}
	else if(duty>2200){
		duty=2200;
	}
	// Change the duty cycle of the PWM channel
	pwm_channel_update_duty(PWM, &PWM_pin_22, duty );
   807e4:	4802      	ldr	r0, [pc, #8]	; (807f0 <pwm_pin_22+0x24>)
   807e6:	4903      	ldr	r1, [pc, #12]	; (807f4 <pwm_pin_22+0x28>)
   807e8:	4b03      	ldr	r3, [pc, #12]	; (807f8 <pwm_pin_22+0x2c>)
   807ea:	4798      	blx	r3
   807ec:	bd08      	pop	{r3, pc}
   807ee:	bf00      	nop
   807f0:	40094000 	.word	0x40094000
   807f4:	20070b1c 	.word	0x20070b1c
   807f8:	00080dbd 	.word	0x00080dbd

000807fc <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   807fc:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   807fe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80802:	4b17      	ldr	r3, [pc, #92]	; (80860 <board_init+0x64>)
   80804:	605a      	str	r2, [r3, #4]
   80806:	200b      	movs	r0, #11
   80808:	4c16      	ldr	r4, [pc, #88]	; (80864 <board_init+0x68>)
   8080a:	47a0      	blx	r4
   8080c:	200c      	movs	r0, #12
   8080e:	47a0      	blx	r4
   80810:	200d      	movs	r0, #13
   80812:	47a0      	blx	r4
   80814:	200e      	movs	r0, #14
   80816:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80818:	203b      	movs	r0, #59	; 0x3b
   8081a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8081e:	4c12      	ldr	r4, [pc, #72]	; (80868 <board_init+0x6c>)
   80820:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80822:	2055      	movs	r0, #85	; 0x55
   80824:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80828:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8082a:	2056      	movs	r0, #86	; 0x56
   8082c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80830:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80832:	2068      	movs	r0, #104	; 0x68
   80834:	490d      	ldr	r1, [pc, #52]	; (8086c <board_init+0x70>)
   80836:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80838:	205c      	movs	r0, #92	; 0x5c
   8083a:	490d      	ldr	r1, [pc, #52]	; (80870 <board_init+0x74>)
   8083c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   8083e:	480d      	ldr	r0, [pc, #52]	; (80874 <board_init+0x78>)
   80840:	f44f 7140 	mov.w	r1, #768	; 0x300
   80844:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80848:	4b0b      	ldr	r3, [pc, #44]	; (80878 <board_init+0x7c>)
   8084a:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   8084c:	202b      	movs	r0, #43	; 0x2b
   8084e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80852:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80854:	202a      	movs	r0, #42	; 0x2a
   80856:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8085a:	47a0      	blx	r4
   8085c:	bd10      	pop	{r4, pc}
   8085e:	bf00      	nop
   80860:	400e1a50 	.word	0x400e1a50
   80864:	00080bc9 	.word	0x00080bc9
   80868:	00080971 	.word	0x00080971
   8086c:	28000079 	.word	0x28000079
   80870:	28000001 	.word	0x28000001
   80874:	400e0e00 	.word	0x400e0e00
   80878:	00080a45 	.word	0x00080a45

0008087c <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
   8087c:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
   80880:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
		ul_reg = p_pio->PIO_ODSR;
   80884:	bf0c      	ite	eq
   80886:	6b83      	ldreq	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
   80888:	6bc3      	ldrne	r3, [r0, #60]	; 0x3c
	}

	if ((ul_reg & ul_mask) == 0) {
   8088a:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
   8088c:	bf0c      	ite	eq
   8088e:	2000      	moveq	r0, #0
   80890:	2001      	movne	r0, #1
   80892:	4770      	bx	lr

00080894 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80894:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80896:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8089a:	d016      	beq.n	808ca <pio_set_peripheral+0x36>
   8089c:	d804      	bhi.n	808a8 <pio_set_peripheral+0x14>
   8089e:	b1c1      	cbz	r1, 808d2 <pio_set_peripheral+0x3e>
   808a0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   808a4:	d00a      	beq.n	808bc <pio_set_peripheral+0x28>
   808a6:	e013      	b.n	808d0 <pio_set_peripheral+0x3c>
   808a8:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   808ac:	d011      	beq.n	808d2 <pio_set_peripheral+0x3e>
   808ae:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   808b2:	d00e      	beq.n	808d2 <pio_set_peripheral+0x3e>
   808b4:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   808b8:	d10a      	bne.n	808d0 <pio_set_peripheral+0x3c>
   808ba:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   808bc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   808be:	6f01      	ldr	r1, [r0, #112]	; 0x70
   808c0:	400b      	ands	r3, r1
   808c2:	ea23 0302 	bic.w	r3, r3, r2
   808c6:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   808c8:	e002      	b.n	808d0 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   808ca:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   808cc:	4313      	orrs	r3, r2
   808ce:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   808d0:	6042      	str	r2, [r0, #4]
   808d2:	4770      	bx	lr

000808d4 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   808d4:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   808d6:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   808da:	bf14      	ite	ne
   808dc:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   808de:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   808e0:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   808e4:	bf14      	ite	ne
   808e6:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   808e8:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   808ea:	f012 0f02 	tst.w	r2, #2
   808ee:	d002      	beq.n	808f6 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   808f0:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   808f4:	e004      	b.n	80900 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   808f6:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   808fa:	bf18      	it	ne
   808fc:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80900:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80902:	6001      	str	r1, [r0, #0]
   80904:	4770      	bx	lr
   80906:	bf00      	nop

00080908 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80908:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   8090a:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   8090c:	9c01      	ldr	r4, [sp, #4]
   8090e:	b10c      	cbz	r4, 80914 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80910:	6641      	str	r1, [r0, #100]	; 0x64
   80912:	e000      	b.n	80916 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80914:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80916:	b10b      	cbz	r3, 8091c <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80918:	6501      	str	r1, [r0, #80]	; 0x50
   8091a:	e000      	b.n	8091e <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   8091c:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   8091e:	b10a      	cbz	r2, 80924 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80920:	6301      	str	r1, [r0, #48]	; 0x30
   80922:	e000      	b.n	80926 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80924:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80926:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80928:	6001      	str	r1, [r0, #0]
}
   8092a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8092e:	4770      	bx	lr

00080930 <pio_configure_interrupt>:
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
   80930:	f012 0f10 	tst.w	r2, #16
   80934:	d010      	beq.n	80958 <pio_configure_interrupt+0x28>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
   80936:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
   8093a:	f012 0f20 	tst.w	r2, #32
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
   8093e:	bf14      	ite	ne
   80940:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
   80944:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
   80948:	f012 0f40 	tst.w	r2, #64	; 0x40
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
   8094c:	bf14      	ite	ne
   8094e:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
		} else {
			/* Level select */
			p_pio->PIO_LSR = ul_mask;
   80952:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   80956:	4770      	bx	lr
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
   80958:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   8095c:	4770      	bx	lr
   8095e:	bf00      	nop

00080960 <pio_enable_interrupt>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_ISR;
   80960:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
	p_pio->PIO_IER = ul_mask;
   80962:	6401      	str	r1, [r0, #64]	; 0x40
   80964:	4770      	bx	lr
   80966:	bf00      	nop

00080968 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80968:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8096a:	4770      	bx	lr

0008096c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8096c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8096e:	4770      	bx	lr

00080970 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80970:	b570      	push	{r4, r5, r6, lr}
   80972:	b082      	sub	sp, #8
   80974:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80976:	0944      	lsrs	r4, r0, #5
   80978:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   8097c:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80980:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80982:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80986:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   8098a:	d030      	beq.n	809ee <pio_configure_pin+0x7e>
   8098c:	d806      	bhi.n	8099c <pio_configure_pin+0x2c>
   8098e:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80992:	d00a      	beq.n	809aa <pio_configure_pin+0x3a>
   80994:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80998:	d018      	beq.n	809cc <pio_configure_pin+0x5c>
   8099a:	e049      	b.n	80a30 <pio_configure_pin+0xc0>
   8099c:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   809a0:	d030      	beq.n	80a04 <pio_configure_pin+0x94>
   809a2:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   809a6:	d02d      	beq.n	80a04 <pio_configure_pin+0x94>
   809a8:	e042      	b.n	80a30 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   809aa:	f000 001f 	and.w	r0, r0, #31
   809ae:	2401      	movs	r4, #1
   809b0:	4084      	lsls	r4, r0
   809b2:	4630      	mov	r0, r6
   809b4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809b8:	4622      	mov	r2, r4
   809ba:	4b1f      	ldr	r3, [pc, #124]	; (80a38 <pio_configure_pin+0xc8>)
   809bc:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809be:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809c2:	bf14      	ite	ne
   809c4:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809c6:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809c8:	2001      	movs	r0, #1
   809ca:	e032      	b.n	80a32 <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   809cc:	f000 001f 	and.w	r0, r0, #31
   809d0:	2401      	movs	r4, #1
   809d2:	4084      	lsls	r4, r0
   809d4:	4630      	mov	r0, r6
   809d6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   809da:	4622      	mov	r2, r4
   809dc:	4b16      	ldr	r3, [pc, #88]	; (80a38 <pio_configure_pin+0xc8>)
   809de:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809e0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809e4:	bf14      	ite	ne
   809e6:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809e8:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809ea:	2001      	movs	r0, #1
   809ec:	e021      	b.n	80a32 <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   809ee:	f000 011f 	and.w	r1, r0, #31
   809f2:	2401      	movs	r4, #1
   809f4:	4630      	mov	r0, r6
   809f6:	fa04 f101 	lsl.w	r1, r4, r1
   809fa:	462a      	mov	r2, r5
   809fc:	4b0f      	ldr	r3, [pc, #60]	; (80a3c <pio_configure_pin+0xcc>)
   809fe:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80a00:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80a02:	e016      	b.n	80a32 <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80a04:	f000 011f 	and.w	r1, r0, #31
   80a08:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80a0a:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80a0e:	ea05 0304 	and.w	r3, r5, r4
   80a12:	9300      	str	r3, [sp, #0]
   80a14:	4630      	mov	r0, r6
   80a16:	fa04 f101 	lsl.w	r1, r4, r1
   80a1a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80a1e:	bf14      	ite	ne
   80a20:	2200      	movne	r2, #0
   80a22:	2201      	moveq	r2, #1
   80a24:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80a28:	4d05      	ldr	r5, [pc, #20]	; (80a40 <pio_configure_pin+0xd0>)
   80a2a:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80a2c:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80a2e:	e000      	b.n	80a32 <pio_configure_pin+0xc2>

	default:
		return 0;
   80a30:	2000      	movs	r0, #0
	}

	return 1;
}
   80a32:	b002      	add	sp, #8
   80a34:	bd70      	pop	{r4, r5, r6, pc}
   80a36:	bf00      	nop
   80a38:	00080895 	.word	0x00080895
   80a3c:	000808d5 	.word	0x000808d5
   80a40:	00080909 	.word	0x00080909

00080a44 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80a44:	b5f0      	push	{r4, r5, r6, r7, lr}
   80a46:	b083      	sub	sp, #12
   80a48:	4607      	mov	r7, r0
   80a4a:	460e      	mov	r6, r1
   80a4c:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80a4e:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80a52:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80a56:	d026      	beq.n	80aa6 <pio_configure_pin_group+0x62>
   80a58:	d806      	bhi.n	80a68 <pio_configure_pin_group+0x24>
   80a5a:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80a5e:	d00a      	beq.n	80a76 <pio_configure_pin_group+0x32>
   80a60:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80a64:	d013      	beq.n	80a8e <pio_configure_pin_group+0x4a>
   80a66:	e034      	b.n	80ad2 <pio_configure_pin_group+0x8e>
   80a68:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80a6c:	d01f      	beq.n	80aae <pio_configure_pin_group+0x6a>
   80a6e:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80a72:	d01c      	beq.n	80aae <pio_configure_pin_group+0x6a>
   80a74:	e02d      	b.n	80ad2 <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80a76:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80a7a:	4632      	mov	r2, r6
   80a7c:	4b16      	ldr	r3, [pc, #88]	; (80ad8 <pio_configure_pin_group+0x94>)
   80a7e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a80:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a84:	bf14      	ite	ne
   80a86:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a88:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a8a:	2001      	movs	r0, #1
   80a8c:	e022      	b.n	80ad4 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80a8e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80a92:	4632      	mov	r2, r6
   80a94:	4b10      	ldr	r3, [pc, #64]	; (80ad8 <pio_configure_pin_group+0x94>)
   80a96:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a98:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a9c:	bf14      	ite	ne
   80a9e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80aa0:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80aa2:	2001      	movs	r0, #1
   80aa4:	e016      	b.n	80ad4 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80aa6:	4b0d      	ldr	r3, [pc, #52]	; (80adc <pio_configure_pin_group+0x98>)
   80aa8:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80aaa:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80aac:	e012      	b.n	80ad4 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80aae:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80ab2:	f005 0301 	and.w	r3, r5, #1
   80ab6:	9300      	str	r3, [sp, #0]
   80ab8:	4638      	mov	r0, r7
   80aba:	4631      	mov	r1, r6
   80abc:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80ac0:	bf14      	ite	ne
   80ac2:	2200      	movne	r2, #0
   80ac4:	2201      	moveq	r2, #1
   80ac6:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80aca:	4c05      	ldr	r4, [pc, #20]	; (80ae0 <pio_configure_pin_group+0x9c>)
   80acc:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80ace:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80ad0:	e000      	b.n	80ad4 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80ad2:	2000      	movs	r0, #0
	}

	return 1;
}
   80ad4:	b003      	add	sp, #12
   80ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80ad8:	00080895 	.word	0x00080895
   80adc:	000808d5 	.word	0x000808d5
   80ae0:	00080909 	.word	0x00080909

00080ae4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80ae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80ae8:	4604      	mov	r4, r0
   80aea:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80aec:	4b10      	ldr	r3, [pc, #64]	; (80b30 <pio_handler_process+0x4c>)
   80aee:	4798      	blx	r3
   80af0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80af2:	4620      	mov	r0, r4
   80af4:	4b0f      	ldr	r3, [pc, #60]	; (80b34 <pio_handler_process+0x50>)
   80af6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80af8:	4005      	ands	r5, r0
   80afa:	d017      	beq.n	80b2c <pio_handler_process+0x48>
   80afc:	4f0e      	ldr	r7, [pc, #56]	; (80b38 <pio_handler_process+0x54>)
   80afe:	f107 040c 	add.w	r4, r7, #12
   80b02:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80b04:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80b08:	42b3      	cmp	r3, r6
   80b0a:	d10a      	bne.n	80b22 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80b0c:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80b10:	4229      	tst	r1, r5
   80b12:	d006      	beq.n	80b22 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80b14:	6823      	ldr	r3, [r4, #0]
   80b16:	4630      	mov	r0, r6
   80b18:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80b1a:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80b1e:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80b22:	42bc      	cmp	r4, r7
   80b24:	d002      	beq.n	80b2c <pio_handler_process+0x48>
   80b26:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80b28:	2d00      	cmp	r5, #0
   80b2a:	d1eb      	bne.n	80b04 <pio_handler_process+0x20>
   80b2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80b30:	00080969 	.word	0x00080969
   80b34:	0008096d 	.word	0x0008096d
   80b38:	20070a68 	.word	0x20070a68

00080b3c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
   80b3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
   80b3e:	4c0b      	ldr	r4, [pc, #44]	; (80b6c <pio_handler_set+0x30>)
   80b40:	6824      	ldr	r4, [r4, #0]
   80b42:	2c06      	cmp	r4, #6
   80b44:	d810      	bhi.n	80b68 <pio_handler_set+0x2c>
		return 1;

	/* Define new source */
	pSource = &(gs_interrupt_sources[gs_ul_nb_sources]);
   80b46:	4f0a      	ldr	r7, [pc, #40]	; (80b70 <pio_handler_set+0x34>)
   80b48:	0126      	lsls	r6, r4, #4
   80b4a:	19bd      	adds	r5, r7, r6
	pSource->id = ul_id;
   80b4c:	51b9      	str	r1, [r7, r6]
	pSource->mask = ul_mask;
   80b4e:	606a      	str	r2, [r5, #4]
	pSource->attr = ul_attr;
   80b50:	60ab      	str	r3, [r5, #8]
	pSource->handler = p_handler;
   80b52:	9906      	ldr	r1, [sp, #24]
   80b54:	60e9      	str	r1, [r5, #12]
	gs_ul_nb_sources++;
   80b56:	3401      	adds	r4, #1
   80b58:	4904      	ldr	r1, [pc, #16]	; (80b6c <pio_handler_set+0x30>)
   80b5a:	600c      	str	r4, [r1, #0]

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
   80b5c:	4611      	mov	r1, r2
   80b5e:	461a      	mov	r2, r3
   80b60:	4b04      	ldr	r3, [pc, #16]	; (80b74 <pio_handler_set+0x38>)
   80b62:	4798      	blx	r3

	return 0;
   80b64:	2000      	movs	r0, #0
   80b66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
		return 1;
   80b68:	2001      	movs	r0, #1

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);

	return 0;
}
   80b6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80b6c:	20070a64 	.word	0x20070a64
   80b70:	20070a68 	.word	0x20070a68
   80b74:	00080931 	.word	0x00080931

00080b78 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80b78:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80b7a:	4802      	ldr	r0, [pc, #8]	; (80b84 <PIOA_Handler+0xc>)
   80b7c:	210b      	movs	r1, #11
   80b7e:	4b02      	ldr	r3, [pc, #8]	; (80b88 <PIOA_Handler+0x10>)
   80b80:	4798      	blx	r3
   80b82:	bd08      	pop	{r3, pc}
   80b84:	400e0e00 	.word	0x400e0e00
   80b88:	00080ae5 	.word	0x00080ae5

00080b8c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80b8c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80b8e:	4802      	ldr	r0, [pc, #8]	; (80b98 <PIOB_Handler+0xc>)
   80b90:	210c      	movs	r1, #12
   80b92:	4b02      	ldr	r3, [pc, #8]	; (80b9c <PIOB_Handler+0x10>)
   80b94:	4798      	blx	r3
   80b96:	bd08      	pop	{r3, pc}
   80b98:	400e1000 	.word	0x400e1000
   80b9c:	00080ae5 	.word	0x00080ae5

00080ba0 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80ba0:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80ba2:	4802      	ldr	r0, [pc, #8]	; (80bac <PIOC_Handler+0xc>)
   80ba4:	210d      	movs	r1, #13
   80ba6:	4b02      	ldr	r3, [pc, #8]	; (80bb0 <PIOC_Handler+0x10>)
   80ba8:	4798      	blx	r3
   80baa:	bd08      	pop	{r3, pc}
   80bac:	400e1200 	.word	0x400e1200
   80bb0:	00080ae5 	.word	0x00080ae5

00080bb4 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80bb4:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80bb6:	4802      	ldr	r0, [pc, #8]	; (80bc0 <PIOD_Handler+0xc>)
   80bb8:	210e      	movs	r1, #14
   80bba:	4b02      	ldr	r3, [pc, #8]	; (80bc4 <PIOD_Handler+0x10>)
   80bbc:	4798      	blx	r3
   80bbe:	bd08      	pop	{r3, pc}
   80bc0:	400e1400 	.word	0x400e1400
   80bc4:	00080ae5 	.word	0x00080ae5

00080bc8 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80bc8:	282c      	cmp	r0, #44	; 0x2c
   80bca:	d820      	bhi.n	80c0e <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80bcc:	281f      	cmp	r0, #31
   80bce:	d80d      	bhi.n	80bec <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80bd0:	4b12      	ldr	r3, [pc, #72]	; (80c1c <pmc_enable_periph_clk+0x54>)
   80bd2:	699a      	ldr	r2, [r3, #24]
   80bd4:	2301      	movs	r3, #1
   80bd6:	4083      	lsls	r3, r0
   80bd8:	401a      	ands	r2, r3
   80bda:	4293      	cmp	r3, r2
   80bdc:	d019      	beq.n	80c12 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80bde:	2301      	movs	r3, #1
   80be0:	fa03 f000 	lsl.w	r0, r3, r0
   80be4:	4b0d      	ldr	r3, [pc, #52]	; (80c1c <pmc_enable_periph_clk+0x54>)
   80be6:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80be8:	2000      	movs	r0, #0
   80bea:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80bec:	4b0b      	ldr	r3, [pc, #44]	; (80c1c <pmc_enable_periph_clk+0x54>)
   80bee:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
   80bf2:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80bf4:	2301      	movs	r3, #1
   80bf6:	4083      	lsls	r3, r0
   80bf8:	401a      	ands	r2, r3
   80bfa:	4293      	cmp	r3, r2
   80bfc:	d00b      	beq.n	80c16 <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80bfe:	2301      	movs	r3, #1
   80c00:	fa03 f000 	lsl.w	r0, r3, r0
   80c04:	4b05      	ldr	r3, [pc, #20]	; (80c1c <pmc_enable_periph_clk+0x54>)
   80c06:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80c0a:	2000      	movs	r0, #0
   80c0c:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80c0e:	2001      	movs	r0, #1
   80c10:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80c12:	2000      	movs	r0, #0
   80c14:	4770      	bx	lr
   80c16:	2000      	movs	r0, #0
}
   80c18:	4770      	bx	lr
   80c1a:	bf00      	nop
   80c1c:	400e0600 	.word	0x400e0600

00080c20 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
   80c20:	b4f0      	push	{r4, r5, r6, r7}
   80c22:	b08c      	sub	sp, #48	; 0x30
   80c24:	4607      	mov	r7, r0
   80c26:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
   80c28:	ac01      	add	r4, sp, #4
   80c2a:	4d12      	ldr	r5, [pc, #72]	; (80c74 <pwm_clocks_generate+0x54>)
   80c2c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80c2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80c30:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80c32:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80c34:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   80c38:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   80c3c:	466a      	mov	r2, sp
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
   80c3e:	2300      	movs	r3, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
   80c40:	f852 4f04 	ldr.w	r4, [r2, #4]!
   80c44:	fbb6 f4f4 	udiv	r4, r6, r4
   80c48:	fbb4 f4f7 	udiv	r4, r4, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
   80c4c:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
   80c50:	d903      	bls.n	80c5a <pwm_clocks_generate+0x3a>
			break;
		}
		ul_pre++;
   80c52:	3301      	adds	r3, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
   80c54:	2b0b      	cmp	r3, #11
   80c56:	d1f3      	bne.n	80c40 <pwm_clocks_generate+0x20>
   80c58:	e004      	b.n	80c64 <pwm_clocks_generate+0x44>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
   80c5a:	2b0a      	cmp	r3, #10
   80c5c:	d805      	bhi.n	80c6a <pwm_clocks_generate+0x4a>
		return ul_div | (ul_pre << 8);
   80c5e:	ea44 2003 	orr.w	r0, r4, r3, lsl #8
   80c62:	e004      	b.n	80c6e <pwm_clocks_generate+0x4e>
	} else {
		return PWM_INVALID_ARGUMENT;
   80c64:	f64f 70ff 	movw	r0, #65535	; 0xffff
   80c68:	e001      	b.n	80c6e <pwm_clocks_generate+0x4e>
   80c6a:	f64f 70ff 	movw	r0, #65535	; 0xffff
	}
}
   80c6e:	b00c      	add	sp, #48	; 0x30
   80c70:	bcf0      	pop	{r4, r5, r6, r7}
   80c72:	4770      	bx	lr
   80c74:	00083e98 	.word	0x00083e98

00080c78 <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
   80c78:	b570      	push	{r4, r5, r6, lr}
   80c7a:	4606      	mov	r6, r0
   80c7c:	460c      	mov	r4, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
   80c7e:	6808      	ldr	r0, [r1, #0]
   80c80:	b140      	cbz	r0, 80c94 <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
   80c82:	6889      	ldr	r1, [r1, #8]
   80c84:	4b0b      	ldr	r3, [pc, #44]	; (80cb4 <pwm_init+0x3c>)
   80c86:	4798      	blx	r3
   80c88:	4605      	mov	r5, r0
		if (result == PWM_INVALID_ARGUMENT) {
   80c8a:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80c8e:	4298      	cmp	r0, r3
   80c90:	d101      	bne.n	80c96 <pwm_init+0x1e>
   80c92:	e00e      	b.n	80cb2 <pwm_init+0x3a>
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
	uint32_t clock = 0;
   80c94:	2500      	movs	r5, #0

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
   80c96:	6860      	ldr	r0, [r4, #4]
   80c98:	b140      	cbz	r0, 80cac <pwm_init+0x34>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
   80c9a:	68a1      	ldr	r1, [r4, #8]
   80c9c:	4b05      	ldr	r3, [pc, #20]	; (80cb4 <pwm_init+0x3c>)
   80c9e:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
   80ca0:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80ca4:	4298      	cmp	r0, r3
   80ca6:	d004      	beq.n	80cb2 <pwm_init+0x3a>
			return result;
		}

		clock |= (result << 16);
   80ca8:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
   80cac:	6035      	str	r5, [r6, #0]
#endif
	return 0;
   80cae:	2000      	movs	r0, #0
   80cb0:	bd70      	pop	{r4, r5, r6, pc}
}
   80cb2:	bd70      	pop	{r4, r5, r6, pc}
   80cb4:	00080c21 	.word	0x00080c21

00080cb8 <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
   80cb8:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
   80cba:	680b      	ldr	r3, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   80cbc:	8a8c      	ldrh	r4, [r1, #20]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80cbe:	684a      	ldr	r2, [r1, #4]
   80cc0:	f002 020f 	and.w	r2, r2, #15
   80cc4:	4314      	orrs	r4, r2
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
   80cc6:	890d      	ldrh	r5, [r1, #8]
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   80cc8:	432c      	orrs	r4, r5
   80cca:	7a8a      	ldrb	r2, [r1, #10]
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
   80ccc:	ea44 2442 	orr.w	r4, r4, r2, lsl #9
			(p_channel->b_deadtime_generator << 16) |
   80cd0:	7d8a      	ldrb	r2, [r1, #22]
   80cd2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
   80cd6:	7dca      	ldrb	r2, [r1, #23]
   80cd8:	ea44 4442 	orr.w	r4, r4, r2, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
   80cdc:	7e0a      	ldrb	r2, [r1, #24]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80cde:	ea44 4482 	orr.w	r4, r4, r2, lsl #18
   80ce2:	eb00 1243 	add.w	r2, r0, r3, lsl #5
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
   80ce6:	f8c2 4200 	str.w	r4, [r2, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
   80cea:	68cc      	ldr	r4, [r1, #12]
   80cec:	f8c2 4204 	str.w	r4, [r2, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
   80cf0:	690c      	ldr	r4, [r1, #16]
   80cf2:	f8c2 420c 	str.w	r4, [r2, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
   80cf6:	7d8a      	ldrb	r2, [r1, #22]
   80cf8:	b13a      	cbz	r2, 80d0a <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
   80cfa:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
   80cfc:	8b4a      	ldrh	r2, [r1, #26]
   80cfe:	ea42 4404 	orr.w	r4, r2, r4, lsl #16
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
   80d02:	eb00 1243 	add.w	r2, r0, r3, lsl #5
   80d06:	f8c2 4218 	str.w	r4, [r2, #536]	; 0x218
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
   80d0a:	6c85      	ldr	r5, [r0, #72]	; 0x48
   80d0c:	f04f 1201 	mov.w	r2, #65537	; 0x10001
   80d10:	409a      	lsls	r2, r3
   80d12:	43d2      	mvns	r2, r2
   80d14:	4015      	ands	r5, r2
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
   80d16:	7fce      	ldrb	r6, [r1, #31]
   80d18:	409e      	lsls	r6, r3
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
   80d1a:	7f8c      	ldrb	r4, [r1, #30]
   80d1c:	409c      	lsls	r4, r3
   80d1e:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   80d22:	432c      	orrs	r4, r5
			(((p_channel->output_selection.b_override_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
   80d24:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
   80d26:	6c44      	ldr	r4, [r0, #68]	; 0x44
   80d28:	4022      	ands	r2, r4
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
   80d2a:	f891 5021 	ldrb.w	r5, [r1, #33]	; 0x21
   80d2e:	409d      	lsls	r5, r3
					<< 16);
	p_pwm->PWM_OS = tmp_reg;

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
   80d30:	f891 4020 	ldrb.w	r4, [r1, #32]
   80d34:	409c      	lsls	r4, r3
   80d36:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   80d3a:	4322      	orrs	r2, r4
			(((p_channel->output_selection.override_level_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
   80d3c:	6442      	str	r2, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
   80d3e:	2201      	movs	r2, #1
   80d40:	409a      	lsls	r2, r3
	if (p_channel->b_sync_ch) {
   80d42:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   80d46:	b11c      	cbz	r4, 80d50 <pwm_channel_init+0x98>
		p_pwm->PWM_SCM |= channel;
   80d48:	6a04      	ldr	r4, [r0, #32]
   80d4a:	4314      	orrs	r4, r2
   80d4c:	6204      	str	r4, [r0, #32]
   80d4e:	e003      	b.n	80d58 <pwm_channel_init+0xa0>
	} else {
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
   80d50:	6a04      	ldr	r4, [r0, #32]
   80d52:	ea24 0402 	bic.w	r4, r4, r2
   80d56:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
   80d58:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   80d5c:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
   80d5e:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80d60:	bf0c      	ite	eq
   80d62:	4314      	orreq	r4, r2
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
   80d64:	4394      	bicne	r4, r2
   80d66:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
   80d68:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   80d6c:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
   80d6e:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80d70:	bf0c      	ite	eq
   80d72:	ea44 4202 	orreq.w	r2, r4, r2, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
   80d76:	ea24 4202 	bicne.w	r2, r4, r2, lsl #16
   80d7a:	6682      	str	r2, [r0, #104]	; 0x68
	}
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
   80d7c:	2b03      	cmp	r3, #3
   80d7e:	d80c      	bhi.n	80d9a <pwm_channel_init+0xe2>
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE1;
   80d80:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
		ch_num *= 8;
   80d82:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE1;
		fault_enable_reg &= ~(0xFF << ch_num);
   80d84:	22ff      	movs	r2, #255	; 0xff
   80d86:	409a      	lsls	r2, r3
   80d88:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   80d8c:	f891 1023 	ldrb.w	r1, [r1, #35]	; 0x23
   80d90:	fa01 f303 	lsl.w	r3, r1, r3
   80d94:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE1 = fault_enable_reg;
   80d96:	66c3      	str	r3, [r0, #108]	; 0x6c
   80d98:	e00c      	b.n	80db4 <pwm_channel_init+0xfc>
	} else {
		ch_num -= 4;
   80d9a:	3b04      	subs	r3, #4
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE2;
   80d9c:	6f04      	ldr	r4, [r0, #112]	; 0x70
		fault_enable_reg &= ~(0xFF << ch_num);
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
		p_pwm->PWM_FPE1 = fault_enable_reg;
	} else {
		ch_num -= 4;
		ch_num *= 8;
   80d9e:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE2;
		fault_enable_reg &= ~(0xFF << ch_num);
   80da0:	22ff      	movs	r2, #255	; 0xff
   80da2:	409a      	lsls	r2, r3
   80da4:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   80da8:	f891 1023 	ldrb.w	r1, [r1, #35]	; 0x23
   80dac:	fa01 f303 	lsl.w	r3, r1, r3
   80db0:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE2 = fault_enable_reg;
   80db2:	6703      	str	r3, [r0, #112]	; 0x70
			PWM_CAE_ADEDGV(p_channel->ul_additional_edge) |
			p_channel->additional_edge_mode;
#endif

	return 0;
}
   80db4:	2000      	movs	r0, #0
   80db6:	bc70      	pop	{r4, r5, r6}
   80db8:	4770      	bx	lr
   80dba:	bf00      	nop

00080dbc <pwm_channel_update_duty>:
 *
 * \retval 0 if changing succeeds, otherwise fails.
 */
uint32_t pwm_channel_update_duty(Pwm *p_pwm, pwm_channel_t *p_channel,
		uint32_t ul_duty)
{
   80dbc:	b410      	push	{r4}
	uint32_t ch_num = p_channel->channel;
   80dbe:	680c      	ldr	r4, [r1, #0]

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
   80dc0:	690b      	ldr	r3, [r1, #16]
   80dc2:	4293      	cmp	r3, r2
   80dc4:	d306      	bcc.n	80dd4 <pwm_channel_update_duty+0x18>
		return PWM_INVALID_ARGUMENT;
	} else {
		/* Save new duty cycle value */
		p_channel->ul_duty = ul_duty;
   80dc6:	60ca      	str	r2, [r1, #12]
		mode &= ~PWM_CMR_CPD;
		p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = mode;

		p_pwm->PWM_CH_NUM[ch_num].PWM_CUPD = ul_duty;
#else
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
   80dc8:	eb00 1044 	add.w	r0, r0, r4, lsl #5
   80dcc:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
#endif
	}

	return 0;
   80dd0:	2000      	movs	r0, #0
   80dd2:	e001      	b.n	80dd8 <pwm_channel_update_duty+0x1c>
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
		return PWM_INVALID_ARGUMENT;
   80dd4:	f64f 70ff 	movw	r0, #65535	; 0xffff
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
#endif
	}

	return 0;
}
   80dd8:	f85d 4b04 	ldr.w	r4, [sp], #4
   80ddc:	4770      	bx	lr
   80dde:	bf00      	nop

00080de0 <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
   80de0:	2301      	movs	r3, #1
   80de2:	fa03 f101 	lsl.w	r1, r3, r1
   80de6:	6041      	str	r1, [r0, #4]
   80de8:	4770      	bx	lr
   80dea:	bf00      	nop

00080dec <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
   80dec:	2301      	movs	r3, #1
   80dee:	fa03 f101 	lsl.w	r1, r3, r1
   80df2:	6081      	str	r1, [r0, #8]
   80df4:	4770      	bx	lr
   80df6:	bf00      	nop

00080df8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80df8:	e7fe      	b.n	80df8 <Dummy_Handler>
   80dfa:	bf00      	nop

00080dfc <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80dfc:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80dfe:	4b1e      	ldr	r3, [pc, #120]	; (80e78 <Reset_Handler+0x7c>)
   80e00:	4a1e      	ldr	r2, [pc, #120]	; (80e7c <Reset_Handler+0x80>)
   80e02:	429a      	cmp	r2, r3
   80e04:	d003      	beq.n	80e0e <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80e06:	4b1e      	ldr	r3, [pc, #120]	; (80e80 <Reset_Handler+0x84>)
   80e08:	4a1b      	ldr	r2, [pc, #108]	; (80e78 <Reset_Handler+0x7c>)
   80e0a:	429a      	cmp	r2, r3
   80e0c:	d304      	bcc.n	80e18 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e0e:	4b1d      	ldr	r3, [pc, #116]	; (80e84 <Reset_Handler+0x88>)
   80e10:	4a1d      	ldr	r2, [pc, #116]	; (80e88 <Reset_Handler+0x8c>)
   80e12:	429a      	cmp	r2, r3
   80e14:	d30f      	bcc.n	80e36 <Reset_Handler+0x3a>
   80e16:	e01a      	b.n	80e4e <Reset_Handler+0x52>
   80e18:	4b1c      	ldr	r3, [pc, #112]	; (80e8c <Reset_Handler+0x90>)
   80e1a:	4c1d      	ldr	r4, [pc, #116]	; (80e90 <Reset_Handler+0x94>)
   80e1c:	1ae4      	subs	r4, r4, r3
   80e1e:	f024 0403 	bic.w	r4, r4, #3
   80e22:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80e24:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80e26:	4814      	ldr	r0, [pc, #80]	; (80e78 <Reset_Handler+0x7c>)
   80e28:	4914      	ldr	r1, [pc, #80]	; (80e7c <Reset_Handler+0x80>)
   80e2a:	585a      	ldr	r2, [r3, r1]
   80e2c:	501a      	str	r2, [r3, r0]
   80e2e:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80e30:	42a3      	cmp	r3, r4
   80e32:	d1fa      	bne.n	80e2a <Reset_Handler+0x2e>
   80e34:	e7eb      	b.n	80e0e <Reset_Handler+0x12>
   80e36:	4b17      	ldr	r3, [pc, #92]	; (80e94 <Reset_Handler+0x98>)
   80e38:	4917      	ldr	r1, [pc, #92]	; (80e98 <Reset_Handler+0x9c>)
   80e3a:	1ac9      	subs	r1, r1, r3
   80e3c:	f021 0103 	bic.w	r1, r1, #3
   80e40:	1d1a      	adds	r2, r3, #4
   80e42:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80e44:	2200      	movs	r2, #0
   80e46:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e4a:	428b      	cmp	r3, r1
   80e4c:	d1fb      	bne.n	80e46 <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80e4e:	4a13      	ldr	r2, [pc, #76]	; (80e9c <Reset_Handler+0xa0>)
   80e50:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80e54:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80e58:	4911      	ldr	r1, [pc, #68]	; (80ea0 <Reset_Handler+0xa4>)
   80e5a:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80e5c:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80e60:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80e64:	d203      	bcs.n	80e6e <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80e66:	688a      	ldr	r2, [r1, #8]
   80e68:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80e6c:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80e6e:	4b0d      	ldr	r3, [pc, #52]	; (80ea4 <Reset_Handler+0xa8>)
   80e70:	4798      	blx	r3

	/* Branch to main function */
	main();
   80e72:	4b0d      	ldr	r3, [pc, #52]	; (80ea8 <Reset_Handler+0xac>)
   80e74:	4798      	blx	r3
   80e76:	e7fe      	b.n	80e76 <Reset_Handler+0x7a>
   80e78:	20070000 	.word	0x20070000
   80e7c:	00083f48 	.word	0x00083f48
   80e80:	200709a4 	.word	0x200709a4
   80e84:	20070b70 	.word	0x20070b70
   80e88:	200709a4 	.word	0x200709a4
   80e8c:	20070004 	.word	0x20070004
   80e90:	200709a7 	.word	0x200709a7
   80e94:	200709a0 	.word	0x200709a0
   80e98:	20070b6b 	.word	0x20070b6b
   80e9c:	00080000 	.word	0x00080000
   80ea0:	e000ed00 	.word	0xe000ed00
   80ea4:	00080efd 	.word	0x00080efd
   80ea8:	00080149 	.word	0x00080149

00080eac <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80eac:	4b09      	ldr	r3, [pc, #36]	; (80ed4 <_sbrk+0x28>)
   80eae:	681b      	ldr	r3, [r3, #0]
   80eb0:	b913      	cbnz	r3, 80eb8 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80eb2:	4a09      	ldr	r2, [pc, #36]	; (80ed8 <_sbrk+0x2c>)
   80eb4:	4b07      	ldr	r3, [pc, #28]	; (80ed4 <_sbrk+0x28>)
   80eb6:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80eb8:	4b06      	ldr	r3, [pc, #24]	; (80ed4 <_sbrk+0x28>)
   80eba:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80ebc:	181a      	adds	r2, r3, r0
   80ebe:	4907      	ldr	r1, [pc, #28]	; (80edc <_sbrk+0x30>)
   80ec0:	4291      	cmp	r1, r2
   80ec2:	db04      	blt.n	80ece <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80ec4:	4610      	mov	r0, r2
   80ec6:	4a03      	ldr	r2, [pc, #12]	; (80ed4 <_sbrk+0x28>)
   80ec8:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80eca:	4618      	mov	r0, r3
   80ecc:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80ece:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80ed2:	4770      	bx	lr
   80ed4:	20070ad8 	.word	0x20070ad8
   80ed8:	20072b70 	.word	0x20072b70
   80edc:	20087ffc 	.word	0x20087ffc

00080ee0 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   80ee0:	f04f 30ff 	mov.w	r0, #4294967295
   80ee4:	4770      	bx	lr
   80ee6:	bf00      	nop

00080ee8 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   80ee8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80eec:	604b      	str	r3, [r1, #4]

	return 0;
}
   80eee:	2000      	movs	r0, #0
   80ef0:	4770      	bx	lr
   80ef2:	bf00      	nop

00080ef4 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   80ef4:	2001      	movs	r0, #1
   80ef6:	4770      	bx	lr

00080ef8 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   80ef8:	2000      	movs	r0, #0
   80efa:	4770      	bx	lr

00080efc <__libc_init_array>:
   80efc:	b570      	push	{r4, r5, r6, lr}
   80efe:	4e0f      	ldr	r6, [pc, #60]	; (80f3c <__libc_init_array+0x40>)
   80f00:	4d0f      	ldr	r5, [pc, #60]	; (80f40 <__libc_init_array+0x44>)
   80f02:	1b76      	subs	r6, r6, r5
   80f04:	10b6      	asrs	r6, r6, #2
   80f06:	d007      	beq.n	80f18 <__libc_init_array+0x1c>
   80f08:	3d04      	subs	r5, #4
   80f0a:	2400      	movs	r4, #0
   80f0c:	3401      	adds	r4, #1
   80f0e:	f855 3f04 	ldr.w	r3, [r5, #4]!
   80f12:	4798      	blx	r3
   80f14:	42a6      	cmp	r6, r4
   80f16:	d1f9      	bne.n	80f0c <__libc_init_array+0x10>
   80f18:	4e0a      	ldr	r6, [pc, #40]	; (80f44 <__libc_init_array+0x48>)
   80f1a:	4d0b      	ldr	r5, [pc, #44]	; (80f48 <__libc_init_array+0x4c>)
   80f1c:	f002 fffe 	bl	83f1c <_init>
   80f20:	1b76      	subs	r6, r6, r5
   80f22:	10b6      	asrs	r6, r6, #2
   80f24:	d008      	beq.n	80f38 <__libc_init_array+0x3c>
   80f26:	3d04      	subs	r5, #4
   80f28:	2400      	movs	r4, #0
   80f2a:	3401      	adds	r4, #1
   80f2c:	f855 3f04 	ldr.w	r3, [r5, #4]!
   80f30:	4798      	blx	r3
   80f32:	42a6      	cmp	r6, r4
   80f34:	d1f9      	bne.n	80f2a <__libc_init_array+0x2e>
   80f36:	bd70      	pop	{r4, r5, r6, pc}
   80f38:	bd70      	pop	{r4, r5, r6, pc}
   80f3a:	bf00      	nop
   80f3c:	00083f28 	.word	0x00083f28
   80f40:	00083f28 	.word	0x00083f28
   80f44:	00083f30 	.word	0x00083f30
   80f48:	00083f28 	.word	0x00083f28

00080f4c <iprintf>:
   80f4c:	b40f      	push	{r0, r1, r2, r3}
   80f4e:	b510      	push	{r4, lr}
   80f50:	4b07      	ldr	r3, [pc, #28]	; (80f70 <iprintf+0x24>)
   80f52:	b082      	sub	sp, #8
   80f54:	ac04      	add	r4, sp, #16
   80f56:	f854 2b04 	ldr.w	r2, [r4], #4
   80f5a:	6818      	ldr	r0, [r3, #0]
   80f5c:	4623      	mov	r3, r4
   80f5e:	6881      	ldr	r1, [r0, #8]
   80f60:	9401      	str	r4, [sp, #4]
   80f62:	f000 f945 	bl	811f0 <_vfiprintf_r>
   80f66:	b002      	add	sp, #8
   80f68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80f6c:	b004      	add	sp, #16
   80f6e:	4770      	bx	lr
   80f70:	20070568 	.word	0x20070568

00080f74 <memset>:
   80f74:	b4f0      	push	{r4, r5, r6, r7}
   80f76:	0784      	lsls	r4, r0, #30
   80f78:	d043      	beq.n	81002 <memset+0x8e>
   80f7a:	1e54      	subs	r4, r2, #1
   80f7c:	2a00      	cmp	r2, #0
   80f7e:	d03e      	beq.n	80ffe <memset+0x8a>
   80f80:	b2cd      	uxtb	r5, r1
   80f82:	4603      	mov	r3, r0
   80f84:	e003      	b.n	80f8e <memset+0x1a>
   80f86:	1e62      	subs	r2, r4, #1
   80f88:	2c00      	cmp	r4, #0
   80f8a:	d038      	beq.n	80ffe <memset+0x8a>
   80f8c:	4614      	mov	r4, r2
   80f8e:	f803 5b01 	strb.w	r5, [r3], #1
   80f92:	079a      	lsls	r2, r3, #30
   80f94:	d1f7      	bne.n	80f86 <memset+0x12>
   80f96:	2c03      	cmp	r4, #3
   80f98:	d92a      	bls.n	80ff0 <memset+0x7c>
   80f9a:	b2cd      	uxtb	r5, r1
   80f9c:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   80fa0:	2c0f      	cmp	r4, #15
   80fa2:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   80fa6:	d915      	bls.n	80fd4 <memset+0x60>
   80fa8:	f1a4 0710 	sub.w	r7, r4, #16
   80fac:	093f      	lsrs	r7, r7, #4
   80fae:	f103 0610 	add.w	r6, r3, #16
   80fb2:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   80fb6:	461a      	mov	r2, r3
   80fb8:	6015      	str	r5, [r2, #0]
   80fba:	6055      	str	r5, [r2, #4]
   80fbc:	6095      	str	r5, [r2, #8]
   80fbe:	60d5      	str	r5, [r2, #12]
   80fc0:	3210      	adds	r2, #16
   80fc2:	42b2      	cmp	r2, r6
   80fc4:	d1f8      	bne.n	80fb8 <memset+0x44>
   80fc6:	f004 040f 	and.w	r4, r4, #15
   80fca:	3701      	adds	r7, #1
   80fcc:	2c03      	cmp	r4, #3
   80fce:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   80fd2:	d90d      	bls.n	80ff0 <memset+0x7c>
   80fd4:	461e      	mov	r6, r3
   80fd6:	4622      	mov	r2, r4
   80fd8:	3a04      	subs	r2, #4
   80fda:	2a03      	cmp	r2, #3
   80fdc:	f846 5b04 	str.w	r5, [r6], #4
   80fe0:	d8fa      	bhi.n	80fd8 <memset+0x64>
   80fe2:	1f22      	subs	r2, r4, #4
   80fe4:	f022 0203 	bic.w	r2, r2, #3
   80fe8:	3204      	adds	r2, #4
   80fea:	4413      	add	r3, r2
   80fec:	f004 0403 	and.w	r4, r4, #3
   80ff0:	b12c      	cbz	r4, 80ffe <memset+0x8a>
   80ff2:	b2c9      	uxtb	r1, r1
   80ff4:	441c      	add	r4, r3
   80ff6:	f803 1b01 	strb.w	r1, [r3], #1
   80ffa:	42a3      	cmp	r3, r4
   80ffc:	d1fb      	bne.n	80ff6 <memset+0x82>
   80ffe:	bcf0      	pop	{r4, r5, r6, r7}
   81000:	4770      	bx	lr
   81002:	4614      	mov	r4, r2
   81004:	4603      	mov	r3, r0
   81006:	e7c6      	b.n	80f96 <memset+0x22>

00081008 <setbuf>:
   81008:	2900      	cmp	r1, #0
   8100a:	bf0c      	ite	eq
   8100c:	2202      	moveq	r2, #2
   8100e:	2200      	movne	r2, #0
   81010:	f44f 6380 	mov.w	r3, #1024	; 0x400
   81014:	f000 b800 	b.w	81018 <setvbuf>

00081018 <setvbuf>:
   81018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8101c:	4d3c      	ldr	r5, [pc, #240]	; (81110 <setvbuf+0xf8>)
   8101e:	4604      	mov	r4, r0
   81020:	682d      	ldr	r5, [r5, #0]
   81022:	4688      	mov	r8, r1
   81024:	4616      	mov	r6, r2
   81026:	461f      	mov	r7, r3
   81028:	b115      	cbz	r5, 81030 <setvbuf+0x18>
   8102a:	6bab      	ldr	r3, [r5, #56]	; 0x38
   8102c:	2b00      	cmp	r3, #0
   8102e:	d04f      	beq.n	810d0 <setvbuf+0xb8>
   81030:	2e02      	cmp	r6, #2
   81032:	d830      	bhi.n	81096 <setvbuf+0x7e>
   81034:	2f00      	cmp	r7, #0
   81036:	db2e      	blt.n	81096 <setvbuf+0x7e>
   81038:	4628      	mov	r0, r5
   8103a:	4621      	mov	r1, r4
   8103c:	f001 f856 	bl	820ec <_fflush_r>
   81040:	89a3      	ldrh	r3, [r4, #12]
   81042:	2200      	movs	r2, #0
   81044:	6062      	str	r2, [r4, #4]
   81046:	61a2      	str	r2, [r4, #24]
   81048:	061a      	lsls	r2, r3, #24
   8104a:	d428      	bmi.n	8109e <setvbuf+0x86>
   8104c:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   81050:	b29b      	uxth	r3, r3
   81052:	2e02      	cmp	r6, #2
   81054:	81a3      	strh	r3, [r4, #12]
   81056:	d02d      	beq.n	810b4 <setvbuf+0x9c>
   81058:	f1b8 0f00 	cmp.w	r8, #0
   8105c:	d03c      	beq.n	810d8 <setvbuf+0xc0>
   8105e:	2e01      	cmp	r6, #1
   81060:	d013      	beq.n	8108a <setvbuf+0x72>
   81062:	b29b      	uxth	r3, r3
   81064:	f003 0008 	and.w	r0, r3, #8
   81068:	4a2a      	ldr	r2, [pc, #168]	; (81114 <setvbuf+0xfc>)
   8106a:	b280      	uxth	r0, r0
   8106c:	63ea      	str	r2, [r5, #60]	; 0x3c
   8106e:	f8c4 8000 	str.w	r8, [r4]
   81072:	f8c4 8010 	str.w	r8, [r4, #16]
   81076:	6167      	str	r7, [r4, #20]
   81078:	b178      	cbz	r0, 8109a <setvbuf+0x82>
   8107a:	f013 0f03 	tst.w	r3, #3
   8107e:	bf18      	it	ne
   81080:	2700      	movne	r7, #0
   81082:	60a7      	str	r7, [r4, #8]
   81084:	2000      	movs	r0, #0
   81086:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8108a:	f043 0301 	orr.w	r3, r3, #1
   8108e:	427a      	negs	r2, r7
   81090:	81a3      	strh	r3, [r4, #12]
   81092:	61a2      	str	r2, [r4, #24]
   81094:	e7e5      	b.n	81062 <setvbuf+0x4a>
   81096:	f04f 30ff 	mov.w	r0, #4294967295
   8109a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8109e:	4628      	mov	r0, r5
   810a0:	6921      	ldr	r1, [r4, #16]
   810a2:	f001 f983 	bl	823ac <_free_r>
   810a6:	89a3      	ldrh	r3, [r4, #12]
   810a8:	2e02      	cmp	r6, #2
   810aa:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   810ae:	b29b      	uxth	r3, r3
   810b0:	81a3      	strh	r3, [r4, #12]
   810b2:	d1d1      	bne.n	81058 <setvbuf+0x40>
   810b4:	2000      	movs	r0, #0
   810b6:	f104 0243 	add.w	r2, r4, #67	; 0x43
   810ba:	f043 0302 	orr.w	r3, r3, #2
   810be:	2500      	movs	r5, #0
   810c0:	2101      	movs	r1, #1
   810c2:	81a3      	strh	r3, [r4, #12]
   810c4:	60a5      	str	r5, [r4, #8]
   810c6:	6022      	str	r2, [r4, #0]
   810c8:	6122      	str	r2, [r4, #16]
   810ca:	6161      	str	r1, [r4, #20]
   810cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   810d0:	4628      	mov	r0, r5
   810d2:	f001 f827 	bl	82124 <__sinit>
   810d6:	e7ab      	b.n	81030 <setvbuf+0x18>
   810d8:	2f00      	cmp	r7, #0
   810da:	bf08      	it	eq
   810dc:	f44f 6780 	moveq.w	r7, #1024	; 0x400
   810e0:	4638      	mov	r0, r7
   810e2:	f001 fc59 	bl	82998 <malloc>
   810e6:	4680      	mov	r8, r0
   810e8:	b128      	cbz	r0, 810f6 <setvbuf+0xde>
   810ea:	89a3      	ldrh	r3, [r4, #12]
   810ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   810f0:	b29b      	uxth	r3, r3
   810f2:	81a3      	strh	r3, [r4, #12]
   810f4:	e7b3      	b.n	8105e <setvbuf+0x46>
   810f6:	f44f 6080 	mov.w	r0, #1024	; 0x400
   810fa:	f001 fc4d 	bl	82998 <malloc>
   810fe:	4680      	mov	r8, r0
   81100:	b918      	cbnz	r0, 8110a <setvbuf+0xf2>
   81102:	89a3      	ldrh	r3, [r4, #12]
   81104:	f04f 30ff 	mov.w	r0, #4294967295
   81108:	e7d5      	b.n	810b6 <setvbuf+0x9e>
   8110a:	f44f 6780 	mov.w	r7, #1024	; 0x400
   8110e:	e7ec      	b.n	810ea <setvbuf+0xd2>
   81110:	20070568 	.word	0x20070568
   81114:	00082119 	.word	0x00082119

00081118 <strlen>:
   81118:	f020 0103 	bic.w	r1, r0, #3
   8111c:	f010 0003 	ands.w	r0, r0, #3
   81120:	f1c0 0000 	rsb	r0, r0, #0
   81124:	f851 3b04 	ldr.w	r3, [r1], #4
   81128:	f100 0c04 	add.w	ip, r0, #4
   8112c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81130:	f06f 0200 	mvn.w	r2, #0
   81134:	bf1c      	itt	ne
   81136:	fa22 f20c 	lsrne.w	r2, r2, ip
   8113a:	4313      	orrne	r3, r2
   8113c:	f04f 0c01 	mov.w	ip, #1
   81140:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   81144:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81148:	eba3 020c 	sub.w	r2, r3, ip
   8114c:	ea22 0203 	bic.w	r2, r2, r3
   81150:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   81154:	bf04      	itt	eq
   81156:	f851 3b04 	ldreq.w	r3, [r1], #4
   8115a:	3004      	addeq	r0, #4
   8115c:	d0f4      	beq.n	81148 <strlen+0x30>
   8115e:	f013 0fff 	tst.w	r3, #255	; 0xff
   81162:	bf1f      	itttt	ne
   81164:	3001      	addne	r0, #1
   81166:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   8116a:	3001      	addne	r0, #1
   8116c:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   81170:	bf18      	it	ne
   81172:	3001      	addne	r0, #1
   81174:	4770      	bx	lr
   81176:	bf00      	nop

00081178 <__sprint_r.part.0>:
   81178:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   8117a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8117e:	049c      	lsls	r4, r3, #18
   81180:	460e      	mov	r6, r1
   81182:	4680      	mov	r8, r0
   81184:	4691      	mov	r9, r2
   81186:	d52a      	bpl.n	811de <__sprint_r.part.0+0x66>
   81188:	6893      	ldr	r3, [r2, #8]
   8118a:	6812      	ldr	r2, [r2, #0]
   8118c:	f102 0a08 	add.w	sl, r2, #8
   81190:	b31b      	cbz	r3, 811da <__sprint_r.part.0+0x62>
   81192:	e91a 00a0 	ldmdb	sl, {r5, r7}
   81196:	08bf      	lsrs	r7, r7, #2
   81198:	d017      	beq.n	811ca <__sprint_r.part.0+0x52>
   8119a:	3d04      	subs	r5, #4
   8119c:	2400      	movs	r4, #0
   8119e:	e001      	b.n	811a4 <__sprint_r.part.0+0x2c>
   811a0:	42a7      	cmp	r7, r4
   811a2:	d010      	beq.n	811c6 <__sprint_r.part.0+0x4e>
   811a4:	4640      	mov	r0, r8
   811a6:	f855 1f04 	ldr.w	r1, [r5, #4]!
   811aa:	4632      	mov	r2, r6
   811ac:	f001 f850 	bl	82250 <_fputwc_r>
   811b0:	1c43      	adds	r3, r0, #1
   811b2:	f104 0401 	add.w	r4, r4, #1
   811b6:	d1f3      	bne.n	811a0 <__sprint_r.part.0+0x28>
   811b8:	2300      	movs	r3, #0
   811ba:	f8c9 3008 	str.w	r3, [r9, #8]
   811be:	f8c9 3004 	str.w	r3, [r9, #4]
   811c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   811c6:	f8d9 3008 	ldr.w	r3, [r9, #8]
   811ca:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
   811ce:	f8c9 3008 	str.w	r3, [r9, #8]
   811d2:	f10a 0a08 	add.w	sl, sl, #8
   811d6:	2b00      	cmp	r3, #0
   811d8:	d1db      	bne.n	81192 <__sprint_r.part.0+0x1a>
   811da:	2000      	movs	r0, #0
   811dc:	e7ec      	b.n	811b8 <__sprint_r.part.0+0x40>
   811de:	f001 f9b1 	bl	82544 <__sfvwrite_r>
   811e2:	2300      	movs	r3, #0
   811e4:	f8c9 3008 	str.w	r3, [r9, #8]
   811e8:	f8c9 3004 	str.w	r3, [r9, #4]
   811ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000811f0 <_vfiprintf_r>:
   811f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   811f4:	b0b1      	sub	sp, #196	; 0xc4
   811f6:	461c      	mov	r4, r3
   811f8:	9102      	str	r1, [sp, #8]
   811fa:	4690      	mov	r8, r2
   811fc:	9308      	str	r3, [sp, #32]
   811fe:	9006      	str	r0, [sp, #24]
   81200:	b118      	cbz	r0, 8120a <_vfiprintf_r+0x1a>
   81202:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81204:	2b00      	cmp	r3, #0
   81206:	f000 80e8 	beq.w	813da <_vfiprintf_r+0x1ea>
   8120a:	9d02      	ldr	r5, [sp, #8]
   8120c:	89ab      	ldrh	r3, [r5, #12]
   8120e:	b29a      	uxth	r2, r3
   81210:	0490      	lsls	r0, r2, #18
   81212:	d407      	bmi.n	81224 <_vfiprintf_r+0x34>
   81214:	6e6a      	ldr	r2, [r5, #100]	; 0x64
   81216:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8121a:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
   8121e:	81ab      	strh	r3, [r5, #12]
   81220:	b29a      	uxth	r2, r3
   81222:	6669      	str	r1, [r5, #100]	; 0x64
   81224:	0711      	lsls	r1, r2, #28
   81226:	f140 80b7 	bpl.w	81398 <_vfiprintf_r+0x1a8>
   8122a:	f8dd b008 	ldr.w	fp, [sp, #8]
   8122e:	f8db 3010 	ldr.w	r3, [fp, #16]
   81232:	2b00      	cmp	r3, #0
   81234:	f000 80b0 	beq.w	81398 <_vfiprintf_r+0x1a8>
   81238:	f002 021a 	and.w	r2, r2, #26
   8123c:	2a0a      	cmp	r2, #10
   8123e:	f000 80b7 	beq.w	813b0 <_vfiprintf_r+0x1c0>
   81242:	2300      	movs	r3, #0
   81244:	f10d 0980 	add.w	r9, sp, #128	; 0x80
   81248:	930a      	str	r3, [sp, #40]	; 0x28
   8124a:	9315      	str	r3, [sp, #84]	; 0x54
   8124c:	9314      	str	r3, [sp, #80]	; 0x50
   8124e:	9309      	str	r3, [sp, #36]	; 0x24
   81250:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   81254:	464e      	mov	r6, r9
   81256:	f898 3000 	ldrb.w	r3, [r8]
   8125a:	2b00      	cmp	r3, #0
   8125c:	f000 84c8 	beq.w	81bf0 <_vfiprintf_r+0xa00>
   81260:	2b25      	cmp	r3, #37	; 0x25
   81262:	f000 84c5 	beq.w	81bf0 <_vfiprintf_r+0xa00>
   81266:	f108 0201 	add.w	r2, r8, #1
   8126a:	e001      	b.n	81270 <_vfiprintf_r+0x80>
   8126c:	2b25      	cmp	r3, #37	; 0x25
   8126e:	d004      	beq.n	8127a <_vfiprintf_r+0x8a>
   81270:	7813      	ldrb	r3, [r2, #0]
   81272:	4614      	mov	r4, r2
   81274:	3201      	adds	r2, #1
   81276:	2b00      	cmp	r3, #0
   81278:	d1f8      	bne.n	8126c <_vfiprintf_r+0x7c>
   8127a:	ebc8 0504 	rsb	r5, r8, r4
   8127e:	b195      	cbz	r5, 812a6 <_vfiprintf_r+0xb6>
   81280:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81282:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81284:	3301      	adds	r3, #1
   81286:	442a      	add	r2, r5
   81288:	2b07      	cmp	r3, #7
   8128a:	f8c6 8000 	str.w	r8, [r6]
   8128e:	6075      	str	r5, [r6, #4]
   81290:	9215      	str	r2, [sp, #84]	; 0x54
   81292:	9314      	str	r3, [sp, #80]	; 0x50
   81294:	dd7b      	ble.n	8138e <_vfiprintf_r+0x19e>
   81296:	2a00      	cmp	r2, #0
   81298:	f040 84d5 	bne.w	81c46 <_vfiprintf_r+0xa56>
   8129c:	9809      	ldr	r0, [sp, #36]	; 0x24
   8129e:	9214      	str	r2, [sp, #80]	; 0x50
   812a0:	4428      	add	r0, r5
   812a2:	464e      	mov	r6, r9
   812a4:	9009      	str	r0, [sp, #36]	; 0x24
   812a6:	7823      	ldrb	r3, [r4, #0]
   812a8:	2b00      	cmp	r3, #0
   812aa:	f000 83ed 	beq.w	81a88 <_vfiprintf_r+0x898>
   812ae:	2100      	movs	r1, #0
   812b0:	f04f 0200 	mov.w	r2, #0
   812b4:	f04f 3cff 	mov.w	ip, #4294967295
   812b8:	7863      	ldrb	r3, [r4, #1]
   812ba:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
   812be:	9104      	str	r1, [sp, #16]
   812c0:	468a      	mov	sl, r1
   812c2:	f104 0801 	add.w	r8, r4, #1
   812c6:	4608      	mov	r0, r1
   812c8:	4665      	mov	r5, ip
   812ca:	f108 0801 	add.w	r8, r8, #1
   812ce:	f1a3 0220 	sub.w	r2, r3, #32
   812d2:	2a58      	cmp	r2, #88	; 0x58
   812d4:	f200 82d9 	bhi.w	8188a <_vfiprintf_r+0x69a>
   812d8:	e8df f012 	tbh	[pc, r2, lsl #1]
   812dc:	02d702cb 	.word	0x02d702cb
   812e0:	02d202d7 	.word	0x02d202d7
   812e4:	02d702d7 	.word	0x02d702d7
   812e8:	02d702d7 	.word	0x02d702d7
   812ec:	02d702d7 	.word	0x02d702d7
   812f0:	028f0282 	.word	0x028f0282
   812f4:	008402d7 	.word	0x008402d7
   812f8:	02d70293 	.word	0x02d70293
   812fc:	0196012b 	.word	0x0196012b
   81300:	01960196 	.word	0x01960196
   81304:	01960196 	.word	0x01960196
   81308:	01960196 	.word	0x01960196
   8130c:	01960196 	.word	0x01960196
   81310:	02d702d7 	.word	0x02d702d7
   81314:	02d702d7 	.word	0x02d702d7
   81318:	02d702d7 	.word	0x02d702d7
   8131c:	02d702d7 	.word	0x02d702d7
   81320:	02d702d7 	.word	0x02d702d7
   81324:	02d70130 	.word	0x02d70130
   81328:	02d702d7 	.word	0x02d702d7
   8132c:	02d702d7 	.word	0x02d702d7
   81330:	02d702d7 	.word	0x02d702d7
   81334:	02d702d7 	.word	0x02d702d7
   81338:	017b02d7 	.word	0x017b02d7
   8133c:	02d702d7 	.word	0x02d702d7
   81340:	02d702d7 	.word	0x02d702d7
   81344:	01a402d7 	.word	0x01a402d7
   81348:	02d702d7 	.word	0x02d702d7
   8134c:	02d701bf 	.word	0x02d701bf
   81350:	02d702d7 	.word	0x02d702d7
   81354:	02d702d7 	.word	0x02d702d7
   81358:	02d702d7 	.word	0x02d702d7
   8135c:	02d702d7 	.word	0x02d702d7
   81360:	01e402d7 	.word	0x01e402d7
   81364:	02d701fa 	.word	0x02d701fa
   81368:	02d702d7 	.word	0x02d702d7
   8136c:	01fa0216 	.word	0x01fa0216
   81370:	02d702d7 	.word	0x02d702d7
   81374:	02d7021b 	.word	0x02d7021b
   81378:	00890228 	.word	0x00890228
   8137c:	027d0266 	.word	0x027d0266
   81380:	023a02d7 	.word	0x023a02d7
   81384:	011902d7 	.word	0x011902d7
   81388:	02d702d7 	.word	0x02d702d7
   8138c:	02af      	.short	0x02af
   8138e:	3608      	adds	r6, #8
   81390:	9809      	ldr	r0, [sp, #36]	; 0x24
   81392:	4428      	add	r0, r5
   81394:	9009      	str	r0, [sp, #36]	; 0x24
   81396:	e786      	b.n	812a6 <_vfiprintf_r+0xb6>
   81398:	9806      	ldr	r0, [sp, #24]
   8139a:	9902      	ldr	r1, [sp, #8]
   8139c:	f000 fd90 	bl	81ec0 <__swsetup_r>
   813a0:	b9b0      	cbnz	r0, 813d0 <_vfiprintf_r+0x1e0>
   813a2:	9d02      	ldr	r5, [sp, #8]
   813a4:	89aa      	ldrh	r2, [r5, #12]
   813a6:	f002 021a 	and.w	r2, r2, #26
   813aa:	2a0a      	cmp	r2, #10
   813ac:	f47f af49 	bne.w	81242 <_vfiprintf_r+0x52>
   813b0:	f8dd b008 	ldr.w	fp, [sp, #8]
   813b4:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   813b8:	2b00      	cmp	r3, #0
   813ba:	f6ff af42 	blt.w	81242 <_vfiprintf_r+0x52>
   813be:	9806      	ldr	r0, [sp, #24]
   813c0:	4659      	mov	r1, fp
   813c2:	4642      	mov	r2, r8
   813c4:	4623      	mov	r3, r4
   813c6:	f000 fd3d 	bl	81e44 <__sbprintf>
   813ca:	b031      	add	sp, #196	; 0xc4
   813cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   813d0:	f04f 30ff 	mov.w	r0, #4294967295
   813d4:	b031      	add	sp, #196	; 0xc4
   813d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   813da:	f000 fea3 	bl	82124 <__sinit>
   813de:	e714      	b.n	8120a <_vfiprintf_r+0x1a>
   813e0:	4240      	negs	r0, r0
   813e2:	9308      	str	r3, [sp, #32]
   813e4:	f04a 0a04 	orr.w	sl, sl, #4
   813e8:	f898 3000 	ldrb.w	r3, [r8]
   813ec:	e76d      	b.n	812ca <_vfiprintf_r+0xda>
   813ee:	f01a 0320 	ands.w	r3, sl, #32
   813f2:	9004      	str	r0, [sp, #16]
   813f4:	46ac      	mov	ip, r5
   813f6:	f000 80f4 	beq.w	815e2 <_vfiprintf_r+0x3f2>
   813fa:	f8dd b020 	ldr.w	fp, [sp, #32]
   813fe:	f10b 0307 	add.w	r3, fp, #7
   81402:	f023 0307 	bic.w	r3, r3, #7
   81406:	f103 0408 	add.w	r4, r3, #8
   8140a:	9408      	str	r4, [sp, #32]
   8140c:	e9d3 4500 	ldrd	r4, r5, [r3]
   81410:	2300      	movs	r3, #0
   81412:	f04f 0000 	mov.w	r0, #0
   81416:	2100      	movs	r1, #0
   81418:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
   8141c:	f8cd c014 	str.w	ip, [sp, #20]
   81420:	9107      	str	r1, [sp, #28]
   81422:	f1bc 0f00 	cmp.w	ip, #0
   81426:	bfa8      	it	ge
   81428:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   8142c:	ea54 0205 	orrs.w	r2, r4, r5
   81430:	f040 80ad 	bne.w	8158e <_vfiprintf_r+0x39e>
   81434:	f1bc 0f00 	cmp.w	ip, #0
   81438:	f040 80a9 	bne.w	8158e <_vfiprintf_r+0x39e>
   8143c:	2b00      	cmp	r3, #0
   8143e:	f040 83c0 	bne.w	81bc2 <_vfiprintf_r+0x9d2>
   81442:	f01a 0f01 	tst.w	sl, #1
   81446:	f000 83bc 	beq.w	81bc2 <_vfiprintf_r+0x9d2>
   8144a:	2330      	movs	r3, #48	; 0x30
   8144c:	af30      	add	r7, sp, #192	; 0xc0
   8144e:	f807 3d41 	strb.w	r3, [r7, #-65]!
   81452:	ebc7 0409 	rsb	r4, r7, r9
   81456:	9405      	str	r4, [sp, #20]
   81458:	f8dd b014 	ldr.w	fp, [sp, #20]
   8145c:	9c07      	ldr	r4, [sp, #28]
   8145e:	45e3      	cmp	fp, ip
   81460:	bfb8      	it	lt
   81462:	46e3      	movlt	fp, ip
   81464:	f8cd b00c 	str.w	fp, [sp, #12]
   81468:	b11c      	cbz	r4, 81472 <_vfiprintf_r+0x282>
   8146a:	f10b 0b01 	add.w	fp, fp, #1
   8146e:	f8cd b00c 	str.w	fp, [sp, #12]
   81472:	f01a 0502 	ands.w	r5, sl, #2
   81476:	9507      	str	r5, [sp, #28]
   81478:	d005      	beq.n	81486 <_vfiprintf_r+0x296>
   8147a:	f8dd b00c 	ldr.w	fp, [sp, #12]
   8147e:	f10b 0b02 	add.w	fp, fp, #2
   81482:	f8cd b00c 	str.w	fp, [sp, #12]
   81486:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
   8148a:	930b      	str	r3, [sp, #44]	; 0x2c
   8148c:	f040 821b 	bne.w	818c6 <_vfiprintf_r+0x6d6>
   81490:	9d04      	ldr	r5, [sp, #16]
   81492:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81496:	ebcb 0405 	rsb	r4, fp, r5
   8149a:	2c00      	cmp	r4, #0
   8149c:	f340 8213 	ble.w	818c6 <_vfiprintf_r+0x6d6>
   814a0:	2c10      	cmp	r4, #16
   814a2:	f340 8489 	ble.w	81db8 <_vfiprintf_r+0xbc8>
   814a6:	4dbe      	ldr	r5, [pc, #760]	; (817a0 <_vfiprintf_r+0x5b0>)
   814a8:	9a15      	ldr	r2, [sp, #84]	; 0x54
   814aa:	462b      	mov	r3, r5
   814ac:	9814      	ldr	r0, [sp, #80]	; 0x50
   814ae:	4625      	mov	r5, r4
   814b0:	f04f 0b10 	mov.w	fp, #16
   814b4:	4664      	mov	r4, ip
   814b6:	46b4      	mov	ip, r6
   814b8:	461e      	mov	r6, r3
   814ba:	e006      	b.n	814ca <_vfiprintf_r+0x2da>
   814bc:	1c83      	adds	r3, r0, #2
   814be:	f10c 0c08 	add.w	ip, ip, #8
   814c2:	4608      	mov	r0, r1
   814c4:	3d10      	subs	r5, #16
   814c6:	2d10      	cmp	r5, #16
   814c8:	dd11      	ble.n	814ee <_vfiprintf_r+0x2fe>
   814ca:	1c41      	adds	r1, r0, #1
   814cc:	3210      	adds	r2, #16
   814ce:	2907      	cmp	r1, #7
   814d0:	9215      	str	r2, [sp, #84]	; 0x54
   814d2:	e88c 0840 	stmia.w	ip, {r6, fp}
   814d6:	9114      	str	r1, [sp, #80]	; 0x50
   814d8:	ddf0      	ble.n	814bc <_vfiprintf_r+0x2cc>
   814da:	2a00      	cmp	r2, #0
   814dc:	f040 81e6 	bne.w	818ac <_vfiprintf_r+0x6bc>
   814e0:	3d10      	subs	r5, #16
   814e2:	2d10      	cmp	r5, #16
   814e4:	f04f 0301 	mov.w	r3, #1
   814e8:	4610      	mov	r0, r2
   814ea:	46cc      	mov	ip, r9
   814ec:	dced      	bgt.n	814ca <_vfiprintf_r+0x2da>
   814ee:	4631      	mov	r1, r6
   814f0:	4666      	mov	r6, ip
   814f2:	46a4      	mov	ip, r4
   814f4:	462c      	mov	r4, r5
   814f6:	460d      	mov	r5, r1
   814f8:	4422      	add	r2, r4
   814fa:	2b07      	cmp	r3, #7
   814fc:	9215      	str	r2, [sp, #84]	; 0x54
   814fe:	6035      	str	r5, [r6, #0]
   81500:	6074      	str	r4, [r6, #4]
   81502:	9314      	str	r3, [sp, #80]	; 0x50
   81504:	f300 836d 	bgt.w	81be2 <_vfiprintf_r+0x9f2>
   81508:	3608      	adds	r6, #8
   8150a:	1c59      	adds	r1, r3, #1
   8150c:	e1de      	b.n	818cc <_vfiprintf_r+0x6dc>
   8150e:	f01a 0f20 	tst.w	sl, #32
   81512:	9004      	str	r0, [sp, #16]
   81514:	46ac      	mov	ip, r5
   81516:	f000 808d 	beq.w	81634 <_vfiprintf_r+0x444>
   8151a:	9d08      	ldr	r5, [sp, #32]
   8151c:	1deb      	adds	r3, r5, #7
   8151e:	f023 0307 	bic.w	r3, r3, #7
   81522:	f103 0b08 	add.w	fp, r3, #8
   81526:	e9d3 4500 	ldrd	r4, r5, [r3]
   8152a:	f8cd b020 	str.w	fp, [sp, #32]
   8152e:	2301      	movs	r3, #1
   81530:	e76f      	b.n	81412 <_vfiprintf_r+0x222>
   81532:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
   81536:	f898 3000 	ldrb.w	r3, [r8]
   8153a:	e6c6      	b.n	812ca <_vfiprintf_r+0xda>
   8153c:	f04a 0a10 	orr.w	sl, sl, #16
   81540:	f01a 0f20 	tst.w	sl, #32
   81544:	9004      	str	r0, [sp, #16]
   81546:	46ac      	mov	ip, r5
   81548:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   8154c:	f000 80c8 	beq.w	816e0 <_vfiprintf_r+0x4f0>
   81550:	9c08      	ldr	r4, [sp, #32]
   81552:	1de1      	adds	r1, r4, #7
   81554:	f021 0107 	bic.w	r1, r1, #7
   81558:	e9d1 2300 	ldrd	r2, r3, [r1]
   8155c:	3108      	adds	r1, #8
   8155e:	9108      	str	r1, [sp, #32]
   81560:	4614      	mov	r4, r2
   81562:	461d      	mov	r5, r3
   81564:	2a00      	cmp	r2, #0
   81566:	f173 0b00 	sbcs.w	fp, r3, #0
   8156a:	f2c0 83ce 	blt.w	81d0a <_vfiprintf_r+0xb1a>
   8156e:	f1bc 0f00 	cmp.w	ip, #0
   81572:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   81576:	bfa8      	it	ge
   81578:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   8157c:	ea54 0205 	orrs.w	r2, r4, r5
   81580:	9007      	str	r0, [sp, #28]
   81582:	f8cd c014 	str.w	ip, [sp, #20]
   81586:	f04f 0301 	mov.w	r3, #1
   8158a:	f43f af53 	beq.w	81434 <_vfiprintf_r+0x244>
   8158e:	2b01      	cmp	r3, #1
   81590:	f000 8319 	beq.w	81bc6 <_vfiprintf_r+0x9d6>
   81594:	2b02      	cmp	r3, #2
   81596:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
   8159a:	f040 824c 	bne.w	81a36 <_vfiprintf_r+0x846>
   8159e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   815a2:	4619      	mov	r1, r3
   815a4:	f004 000f 	and.w	r0, r4, #15
   815a8:	0922      	lsrs	r2, r4, #4
   815aa:	f81b 0000 	ldrb.w	r0, [fp, r0]
   815ae:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   815b2:	092b      	lsrs	r3, r5, #4
   815b4:	7008      	strb	r0, [r1, #0]
   815b6:	ea52 0003 	orrs.w	r0, r2, r3
   815ba:	460f      	mov	r7, r1
   815bc:	4614      	mov	r4, r2
   815be:	461d      	mov	r5, r3
   815c0:	f101 31ff 	add.w	r1, r1, #4294967295
   815c4:	d1ee      	bne.n	815a4 <_vfiprintf_r+0x3b4>
   815c6:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   815ca:	ebc7 0309 	rsb	r3, r7, r9
   815ce:	9305      	str	r3, [sp, #20]
   815d0:	e742      	b.n	81458 <_vfiprintf_r+0x268>
   815d2:	f04a 0a10 	orr.w	sl, sl, #16
   815d6:	f01a 0320 	ands.w	r3, sl, #32
   815da:	9004      	str	r0, [sp, #16]
   815dc:	46ac      	mov	ip, r5
   815de:	f47f af0c 	bne.w	813fa <_vfiprintf_r+0x20a>
   815e2:	f01a 0210 	ands.w	r2, sl, #16
   815e6:	f040 8311 	bne.w	81c0c <_vfiprintf_r+0xa1c>
   815ea:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
   815ee:	f000 830d 	beq.w	81c0c <_vfiprintf_r+0xa1c>
   815f2:	f8dd b020 	ldr.w	fp, [sp, #32]
   815f6:	4613      	mov	r3, r2
   815f8:	f8bb 4000 	ldrh.w	r4, [fp]
   815fc:	f10b 0b04 	add.w	fp, fp, #4
   81600:	2500      	movs	r5, #0
   81602:	f8cd b020 	str.w	fp, [sp, #32]
   81606:	e704      	b.n	81412 <_vfiprintf_r+0x222>
   81608:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8160c:	2000      	movs	r0, #0
   8160e:	f818 3b01 	ldrb.w	r3, [r8], #1
   81612:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81616:	eb02 0040 	add.w	r0, r2, r0, lsl #1
   8161a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8161e:	2a09      	cmp	r2, #9
   81620:	d9f5      	bls.n	8160e <_vfiprintf_r+0x41e>
   81622:	e654      	b.n	812ce <_vfiprintf_r+0xde>
   81624:	f04a 0a10 	orr.w	sl, sl, #16
   81628:	f01a 0f20 	tst.w	sl, #32
   8162c:	9004      	str	r0, [sp, #16]
   8162e:	46ac      	mov	ip, r5
   81630:	f47f af73 	bne.w	8151a <_vfiprintf_r+0x32a>
   81634:	f01a 0f10 	tst.w	sl, #16
   81638:	f040 82ef 	bne.w	81c1a <_vfiprintf_r+0xa2a>
   8163c:	f01a 0f40 	tst.w	sl, #64	; 0x40
   81640:	f000 82eb 	beq.w	81c1a <_vfiprintf_r+0xa2a>
   81644:	f8dd b020 	ldr.w	fp, [sp, #32]
   81648:	2500      	movs	r5, #0
   8164a:	f8bb 4000 	ldrh.w	r4, [fp]
   8164e:	f10b 0b04 	add.w	fp, fp, #4
   81652:	2301      	movs	r3, #1
   81654:	f8cd b020 	str.w	fp, [sp, #32]
   81658:	e6db      	b.n	81412 <_vfiprintf_r+0x222>
   8165a:	46ac      	mov	ip, r5
   8165c:	4d51      	ldr	r5, [pc, #324]	; (817a4 <_vfiprintf_r+0x5b4>)
   8165e:	f01a 0f20 	tst.w	sl, #32
   81662:	9004      	str	r0, [sp, #16]
   81664:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   81668:	950a      	str	r5, [sp, #40]	; 0x28
   8166a:	f000 80f0 	beq.w	8184e <_vfiprintf_r+0x65e>
   8166e:	9d08      	ldr	r5, [sp, #32]
   81670:	1dea      	adds	r2, r5, #7
   81672:	f022 0207 	bic.w	r2, r2, #7
   81676:	f102 0b08 	add.w	fp, r2, #8
   8167a:	f8cd b020 	str.w	fp, [sp, #32]
   8167e:	e9d2 4500 	ldrd	r4, r5, [r2]
   81682:	f01a 0f01 	tst.w	sl, #1
   81686:	f000 82aa 	beq.w	81bde <_vfiprintf_r+0x9ee>
   8168a:	ea54 0b05 	orrs.w	fp, r4, r5
   8168e:	f000 82a6 	beq.w	81bde <_vfiprintf_r+0x9ee>
   81692:	2230      	movs	r2, #48	; 0x30
   81694:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   81698:	f04a 0a02 	orr.w	sl, sl, #2
   8169c:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   816a0:	2302      	movs	r3, #2
   816a2:	e6b6      	b.n	81412 <_vfiprintf_r+0x222>
   816a4:	9b08      	ldr	r3, [sp, #32]
   816a6:	f8dd b020 	ldr.w	fp, [sp, #32]
   816aa:	681b      	ldr	r3, [r3, #0]
   816ac:	2401      	movs	r4, #1
   816ae:	f04f 0500 	mov.w	r5, #0
   816b2:	f10b 0b04 	add.w	fp, fp, #4
   816b6:	9004      	str	r0, [sp, #16]
   816b8:	9403      	str	r4, [sp, #12]
   816ba:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   816be:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   816c2:	f8cd b020 	str.w	fp, [sp, #32]
   816c6:	9405      	str	r4, [sp, #20]
   816c8:	af16      	add	r7, sp, #88	; 0x58
   816ca:	f04f 0c00 	mov.w	ip, #0
   816ce:	e6d0      	b.n	81472 <_vfiprintf_r+0x282>
   816d0:	f01a 0f20 	tst.w	sl, #32
   816d4:	9004      	str	r0, [sp, #16]
   816d6:	46ac      	mov	ip, r5
   816d8:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   816dc:	f47f af38 	bne.w	81550 <_vfiprintf_r+0x360>
   816e0:	f01a 0f10 	tst.w	sl, #16
   816e4:	f040 82a7 	bne.w	81c36 <_vfiprintf_r+0xa46>
   816e8:	f01a 0f40 	tst.w	sl, #64	; 0x40
   816ec:	f000 82a3 	beq.w	81c36 <_vfiprintf_r+0xa46>
   816f0:	f8dd b020 	ldr.w	fp, [sp, #32]
   816f4:	f9bb 4000 	ldrsh.w	r4, [fp]
   816f8:	f10b 0b04 	add.w	fp, fp, #4
   816fc:	17e5      	asrs	r5, r4, #31
   816fe:	4622      	mov	r2, r4
   81700:	462b      	mov	r3, r5
   81702:	f8cd b020 	str.w	fp, [sp, #32]
   81706:	e72d      	b.n	81564 <_vfiprintf_r+0x374>
   81708:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
   8170c:	f898 3000 	ldrb.w	r3, [r8]
   81710:	e5db      	b.n	812ca <_vfiprintf_r+0xda>
   81712:	f898 3000 	ldrb.w	r3, [r8]
   81716:	4642      	mov	r2, r8
   81718:	2b6c      	cmp	r3, #108	; 0x6c
   8171a:	bf03      	ittte	eq
   8171c:	f108 0801 	addeq.w	r8, r8, #1
   81720:	f04a 0a20 	orreq.w	sl, sl, #32
   81724:	7853      	ldrbeq	r3, [r2, #1]
   81726:	f04a 0a10 	orrne.w	sl, sl, #16
   8172a:	e5ce      	b.n	812ca <_vfiprintf_r+0xda>
   8172c:	f01a 0f20 	tst.w	sl, #32
   81730:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   81734:	f000 82f7 	beq.w	81d26 <_vfiprintf_r+0xb36>
   81738:	9c08      	ldr	r4, [sp, #32]
   8173a:	6821      	ldr	r1, [r4, #0]
   8173c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8173e:	17e5      	asrs	r5, r4, #31
   81740:	462b      	mov	r3, r5
   81742:	9d08      	ldr	r5, [sp, #32]
   81744:	4622      	mov	r2, r4
   81746:	3504      	adds	r5, #4
   81748:	9508      	str	r5, [sp, #32]
   8174a:	e9c1 2300 	strd	r2, r3, [r1]
   8174e:	e582      	b.n	81256 <_vfiprintf_r+0x66>
   81750:	9c08      	ldr	r4, [sp, #32]
   81752:	46ac      	mov	ip, r5
   81754:	6827      	ldr	r7, [r4, #0]
   81756:	f04f 0500 	mov.w	r5, #0
   8175a:	9004      	str	r0, [sp, #16]
   8175c:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   81760:	3404      	adds	r4, #4
   81762:	2f00      	cmp	r7, #0
   81764:	f000 8332 	beq.w	81dcc <_vfiprintf_r+0xbdc>
   81768:	f1bc 0f00 	cmp.w	ip, #0
   8176c:	4638      	mov	r0, r7
   8176e:	f2c0 8307 	blt.w	81d80 <_vfiprintf_r+0xb90>
   81772:	4662      	mov	r2, ip
   81774:	2100      	movs	r1, #0
   81776:	f8cd c004 	str.w	ip, [sp, #4]
   8177a:	f001 fbb1 	bl	82ee0 <memchr>
   8177e:	f8dd c004 	ldr.w	ip, [sp, #4]
   81782:	2800      	cmp	r0, #0
   81784:	f000 833a 	beq.w	81dfc <_vfiprintf_r+0xc0c>
   81788:	1bc0      	subs	r0, r0, r7
   8178a:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   8178e:	4560      	cmp	r0, ip
   81790:	bfa8      	it	ge
   81792:	4660      	movge	r0, ip
   81794:	9005      	str	r0, [sp, #20]
   81796:	9408      	str	r4, [sp, #32]
   81798:	9507      	str	r5, [sp, #28]
   8179a:	f04f 0c00 	mov.w	ip, #0
   8179e:	e65b      	b.n	81458 <_vfiprintf_r+0x268>
   817a0:	00083f0c 	.word	0x00083f0c
   817a4:	00083ecc 	.word	0x00083ecc
   817a8:	9b08      	ldr	r3, [sp, #32]
   817aa:	f8dd b020 	ldr.w	fp, [sp, #32]
   817ae:	9004      	str	r0, [sp, #16]
   817b0:	48b2      	ldr	r0, [pc, #712]	; (81a7c <_vfiprintf_r+0x88c>)
   817b2:	681c      	ldr	r4, [r3, #0]
   817b4:	2230      	movs	r2, #48	; 0x30
   817b6:	2378      	movs	r3, #120	; 0x78
   817b8:	f10b 0b04 	add.w	fp, fp, #4
   817bc:	46ac      	mov	ip, r5
   817be:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   817c2:	f04a 0a02 	orr.w	sl, sl, #2
   817c6:	f8cd b020 	str.w	fp, [sp, #32]
   817ca:	2500      	movs	r5, #0
   817cc:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   817d0:	900a      	str	r0, [sp, #40]	; 0x28
   817d2:	2302      	movs	r3, #2
   817d4:	e61d      	b.n	81412 <_vfiprintf_r+0x222>
   817d6:	f04a 0a20 	orr.w	sl, sl, #32
   817da:	f898 3000 	ldrb.w	r3, [r8]
   817de:	e574      	b.n	812ca <_vfiprintf_r+0xda>
   817e0:	f8dd b020 	ldr.w	fp, [sp, #32]
   817e4:	f8db 0000 	ldr.w	r0, [fp]
   817e8:	f10b 0304 	add.w	r3, fp, #4
   817ec:	2800      	cmp	r0, #0
   817ee:	f6ff adf7 	blt.w	813e0 <_vfiprintf_r+0x1f0>
   817f2:	9308      	str	r3, [sp, #32]
   817f4:	f898 3000 	ldrb.w	r3, [r8]
   817f8:	e567      	b.n	812ca <_vfiprintf_r+0xda>
   817fa:	f898 3000 	ldrb.w	r3, [r8]
   817fe:	212b      	movs	r1, #43	; 0x2b
   81800:	e563      	b.n	812ca <_vfiprintf_r+0xda>
   81802:	f898 3000 	ldrb.w	r3, [r8]
   81806:	f108 0401 	add.w	r4, r8, #1
   8180a:	2b2a      	cmp	r3, #42	; 0x2a
   8180c:	f000 8305 	beq.w	81e1a <_vfiprintf_r+0xc2a>
   81810:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   81814:	2a09      	cmp	r2, #9
   81816:	bf98      	it	ls
   81818:	2500      	movls	r5, #0
   8181a:	f200 82fa 	bhi.w	81e12 <_vfiprintf_r+0xc22>
   8181e:	f814 3b01 	ldrb.w	r3, [r4], #1
   81822:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   81826:	eb02 0545 	add.w	r5, r2, r5, lsl #1
   8182a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8182e:	2a09      	cmp	r2, #9
   81830:	d9f5      	bls.n	8181e <_vfiprintf_r+0x62e>
   81832:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
   81836:	46a0      	mov	r8, r4
   81838:	e549      	b.n	812ce <_vfiprintf_r+0xde>
   8183a:	4c90      	ldr	r4, [pc, #576]	; (81a7c <_vfiprintf_r+0x88c>)
   8183c:	f01a 0f20 	tst.w	sl, #32
   81840:	9004      	str	r0, [sp, #16]
   81842:	46ac      	mov	ip, r5
   81844:	940a      	str	r4, [sp, #40]	; 0x28
   81846:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   8184a:	f47f af10 	bne.w	8166e <_vfiprintf_r+0x47e>
   8184e:	f01a 0f10 	tst.w	sl, #16
   81852:	f040 81ea 	bne.w	81c2a <_vfiprintf_r+0xa3a>
   81856:	f01a 0f40 	tst.w	sl, #64	; 0x40
   8185a:	f000 81e6 	beq.w	81c2a <_vfiprintf_r+0xa3a>
   8185e:	f8dd b020 	ldr.w	fp, [sp, #32]
   81862:	2500      	movs	r5, #0
   81864:	f8bb 4000 	ldrh.w	r4, [fp]
   81868:	f10b 0b04 	add.w	fp, fp, #4
   8186c:	f8cd b020 	str.w	fp, [sp, #32]
   81870:	e707      	b.n	81682 <_vfiprintf_r+0x492>
   81872:	f898 3000 	ldrb.w	r3, [r8]
   81876:	2900      	cmp	r1, #0
   81878:	f47f ad27 	bne.w	812ca <_vfiprintf_r+0xda>
   8187c:	2120      	movs	r1, #32
   8187e:	e524      	b.n	812ca <_vfiprintf_r+0xda>
   81880:	f04a 0a01 	orr.w	sl, sl, #1
   81884:	f898 3000 	ldrb.w	r3, [r8]
   81888:	e51f      	b.n	812ca <_vfiprintf_r+0xda>
   8188a:	9004      	str	r0, [sp, #16]
   8188c:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   81890:	2b00      	cmp	r3, #0
   81892:	f000 80f9 	beq.w	81a88 <_vfiprintf_r+0x898>
   81896:	2501      	movs	r5, #1
   81898:	f04f 0b00 	mov.w	fp, #0
   8189c:	9503      	str	r5, [sp, #12]
   8189e:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   818a2:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   818a6:	9505      	str	r5, [sp, #20]
   818a8:	af16      	add	r7, sp, #88	; 0x58
   818aa:	e70e      	b.n	816ca <_vfiprintf_r+0x4da>
   818ac:	9806      	ldr	r0, [sp, #24]
   818ae:	9902      	ldr	r1, [sp, #8]
   818b0:	aa13      	add	r2, sp, #76	; 0x4c
   818b2:	f7ff fc61 	bl	81178 <__sprint_r.part.0>
   818b6:	2800      	cmp	r0, #0
   818b8:	f040 80ed 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   818bc:	9814      	ldr	r0, [sp, #80]	; 0x50
   818be:	9a15      	ldr	r2, [sp, #84]	; 0x54
   818c0:	1c43      	adds	r3, r0, #1
   818c2:	46cc      	mov	ip, r9
   818c4:	e5fe      	b.n	814c4 <_vfiprintf_r+0x2d4>
   818c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
   818c8:	9a15      	ldr	r2, [sp, #84]	; 0x54
   818ca:	1c59      	adds	r1, r3, #1
   818cc:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   818d0:	b168      	cbz	r0, 818ee <_vfiprintf_r+0x6fe>
   818d2:	3201      	adds	r2, #1
   818d4:	f10d 0047 	add.w	r0, sp, #71	; 0x47
   818d8:	2301      	movs	r3, #1
   818da:	2907      	cmp	r1, #7
   818dc:	9215      	str	r2, [sp, #84]	; 0x54
   818de:	9114      	str	r1, [sp, #80]	; 0x50
   818e0:	e886 0009 	stmia.w	r6, {r0, r3}
   818e4:	f300 8160 	bgt.w	81ba8 <_vfiprintf_r+0x9b8>
   818e8:	460b      	mov	r3, r1
   818ea:	3608      	adds	r6, #8
   818ec:	3101      	adds	r1, #1
   818ee:	9c07      	ldr	r4, [sp, #28]
   818f0:	b164      	cbz	r4, 8190c <_vfiprintf_r+0x71c>
   818f2:	3202      	adds	r2, #2
   818f4:	a812      	add	r0, sp, #72	; 0x48
   818f6:	2302      	movs	r3, #2
   818f8:	2907      	cmp	r1, #7
   818fa:	9215      	str	r2, [sp, #84]	; 0x54
   818fc:	9114      	str	r1, [sp, #80]	; 0x50
   818fe:	e886 0009 	stmia.w	r6, {r0, r3}
   81902:	f300 8157 	bgt.w	81bb4 <_vfiprintf_r+0x9c4>
   81906:	460b      	mov	r3, r1
   81908:	3608      	adds	r6, #8
   8190a:	3101      	adds	r1, #1
   8190c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8190e:	2d80      	cmp	r5, #128	; 0x80
   81910:	f000 8101 	beq.w	81b16 <_vfiprintf_r+0x926>
   81914:	9d05      	ldr	r5, [sp, #20]
   81916:	ebc5 040c 	rsb	r4, r5, ip
   8191a:	2c00      	cmp	r4, #0
   8191c:	dd2f      	ble.n	8197e <_vfiprintf_r+0x78e>
   8191e:	2c10      	cmp	r4, #16
   81920:	4d57      	ldr	r5, [pc, #348]	; (81a80 <_vfiprintf_r+0x890>)
   81922:	dd22      	ble.n	8196a <_vfiprintf_r+0x77a>
   81924:	4630      	mov	r0, r6
   81926:	f04f 0b10 	mov.w	fp, #16
   8192a:	462e      	mov	r6, r5
   8192c:	4625      	mov	r5, r4
   8192e:	9c06      	ldr	r4, [sp, #24]
   81930:	e006      	b.n	81940 <_vfiprintf_r+0x750>
   81932:	f103 0c02 	add.w	ip, r3, #2
   81936:	3008      	adds	r0, #8
   81938:	460b      	mov	r3, r1
   8193a:	3d10      	subs	r5, #16
   8193c:	2d10      	cmp	r5, #16
   8193e:	dd10      	ble.n	81962 <_vfiprintf_r+0x772>
   81940:	1c59      	adds	r1, r3, #1
   81942:	3210      	adds	r2, #16
   81944:	2907      	cmp	r1, #7
   81946:	9215      	str	r2, [sp, #84]	; 0x54
   81948:	e880 0840 	stmia.w	r0, {r6, fp}
   8194c:	9114      	str	r1, [sp, #80]	; 0x50
   8194e:	ddf0      	ble.n	81932 <_vfiprintf_r+0x742>
   81950:	2a00      	cmp	r2, #0
   81952:	d163      	bne.n	81a1c <_vfiprintf_r+0x82c>
   81954:	3d10      	subs	r5, #16
   81956:	2d10      	cmp	r5, #16
   81958:	f04f 0c01 	mov.w	ip, #1
   8195c:	4613      	mov	r3, r2
   8195e:	4648      	mov	r0, r9
   81960:	dcee      	bgt.n	81940 <_vfiprintf_r+0x750>
   81962:	462c      	mov	r4, r5
   81964:	4661      	mov	r1, ip
   81966:	4635      	mov	r5, r6
   81968:	4606      	mov	r6, r0
   8196a:	4422      	add	r2, r4
   8196c:	2907      	cmp	r1, #7
   8196e:	9215      	str	r2, [sp, #84]	; 0x54
   81970:	6035      	str	r5, [r6, #0]
   81972:	6074      	str	r4, [r6, #4]
   81974:	9114      	str	r1, [sp, #80]	; 0x50
   81976:	f300 80c1 	bgt.w	81afc <_vfiprintf_r+0x90c>
   8197a:	3608      	adds	r6, #8
   8197c:	3101      	adds	r1, #1
   8197e:	9d05      	ldr	r5, [sp, #20]
   81980:	2907      	cmp	r1, #7
   81982:	442a      	add	r2, r5
   81984:	9215      	str	r2, [sp, #84]	; 0x54
   81986:	6037      	str	r7, [r6, #0]
   81988:	6075      	str	r5, [r6, #4]
   8198a:	9114      	str	r1, [sp, #80]	; 0x50
   8198c:	f340 80c1 	ble.w	81b12 <_vfiprintf_r+0x922>
   81990:	2a00      	cmp	r2, #0
   81992:	f040 8130 	bne.w	81bf6 <_vfiprintf_r+0xa06>
   81996:	9214      	str	r2, [sp, #80]	; 0x50
   81998:	464e      	mov	r6, r9
   8199a:	f01a 0f04 	tst.w	sl, #4
   8199e:	f000 808b 	beq.w	81ab8 <_vfiprintf_r+0x8c8>
   819a2:	9d04      	ldr	r5, [sp, #16]
   819a4:	f8dd b00c 	ldr.w	fp, [sp, #12]
   819a8:	ebcb 0405 	rsb	r4, fp, r5
   819ac:	2c00      	cmp	r4, #0
   819ae:	f340 8083 	ble.w	81ab8 <_vfiprintf_r+0x8c8>
   819b2:	2c10      	cmp	r4, #16
   819b4:	f340 821e 	ble.w	81df4 <_vfiprintf_r+0xc04>
   819b8:	9914      	ldr	r1, [sp, #80]	; 0x50
   819ba:	4d32      	ldr	r5, [pc, #200]	; (81a84 <_vfiprintf_r+0x894>)
   819bc:	2710      	movs	r7, #16
   819be:	f8dd a018 	ldr.w	sl, [sp, #24]
   819c2:	f8dd b008 	ldr.w	fp, [sp, #8]
   819c6:	e005      	b.n	819d4 <_vfiprintf_r+0x7e4>
   819c8:	1c88      	adds	r0, r1, #2
   819ca:	3608      	adds	r6, #8
   819cc:	4619      	mov	r1, r3
   819ce:	3c10      	subs	r4, #16
   819d0:	2c10      	cmp	r4, #16
   819d2:	dd10      	ble.n	819f6 <_vfiprintf_r+0x806>
   819d4:	1c4b      	adds	r3, r1, #1
   819d6:	3210      	adds	r2, #16
   819d8:	2b07      	cmp	r3, #7
   819da:	9215      	str	r2, [sp, #84]	; 0x54
   819dc:	e886 00a0 	stmia.w	r6, {r5, r7}
   819e0:	9314      	str	r3, [sp, #80]	; 0x50
   819e2:	ddf1      	ble.n	819c8 <_vfiprintf_r+0x7d8>
   819e4:	2a00      	cmp	r2, #0
   819e6:	d17d      	bne.n	81ae4 <_vfiprintf_r+0x8f4>
   819e8:	3c10      	subs	r4, #16
   819ea:	2c10      	cmp	r4, #16
   819ec:	f04f 0001 	mov.w	r0, #1
   819f0:	4611      	mov	r1, r2
   819f2:	464e      	mov	r6, r9
   819f4:	dcee      	bgt.n	819d4 <_vfiprintf_r+0x7e4>
   819f6:	4422      	add	r2, r4
   819f8:	2807      	cmp	r0, #7
   819fa:	9215      	str	r2, [sp, #84]	; 0x54
   819fc:	6035      	str	r5, [r6, #0]
   819fe:	6074      	str	r4, [r6, #4]
   81a00:	9014      	str	r0, [sp, #80]	; 0x50
   81a02:	dd59      	ble.n	81ab8 <_vfiprintf_r+0x8c8>
   81a04:	2a00      	cmp	r2, #0
   81a06:	d14f      	bne.n	81aa8 <_vfiprintf_r+0x8b8>
   81a08:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81a0a:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81a0e:	9d04      	ldr	r5, [sp, #16]
   81a10:	45ab      	cmp	fp, r5
   81a12:	bfac      	ite	ge
   81a14:	445c      	addge	r4, fp
   81a16:	1964      	addlt	r4, r4, r5
   81a18:	9409      	str	r4, [sp, #36]	; 0x24
   81a1a:	e05e      	b.n	81ada <_vfiprintf_r+0x8ea>
   81a1c:	4620      	mov	r0, r4
   81a1e:	9902      	ldr	r1, [sp, #8]
   81a20:	aa13      	add	r2, sp, #76	; 0x4c
   81a22:	f7ff fba9 	bl	81178 <__sprint_r.part.0>
   81a26:	2800      	cmp	r0, #0
   81a28:	d135      	bne.n	81a96 <_vfiprintf_r+0x8a6>
   81a2a:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81a2c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81a2e:	f103 0c01 	add.w	ip, r3, #1
   81a32:	4648      	mov	r0, r9
   81a34:	e781      	b.n	8193a <_vfiprintf_r+0x74a>
   81a36:	08e0      	lsrs	r0, r4, #3
   81a38:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   81a3c:	f004 0207 	and.w	r2, r4, #7
   81a40:	08e9      	lsrs	r1, r5, #3
   81a42:	3230      	adds	r2, #48	; 0x30
   81a44:	ea50 0b01 	orrs.w	fp, r0, r1
   81a48:	461f      	mov	r7, r3
   81a4a:	701a      	strb	r2, [r3, #0]
   81a4c:	4604      	mov	r4, r0
   81a4e:	460d      	mov	r5, r1
   81a50:	f103 33ff 	add.w	r3, r3, #4294967295
   81a54:	d1ef      	bne.n	81a36 <_vfiprintf_r+0x846>
   81a56:	f01a 0f01 	tst.w	sl, #1
   81a5a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   81a5e:	4639      	mov	r1, r7
   81a60:	f000 80b9 	beq.w	81bd6 <_vfiprintf_r+0x9e6>
   81a64:	2a30      	cmp	r2, #48	; 0x30
   81a66:	f43f acf4 	beq.w	81452 <_vfiprintf_r+0x262>
   81a6a:	461f      	mov	r7, r3
   81a6c:	ebc7 0509 	rsb	r5, r7, r9
   81a70:	2330      	movs	r3, #48	; 0x30
   81a72:	9505      	str	r5, [sp, #20]
   81a74:	f801 3c01 	strb.w	r3, [r1, #-1]
   81a78:	e4ee      	b.n	81458 <_vfiprintf_r+0x268>
   81a7a:	bf00      	nop
   81a7c:	00083ee0 	.word	0x00083ee0
   81a80:	00083efc 	.word	0x00083efc
   81a84:	00083f0c 	.word	0x00083f0c
   81a88:	9b15      	ldr	r3, [sp, #84]	; 0x54
   81a8a:	b123      	cbz	r3, 81a96 <_vfiprintf_r+0x8a6>
   81a8c:	9806      	ldr	r0, [sp, #24]
   81a8e:	9902      	ldr	r1, [sp, #8]
   81a90:	aa13      	add	r2, sp, #76	; 0x4c
   81a92:	f7ff fb71 	bl	81178 <__sprint_r.part.0>
   81a96:	9c02      	ldr	r4, [sp, #8]
   81a98:	89a3      	ldrh	r3, [r4, #12]
   81a9a:	065b      	lsls	r3, r3, #25
   81a9c:	f53f ac98 	bmi.w	813d0 <_vfiprintf_r+0x1e0>
   81aa0:	9809      	ldr	r0, [sp, #36]	; 0x24
   81aa2:	b031      	add	sp, #196	; 0xc4
   81aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81aa8:	9806      	ldr	r0, [sp, #24]
   81aaa:	9902      	ldr	r1, [sp, #8]
   81aac:	aa13      	add	r2, sp, #76	; 0x4c
   81aae:	f7ff fb63 	bl	81178 <__sprint_r.part.0>
   81ab2:	2800      	cmp	r0, #0
   81ab4:	d1ef      	bne.n	81a96 <_vfiprintf_r+0x8a6>
   81ab6:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81ab8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81aba:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81abe:	9d04      	ldr	r5, [sp, #16]
   81ac0:	45ab      	cmp	fp, r5
   81ac2:	bfac      	ite	ge
   81ac4:	445c      	addge	r4, fp
   81ac6:	1964      	addlt	r4, r4, r5
   81ac8:	9409      	str	r4, [sp, #36]	; 0x24
   81aca:	b132      	cbz	r2, 81ada <_vfiprintf_r+0x8ea>
   81acc:	9806      	ldr	r0, [sp, #24]
   81ace:	9902      	ldr	r1, [sp, #8]
   81ad0:	aa13      	add	r2, sp, #76	; 0x4c
   81ad2:	f7ff fb51 	bl	81178 <__sprint_r.part.0>
   81ad6:	2800      	cmp	r0, #0
   81ad8:	d1dd      	bne.n	81a96 <_vfiprintf_r+0x8a6>
   81ada:	2000      	movs	r0, #0
   81adc:	9014      	str	r0, [sp, #80]	; 0x50
   81ade:	464e      	mov	r6, r9
   81ae0:	f7ff bbb9 	b.w	81256 <_vfiprintf_r+0x66>
   81ae4:	4650      	mov	r0, sl
   81ae6:	4659      	mov	r1, fp
   81ae8:	aa13      	add	r2, sp, #76	; 0x4c
   81aea:	f7ff fb45 	bl	81178 <__sprint_r.part.0>
   81aee:	2800      	cmp	r0, #0
   81af0:	d1d1      	bne.n	81a96 <_vfiprintf_r+0x8a6>
   81af2:	9914      	ldr	r1, [sp, #80]	; 0x50
   81af4:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81af6:	1c48      	adds	r0, r1, #1
   81af8:	464e      	mov	r6, r9
   81afa:	e768      	b.n	819ce <_vfiprintf_r+0x7de>
   81afc:	2a00      	cmp	r2, #0
   81afe:	f040 80f7 	bne.w	81cf0 <_vfiprintf_r+0xb00>
   81b02:	9c05      	ldr	r4, [sp, #20]
   81b04:	2301      	movs	r3, #1
   81b06:	9720      	str	r7, [sp, #128]	; 0x80
   81b08:	9421      	str	r4, [sp, #132]	; 0x84
   81b0a:	9415      	str	r4, [sp, #84]	; 0x54
   81b0c:	4622      	mov	r2, r4
   81b0e:	9314      	str	r3, [sp, #80]	; 0x50
   81b10:	464e      	mov	r6, r9
   81b12:	3608      	adds	r6, #8
   81b14:	e741      	b.n	8199a <_vfiprintf_r+0x7aa>
   81b16:	9d04      	ldr	r5, [sp, #16]
   81b18:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81b1c:	ebcb 0405 	rsb	r4, fp, r5
   81b20:	2c00      	cmp	r4, #0
   81b22:	f77f aef7 	ble.w	81914 <_vfiprintf_r+0x724>
   81b26:	2c10      	cmp	r4, #16
   81b28:	4da6      	ldr	r5, [pc, #664]	; (81dc4 <_vfiprintf_r+0xbd4>)
   81b2a:	f340 8170 	ble.w	81e0e <_vfiprintf_r+0xc1e>
   81b2e:	4629      	mov	r1, r5
   81b30:	f04f 0b10 	mov.w	fp, #16
   81b34:	4625      	mov	r5, r4
   81b36:	4664      	mov	r4, ip
   81b38:	46b4      	mov	ip, r6
   81b3a:	460e      	mov	r6, r1
   81b3c:	e006      	b.n	81b4c <_vfiprintf_r+0x95c>
   81b3e:	1c98      	adds	r0, r3, #2
   81b40:	f10c 0c08 	add.w	ip, ip, #8
   81b44:	460b      	mov	r3, r1
   81b46:	3d10      	subs	r5, #16
   81b48:	2d10      	cmp	r5, #16
   81b4a:	dd0f      	ble.n	81b6c <_vfiprintf_r+0x97c>
   81b4c:	1c59      	adds	r1, r3, #1
   81b4e:	3210      	adds	r2, #16
   81b50:	2907      	cmp	r1, #7
   81b52:	9215      	str	r2, [sp, #84]	; 0x54
   81b54:	e88c 0840 	stmia.w	ip, {r6, fp}
   81b58:	9114      	str	r1, [sp, #80]	; 0x50
   81b5a:	ddf0      	ble.n	81b3e <_vfiprintf_r+0x94e>
   81b5c:	b9ba      	cbnz	r2, 81b8e <_vfiprintf_r+0x99e>
   81b5e:	3d10      	subs	r5, #16
   81b60:	2d10      	cmp	r5, #16
   81b62:	f04f 0001 	mov.w	r0, #1
   81b66:	4613      	mov	r3, r2
   81b68:	46cc      	mov	ip, r9
   81b6a:	dcef      	bgt.n	81b4c <_vfiprintf_r+0x95c>
   81b6c:	4633      	mov	r3, r6
   81b6e:	4666      	mov	r6, ip
   81b70:	46a4      	mov	ip, r4
   81b72:	462c      	mov	r4, r5
   81b74:	461d      	mov	r5, r3
   81b76:	4422      	add	r2, r4
   81b78:	2807      	cmp	r0, #7
   81b7a:	9215      	str	r2, [sp, #84]	; 0x54
   81b7c:	6035      	str	r5, [r6, #0]
   81b7e:	6074      	str	r4, [r6, #4]
   81b80:	9014      	str	r0, [sp, #80]	; 0x50
   81b82:	f300 80af 	bgt.w	81ce4 <_vfiprintf_r+0xaf4>
   81b86:	3608      	adds	r6, #8
   81b88:	1c41      	adds	r1, r0, #1
   81b8a:	4603      	mov	r3, r0
   81b8c:	e6c2      	b.n	81914 <_vfiprintf_r+0x724>
   81b8e:	9806      	ldr	r0, [sp, #24]
   81b90:	9902      	ldr	r1, [sp, #8]
   81b92:	aa13      	add	r2, sp, #76	; 0x4c
   81b94:	f7ff faf0 	bl	81178 <__sprint_r.part.0>
   81b98:	2800      	cmp	r0, #0
   81b9a:	f47f af7c 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81b9e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81ba0:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81ba2:	1c58      	adds	r0, r3, #1
   81ba4:	46cc      	mov	ip, r9
   81ba6:	e7ce      	b.n	81b46 <_vfiprintf_r+0x956>
   81ba8:	2a00      	cmp	r2, #0
   81baa:	d179      	bne.n	81ca0 <_vfiprintf_r+0xab0>
   81bac:	4619      	mov	r1, r3
   81bae:	464e      	mov	r6, r9
   81bb0:	4613      	mov	r3, r2
   81bb2:	e69c      	b.n	818ee <_vfiprintf_r+0x6fe>
   81bb4:	2a00      	cmp	r2, #0
   81bb6:	f040 8084 	bne.w	81cc2 <_vfiprintf_r+0xad2>
   81bba:	2101      	movs	r1, #1
   81bbc:	4613      	mov	r3, r2
   81bbe:	464e      	mov	r6, r9
   81bc0:	e6a4      	b.n	8190c <_vfiprintf_r+0x71c>
   81bc2:	464f      	mov	r7, r9
   81bc4:	e448      	b.n	81458 <_vfiprintf_r+0x268>
   81bc6:	2d00      	cmp	r5, #0
   81bc8:	bf08      	it	eq
   81bca:	2c0a      	cmpeq	r4, #10
   81bcc:	d246      	bcs.n	81c5c <_vfiprintf_r+0xa6c>
   81bce:	3430      	adds	r4, #48	; 0x30
   81bd0:	af30      	add	r7, sp, #192	; 0xc0
   81bd2:	f807 4d41 	strb.w	r4, [r7, #-65]!
   81bd6:	ebc7 0309 	rsb	r3, r7, r9
   81bda:	9305      	str	r3, [sp, #20]
   81bdc:	e43c      	b.n	81458 <_vfiprintf_r+0x268>
   81bde:	2302      	movs	r3, #2
   81be0:	e417      	b.n	81412 <_vfiprintf_r+0x222>
   81be2:	2a00      	cmp	r2, #0
   81be4:	f040 80af 	bne.w	81d46 <_vfiprintf_r+0xb56>
   81be8:	4613      	mov	r3, r2
   81bea:	2101      	movs	r1, #1
   81bec:	464e      	mov	r6, r9
   81bee:	e66d      	b.n	818cc <_vfiprintf_r+0x6dc>
   81bf0:	4644      	mov	r4, r8
   81bf2:	f7ff bb58 	b.w	812a6 <_vfiprintf_r+0xb6>
   81bf6:	9806      	ldr	r0, [sp, #24]
   81bf8:	9902      	ldr	r1, [sp, #8]
   81bfa:	aa13      	add	r2, sp, #76	; 0x4c
   81bfc:	f7ff fabc 	bl	81178 <__sprint_r.part.0>
   81c00:	2800      	cmp	r0, #0
   81c02:	f47f af48 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81c06:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81c08:	464e      	mov	r6, r9
   81c0a:	e6c6      	b.n	8199a <_vfiprintf_r+0x7aa>
   81c0c:	9d08      	ldr	r5, [sp, #32]
   81c0e:	682c      	ldr	r4, [r5, #0]
   81c10:	3504      	adds	r5, #4
   81c12:	9508      	str	r5, [sp, #32]
   81c14:	2500      	movs	r5, #0
   81c16:	f7ff bbfc 	b.w	81412 <_vfiprintf_r+0x222>
   81c1a:	9d08      	ldr	r5, [sp, #32]
   81c1c:	2301      	movs	r3, #1
   81c1e:	682c      	ldr	r4, [r5, #0]
   81c20:	3504      	adds	r5, #4
   81c22:	9508      	str	r5, [sp, #32]
   81c24:	2500      	movs	r5, #0
   81c26:	f7ff bbf4 	b.w	81412 <_vfiprintf_r+0x222>
   81c2a:	9d08      	ldr	r5, [sp, #32]
   81c2c:	682c      	ldr	r4, [r5, #0]
   81c2e:	3504      	adds	r5, #4
   81c30:	9508      	str	r5, [sp, #32]
   81c32:	2500      	movs	r5, #0
   81c34:	e525      	b.n	81682 <_vfiprintf_r+0x492>
   81c36:	9d08      	ldr	r5, [sp, #32]
   81c38:	682c      	ldr	r4, [r5, #0]
   81c3a:	3504      	adds	r5, #4
   81c3c:	9508      	str	r5, [sp, #32]
   81c3e:	17e5      	asrs	r5, r4, #31
   81c40:	4622      	mov	r2, r4
   81c42:	462b      	mov	r3, r5
   81c44:	e48e      	b.n	81564 <_vfiprintf_r+0x374>
   81c46:	9806      	ldr	r0, [sp, #24]
   81c48:	9902      	ldr	r1, [sp, #8]
   81c4a:	aa13      	add	r2, sp, #76	; 0x4c
   81c4c:	f7ff fa94 	bl	81178 <__sprint_r.part.0>
   81c50:	2800      	cmp	r0, #0
   81c52:	f47f af20 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81c56:	464e      	mov	r6, r9
   81c58:	f7ff bb9a 	b.w	81390 <_vfiprintf_r+0x1a0>
   81c5c:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
   81c60:	9603      	str	r6, [sp, #12]
   81c62:	465e      	mov	r6, fp
   81c64:	46e3      	mov	fp, ip
   81c66:	4620      	mov	r0, r4
   81c68:	4629      	mov	r1, r5
   81c6a:	220a      	movs	r2, #10
   81c6c:	2300      	movs	r3, #0
   81c6e:	f001 fe2f 	bl	838d0 <__aeabi_uldivmod>
   81c72:	3230      	adds	r2, #48	; 0x30
   81c74:	7032      	strb	r2, [r6, #0]
   81c76:	4620      	mov	r0, r4
   81c78:	4629      	mov	r1, r5
   81c7a:	220a      	movs	r2, #10
   81c7c:	2300      	movs	r3, #0
   81c7e:	f001 fe27 	bl	838d0 <__aeabi_uldivmod>
   81c82:	4604      	mov	r4, r0
   81c84:	460d      	mov	r5, r1
   81c86:	ea54 0005 	orrs.w	r0, r4, r5
   81c8a:	4637      	mov	r7, r6
   81c8c:	f106 36ff 	add.w	r6, r6, #4294967295
   81c90:	d1e9      	bne.n	81c66 <_vfiprintf_r+0xa76>
   81c92:	ebc7 0309 	rsb	r3, r7, r9
   81c96:	46dc      	mov	ip, fp
   81c98:	9e03      	ldr	r6, [sp, #12]
   81c9a:	9305      	str	r3, [sp, #20]
   81c9c:	f7ff bbdc 	b.w	81458 <_vfiprintf_r+0x268>
   81ca0:	9806      	ldr	r0, [sp, #24]
   81ca2:	9902      	ldr	r1, [sp, #8]
   81ca4:	aa13      	add	r2, sp, #76	; 0x4c
   81ca6:	f8cd c004 	str.w	ip, [sp, #4]
   81caa:	f7ff fa65 	bl	81178 <__sprint_r.part.0>
   81cae:	f8dd c004 	ldr.w	ip, [sp, #4]
   81cb2:	2800      	cmp	r0, #0
   81cb4:	f47f aeef 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81cb8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81cba:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81cbc:	1c59      	adds	r1, r3, #1
   81cbe:	464e      	mov	r6, r9
   81cc0:	e615      	b.n	818ee <_vfiprintf_r+0x6fe>
   81cc2:	9806      	ldr	r0, [sp, #24]
   81cc4:	9902      	ldr	r1, [sp, #8]
   81cc6:	aa13      	add	r2, sp, #76	; 0x4c
   81cc8:	f8cd c004 	str.w	ip, [sp, #4]
   81ccc:	f7ff fa54 	bl	81178 <__sprint_r.part.0>
   81cd0:	f8dd c004 	ldr.w	ip, [sp, #4]
   81cd4:	2800      	cmp	r0, #0
   81cd6:	f47f aede 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81cda:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81cdc:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81cde:	1c59      	adds	r1, r3, #1
   81ce0:	464e      	mov	r6, r9
   81ce2:	e613      	b.n	8190c <_vfiprintf_r+0x71c>
   81ce4:	2a00      	cmp	r2, #0
   81ce6:	d156      	bne.n	81d96 <_vfiprintf_r+0xba6>
   81ce8:	2101      	movs	r1, #1
   81cea:	4613      	mov	r3, r2
   81cec:	464e      	mov	r6, r9
   81cee:	e611      	b.n	81914 <_vfiprintf_r+0x724>
   81cf0:	9806      	ldr	r0, [sp, #24]
   81cf2:	9902      	ldr	r1, [sp, #8]
   81cf4:	aa13      	add	r2, sp, #76	; 0x4c
   81cf6:	f7ff fa3f 	bl	81178 <__sprint_r.part.0>
   81cfa:	2800      	cmp	r0, #0
   81cfc:	f47f aecb 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81d00:	9914      	ldr	r1, [sp, #80]	; 0x50
   81d02:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81d04:	3101      	adds	r1, #1
   81d06:	464e      	mov	r6, r9
   81d08:	e639      	b.n	8197e <_vfiprintf_r+0x78e>
   81d0a:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   81d0e:	4264      	negs	r4, r4
   81d10:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   81d14:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   81d18:	f8cd b01c 	str.w	fp, [sp, #28]
   81d1c:	f8cd c014 	str.w	ip, [sp, #20]
   81d20:	2301      	movs	r3, #1
   81d22:	f7ff bb7e 	b.w	81422 <_vfiprintf_r+0x232>
   81d26:	f01a 0f10 	tst.w	sl, #16
   81d2a:	d11d      	bne.n	81d68 <_vfiprintf_r+0xb78>
   81d2c:	f01a 0f40 	tst.w	sl, #64	; 0x40
   81d30:	d058      	beq.n	81de4 <_vfiprintf_r+0xbf4>
   81d32:	9d08      	ldr	r5, [sp, #32]
   81d34:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   81d38:	682b      	ldr	r3, [r5, #0]
   81d3a:	3504      	adds	r5, #4
   81d3c:	9508      	str	r5, [sp, #32]
   81d3e:	f8a3 b000 	strh.w	fp, [r3]
   81d42:	f7ff ba88 	b.w	81256 <_vfiprintf_r+0x66>
   81d46:	9806      	ldr	r0, [sp, #24]
   81d48:	9902      	ldr	r1, [sp, #8]
   81d4a:	aa13      	add	r2, sp, #76	; 0x4c
   81d4c:	f8cd c004 	str.w	ip, [sp, #4]
   81d50:	f7ff fa12 	bl	81178 <__sprint_r.part.0>
   81d54:	f8dd c004 	ldr.w	ip, [sp, #4]
   81d58:	2800      	cmp	r0, #0
   81d5a:	f47f ae9c 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81d5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81d60:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81d62:	1c59      	adds	r1, r3, #1
   81d64:	464e      	mov	r6, r9
   81d66:	e5b1      	b.n	818cc <_vfiprintf_r+0x6dc>
   81d68:	f8dd b020 	ldr.w	fp, [sp, #32]
   81d6c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81d6e:	f8db 3000 	ldr.w	r3, [fp]
   81d72:	f10b 0b04 	add.w	fp, fp, #4
   81d76:	f8cd b020 	str.w	fp, [sp, #32]
   81d7a:	601c      	str	r4, [r3, #0]
   81d7c:	f7ff ba6b 	b.w	81256 <_vfiprintf_r+0x66>
   81d80:	9408      	str	r4, [sp, #32]
   81d82:	f7ff f9c9 	bl	81118 <strlen>
   81d86:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
   81d8a:	9005      	str	r0, [sp, #20]
   81d8c:	9407      	str	r4, [sp, #28]
   81d8e:	f04f 0c00 	mov.w	ip, #0
   81d92:	f7ff bb61 	b.w	81458 <_vfiprintf_r+0x268>
   81d96:	9806      	ldr	r0, [sp, #24]
   81d98:	9902      	ldr	r1, [sp, #8]
   81d9a:	aa13      	add	r2, sp, #76	; 0x4c
   81d9c:	f8cd c004 	str.w	ip, [sp, #4]
   81da0:	f7ff f9ea 	bl	81178 <__sprint_r.part.0>
   81da4:	f8dd c004 	ldr.w	ip, [sp, #4]
   81da8:	2800      	cmp	r0, #0
   81daa:	f47f ae74 	bne.w	81a96 <_vfiprintf_r+0x8a6>
   81dae:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81db0:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81db2:	1c59      	adds	r1, r3, #1
   81db4:	464e      	mov	r6, r9
   81db6:	e5ad      	b.n	81914 <_vfiprintf_r+0x724>
   81db8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81dba:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81dbc:	3301      	adds	r3, #1
   81dbe:	4d02      	ldr	r5, [pc, #8]	; (81dc8 <_vfiprintf_r+0xbd8>)
   81dc0:	f7ff bb9a 	b.w	814f8 <_vfiprintf_r+0x308>
   81dc4:	00083efc 	.word	0x00083efc
   81dc8:	00083f0c 	.word	0x00083f0c
   81dcc:	f1bc 0f06 	cmp.w	ip, #6
   81dd0:	bf34      	ite	cc
   81dd2:	4663      	movcc	r3, ip
   81dd4:	2306      	movcs	r3, #6
   81dd6:	9408      	str	r4, [sp, #32]
   81dd8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
   81ddc:	9305      	str	r3, [sp, #20]
   81dde:	9403      	str	r4, [sp, #12]
   81de0:	4f16      	ldr	r7, [pc, #88]	; (81e3c <_vfiprintf_r+0xc4c>)
   81de2:	e472      	b.n	816ca <_vfiprintf_r+0x4da>
   81de4:	9c08      	ldr	r4, [sp, #32]
   81de6:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81de8:	6823      	ldr	r3, [r4, #0]
   81dea:	3404      	adds	r4, #4
   81dec:	9408      	str	r4, [sp, #32]
   81dee:	601d      	str	r5, [r3, #0]
   81df0:	f7ff ba31 	b.w	81256 <_vfiprintf_r+0x66>
   81df4:	9814      	ldr	r0, [sp, #80]	; 0x50
   81df6:	4d12      	ldr	r5, [pc, #72]	; (81e40 <_vfiprintf_r+0xc50>)
   81df8:	3001      	adds	r0, #1
   81dfa:	e5fc      	b.n	819f6 <_vfiprintf_r+0x806>
   81dfc:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   81e00:	f8cd c014 	str.w	ip, [sp, #20]
   81e04:	9507      	str	r5, [sp, #28]
   81e06:	9408      	str	r4, [sp, #32]
   81e08:	4684      	mov	ip, r0
   81e0a:	f7ff bb25 	b.w	81458 <_vfiprintf_r+0x268>
   81e0e:	4608      	mov	r0, r1
   81e10:	e6b1      	b.n	81b76 <_vfiprintf_r+0x986>
   81e12:	46a0      	mov	r8, r4
   81e14:	2500      	movs	r5, #0
   81e16:	f7ff ba5a 	b.w	812ce <_vfiprintf_r+0xde>
   81e1a:	f8dd b020 	ldr.w	fp, [sp, #32]
   81e1e:	f898 3001 	ldrb.w	r3, [r8, #1]
   81e22:	f8db 5000 	ldr.w	r5, [fp]
   81e26:	f10b 0204 	add.w	r2, fp, #4
   81e2a:	2d00      	cmp	r5, #0
   81e2c:	9208      	str	r2, [sp, #32]
   81e2e:	46a0      	mov	r8, r4
   81e30:	f6bf aa4b 	bge.w	812ca <_vfiprintf_r+0xda>
   81e34:	f04f 35ff 	mov.w	r5, #4294967295
   81e38:	f7ff ba47 	b.w	812ca <_vfiprintf_r+0xda>
   81e3c:	00083ef4 	.word	0x00083ef4
   81e40:	00083f0c 	.word	0x00083f0c

00081e44 <__sbprintf>:
   81e44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   81e48:	6e4f      	ldr	r7, [r1, #100]	; 0x64
   81e4a:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   81e4e:	4688      	mov	r8, r1
   81e50:	9719      	str	r7, [sp, #100]	; 0x64
   81e52:	f8d8 701c 	ldr.w	r7, [r8, #28]
   81e56:	f8b1 a00c 	ldrh.w	sl, [r1, #12]
   81e5a:	f8b1 900e 	ldrh.w	r9, [r1, #14]
   81e5e:	9707      	str	r7, [sp, #28]
   81e60:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
   81e64:	ac1a      	add	r4, sp, #104	; 0x68
   81e66:	f44f 6580 	mov.w	r5, #1024	; 0x400
   81e6a:	f02a 0a02 	bic.w	sl, sl, #2
   81e6e:	2600      	movs	r6, #0
   81e70:	4669      	mov	r1, sp
   81e72:	9400      	str	r4, [sp, #0]
   81e74:	9404      	str	r4, [sp, #16]
   81e76:	9502      	str	r5, [sp, #8]
   81e78:	9505      	str	r5, [sp, #20]
   81e7a:	f8ad a00c 	strh.w	sl, [sp, #12]
   81e7e:	f8ad 900e 	strh.w	r9, [sp, #14]
   81e82:	9709      	str	r7, [sp, #36]	; 0x24
   81e84:	9606      	str	r6, [sp, #24]
   81e86:	4605      	mov	r5, r0
   81e88:	f7ff f9b2 	bl	811f0 <_vfiprintf_r>
   81e8c:	1e04      	subs	r4, r0, #0
   81e8e:	db07      	blt.n	81ea0 <__sbprintf+0x5c>
   81e90:	4628      	mov	r0, r5
   81e92:	4669      	mov	r1, sp
   81e94:	f000 f92a 	bl	820ec <_fflush_r>
   81e98:	42b0      	cmp	r0, r6
   81e9a:	bf18      	it	ne
   81e9c:	f04f 34ff 	movne.w	r4, #4294967295
   81ea0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   81ea4:	065b      	lsls	r3, r3, #25
   81ea6:	d505      	bpl.n	81eb4 <__sbprintf+0x70>
   81ea8:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   81eac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81eb0:	f8a8 300c 	strh.w	r3, [r8, #12]
   81eb4:	4620      	mov	r0, r4
   81eb6:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   81eba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   81ebe:	bf00      	nop

00081ec0 <__swsetup_r>:
   81ec0:	4b2f      	ldr	r3, [pc, #188]	; (81f80 <__swsetup_r+0xc0>)
   81ec2:	b570      	push	{r4, r5, r6, lr}
   81ec4:	4606      	mov	r6, r0
   81ec6:	6818      	ldr	r0, [r3, #0]
   81ec8:	460c      	mov	r4, r1
   81eca:	b110      	cbz	r0, 81ed2 <__swsetup_r+0x12>
   81ecc:	6b82      	ldr	r2, [r0, #56]	; 0x38
   81ece:	2a00      	cmp	r2, #0
   81ed0:	d036      	beq.n	81f40 <__swsetup_r+0x80>
   81ed2:	89a5      	ldrh	r5, [r4, #12]
   81ed4:	b2ab      	uxth	r3, r5
   81ed6:	0719      	lsls	r1, r3, #28
   81ed8:	d50c      	bpl.n	81ef4 <__swsetup_r+0x34>
   81eda:	6922      	ldr	r2, [r4, #16]
   81edc:	b1aa      	cbz	r2, 81f0a <__swsetup_r+0x4a>
   81ede:	f013 0101 	ands.w	r1, r3, #1
   81ee2:	d01e      	beq.n	81f22 <__swsetup_r+0x62>
   81ee4:	6963      	ldr	r3, [r4, #20]
   81ee6:	2100      	movs	r1, #0
   81ee8:	425b      	negs	r3, r3
   81eea:	61a3      	str	r3, [r4, #24]
   81eec:	60a1      	str	r1, [r4, #8]
   81eee:	b1f2      	cbz	r2, 81f2e <__swsetup_r+0x6e>
   81ef0:	2000      	movs	r0, #0
   81ef2:	bd70      	pop	{r4, r5, r6, pc}
   81ef4:	06da      	lsls	r2, r3, #27
   81ef6:	d53a      	bpl.n	81f6e <__swsetup_r+0xae>
   81ef8:	075b      	lsls	r3, r3, #29
   81efa:	d424      	bmi.n	81f46 <__swsetup_r+0x86>
   81efc:	6922      	ldr	r2, [r4, #16]
   81efe:	f045 0308 	orr.w	r3, r5, #8
   81f02:	81a3      	strh	r3, [r4, #12]
   81f04:	b29b      	uxth	r3, r3
   81f06:	2a00      	cmp	r2, #0
   81f08:	d1e9      	bne.n	81ede <__swsetup_r+0x1e>
   81f0a:	f403 7120 	and.w	r1, r3, #640	; 0x280
   81f0e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   81f12:	d0e4      	beq.n	81ede <__swsetup_r+0x1e>
   81f14:	4630      	mov	r0, r6
   81f16:	4621      	mov	r1, r4
   81f18:	f000 fcce 	bl	828b8 <__smakebuf_r>
   81f1c:	89a3      	ldrh	r3, [r4, #12]
   81f1e:	6922      	ldr	r2, [r4, #16]
   81f20:	e7dd      	b.n	81ede <__swsetup_r+0x1e>
   81f22:	0798      	lsls	r0, r3, #30
   81f24:	bf58      	it	pl
   81f26:	6961      	ldrpl	r1, [r4, #20]
   81f28:	60a1      	str	r1, [r4, #8]
   81f2a:	2a00      	cmp	r2, #0
   81f2c:	d1e0      	bne.n	81ef0 <__swsetup_r+0x30>
   81f2e:	89a3      	ldrh	r3, [r4, #12]
   81f30:	061a      	lsls	r2, r3, #24
   81f32:	d5dd      	bpl.n	81ef0 <__swsetup_r+0x30>
   81f34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81f38:	81a3      	strh	r3, [r4, #12]
   81f3a:	f04f 30ff 	mov.w	r0, #4294967295
   81f3e:	bd70      	pop	{r4, r5, r6, pc}
   81f40:	f000 f8f0 	bl	82124 <__sinit>
   81f44:	e7c5      	b.n	81ed2 <__swsetup_r+0x12>
   81f46:	6b21      	ldr	r1, [r4, #48]	; 0x30
   81f48:	b149      	cbz	r1, 81f5e <__swsetup_r+0x9e>
   81f4a:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81f4e:	4299      	cmp	r1, r3
   81f50:	d003      	beq.n	81f5a <__swsetup_r+0x9a>
   81f52:	4630      	mov	r0, r6
   81f54:	f000 fa2a 	bl	823ac <_free_r>
   81f58:	89a5      	ldrh	r5, [r4, #12]
   81f5a:	2300      	movs	r3, #0
   81f5c:	6323      	str	r3, [r4, #48]	; 0x30
   81f5e:	6922      	ldr	r2, [r4, #16]
   81f60:	f025 0524 	bic.w	r5, r5, #36	; 0x24
   81f64:	2100      	movs	r1, #0
   81f66:	b2ad      	uxth	r5, r5
   81f68:	6022      	str	r2, [r4, #0]
   81f6a:	6061      	str	r1, [r4, #4]
   81f6c:	e7c7      	b.n	81efe <__swsetup_r+0x3e>
   81f6e:	f045 0540 	orr.w	r5, r5, #64	; 0x40
   81f72:	2309      	movs	r3, #9
   81f74:	6033      	str	r3, [r6, #0]
   81f76:	f04f 30ff 	mov.w	r0, #4294967295
   81f7a:	81a5      	strh	r5, [r4, #12]
   81f7c:	bd70      	pop	{r4, r5, r6, pc}
   81f7e:	bf00      	nop
   81f80:	20070568 	.word	0x20070568

00081f84 <register_fini>:
   81f84:	4b02      	ldr	r3, [pc, #8]	; (81f90 <register_fini+0xc>)
   81f86:	b113      	cbz	r3, 81f8e <register_fini+0xa>
   81f88:	4802      	ldr	r0, [pc, #8]	; (81f94 <register_fini+0x10>)
   81f8a:	f000 b805 	b.w	81f98 <atexit>
   81f8e:	4770      	bx	lr
   81f90:	00000000 	.word	0x00000000
   81f94:	00082221 	.word	0x00082221

00081f98 <atexit>:
   81f98:	4601      	mov	r1, r0
   81f9a:	2000      	movs	r0, #0
   81f9c:	4602      	mov	r2, r0
   81f9e:	4603      	mov	r3, r0
   81fa0:	f001 bb9a 	b.w	836d8 <__register_exitproc>

00081fa4 <__sflush_r>:
   81fa4:	898b      	ldrh	r3, [r1, #12]
   81fa6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81faa:	b29a      	uxth	r2, r3
   81fac:	460d      	mov	r5, r1
   81fae:	0711      	lsls	r1, r2, #28
   81fb0:	4680      	mov	r8, r0
   81fb2:	d43c      	bmi.n	8202e <__sflush_r+0x8a>
   81fb4:	686a      	ldr	r2, [r5, #4]
   81fb6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   81fba:	2a00      	cmp	r2, #0
   81fbc:	81ab      	strh	r3, [r5, #12]
   81fbe:	dd59      	ble.n	82074 <__sflush_r+0xd0>
   81fc0:	6aac      	ldr	r4, [r5, #40]	; 0x28
   81fc2:	2c00      	cmp	r4, #0
   81fc4:	d04b      	beq.n	8205e <__sflush_r+0xba>
   81fc6:	b29b      	uxth	r3, r3
   81fc8:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
   81fcc:	2100      	movs	r1, #0
   81fce:	b292      	uxth	r2, r2
   81fd0:	f8d8 6000 	ldr.w	r6, [r8]
   81fd4:	f8c8 1000 	str.w	r1, [r8]
   81fd8:	2a00      	cmp	r2, #0
   81fda:	d04f      	beq.n	8207c <__sflush_r+0xd8>
   81fdc:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   81fde:	075f      	lsls	r7, r3, #29
   81fe0:	d505      	bpl.n	81fee <__sflush_r+0x4a>
   81fe2:	6869      	ldr	r1, [r5, #4]
   81fe4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   81fe6:	1a52      	subs	r2, r2, r1
   81fe8:	b10b      	cbz	r3, 81fee <__sflush_r+0x4a>
   81fea:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   81fec:	1ad2      	subs	r2, r2, r3
   81fee:	4640      	mov	r0, r8
   81ff0:	69e9      	ldr	r1, [r5, #28]
   81ff2:	2300      	movs	r3, #0
   81ff4:	47a0      	blx	r4
   81ff6:	1c44      	adds	r4, r0, #1
   81ff8:	d04a      	beq.n	82090 <__sflush_r+0xec>
   81ffa:	89ab      	ldrh	r3, [r5, #12]
   81ffc:	692a      	ldr	r2, [r5, #16]
   81ffe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   82002:	b29b      	uxth	r3, r3
   82004:	2100      	movs	r1, #0
   82006:	602a      	str	r2, [r5, #0]
   82008:	04da      	lsls	r2, r3, #19
   8200a:	81ab      	strh	r3, [r5, #12]
   8200c:	6069      	str	r1, [r5, #4]
   8200e:	d44c      	bmi.n	820aa <__sflush_r+0x106>
   82010:	6b29      	ldr	r1, [r5, #48]	; 0x30
   82012:	f8c8 6000 	str.w	r6, [r8]
   82016:	b311      	cbz	r1, 8205e <__sflush_r+0xba>
   82018:	f105 0340 	add.w	r3, r5, #64	; 0x40
   8201c:	4299      	cmp	r1, r3
   8201e:	d002      	beq.n	82026 <__sflush_r+0x82>
   82020:	4640      	mov	r0, r8
   82022:	f000 f9c3 	bl	823ac <_free_r>
   82026:	2000      	movs	r0, #0
   82028:	6328      	str	r0, [r5, #48]	; 0x30
   8202a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8202e:	692e      	ldr	r6, [r5, #16]
   82030:	b1ae      	cbz	r6, 8205e <__sflush_r+0xba>
   82032:	0791      	lsls	r1, r2, #30
   82034:	682c      	ldr	r4, [r5, #0]
   82036:	bf0c      	ite	eq
   82038:	696b      	ldreq	r3, [r5, #20]
   8203a:	2300      	movne	r3, #0
   8203c:	602e      	str	r6, [r5, #0]
   8203e:	1ba4      	subs	r4, r4, r6
   82040:	60ab      	str	r3, [r5, #8]
   82042:	e00a      	b.n	8205a <__sflush_r+0xb6>
   82044:	4632      	mov	r2, r6
   82046:	4623      	mov	r3, r4
   82048:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   8204a:	4640      	mov	r0, r8
   8204c:	69e9      	ldr	r1, [r5, #28]
   8204e:	47b8      	blx	r7
   82050:	2800      	cmp	r0, #0
   82052:	ebc0 0404 	rsb	r4, r0, r4
   82056:	4406      	add	r6, r0
   82058:	dd04      	ble.n	82064 <__sflush_r+0xc0>
   8205a:	2c00      	cmp	r4, #0
   8205c:	dcf2      	bgt.n	82044 <__sflush_r+0xa0>
   8205e:	2000      	movs	r0, #0
   82060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82064:	89ab      	ldrh	r3, [r5, #12]
   82066:	f04f 30ff 	mov.w	r0, #4294967295
   8206a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8206e:	81ab      	strh	r3, [r5, #12]
   82070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82074:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   82076:	2a00      	cmp	r2, #0
   82078:	dca2      	bgt.n	81fc0 <__sflush_r+0x1c>
   8207a:	e7f0      	b.n	8205e <__sflush_r+0xba>
   8207c:	2301      	movs	r3, #1
   8207e:	4640      	mov	r0, r8
   82080:	69e9      	ldr	r1, [r5, #28]
   82082:	47a0      	blx	r4
   82084:	1c43      	adds	r3, r0, #1
   82086:	4602      	mov	r2, r0
   82088:	d01e      	beq.n	820c8 <__sflush_r+0x124>
   8208a:	89ab      	ldrh	r3, [r5, #12]
   8208c:	6aac      	ldr	r4, [r5, #40]	; 0x28
   8208e:	e7a6      	b.n	81fde <__sflush_r+0x3a>
   82090:	f8d8 3000 	ldr.w	r3, [r8]
   82094:	b95b      	cbnz	r3, 820ae <__sflush_r+0x10a>
   82096:	89aa      	ldrh	r2, [r5, #12]
   82098:	6929      	ldr	r1, [r5, #16]
   8209a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   8209e:	b292      	uxth	r2, r2
   820a0:	606b      	str	r3, [r5, #4]
   820a2:	04d3      	lsls	r3, r2, #19
   820a4:	81aa      	strh	r2, [r5, #12]
   820a6:	6029      	str	r1, [r5, #0]
   820a8:	d5b2      	bpl.n	82010 <__sflush_r+0x6c>
   820aa:	6528      	str	r0, [r5, #80]	; 0x50
   820ac:	e7b0      	b.n	82010 <__sflush_r+0x6c>
   820ae:	2b1d      	cmp	r3, #29
   820b0:	d001      	beq.n	820b6 <__sflush_r+0x112>
   820b2:	2b16      	cmp	r3, #22
   820b4:	d113      	bne.n	820de <__sflush_r+0x13a>
   820b6:	89a9      	ldrh	r1, [r5, #12]
   820b8:	692b      	ldr	r3, [r5, #16]
   820ba:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
   820be:	2200      	movs	r2, #0
   820c0:	81a9      	strh	r1, [r5, #12]
   820c2:	602b      	str	r3, [r5, #0]
   820c4:	606a      	str	r2, [r5, #4]
   820c6:	e7a3      	b.n	82010 <__sflush_r+0x6c>
   820c8:	f8d8 3000 	ldr.w	r3, [r8]
   820cc:	2b00      	cmp	r3, #0
   820ce:	d0dc      	beq.n	8208a <__sflush_r+0xe6>
   820d0:	2b1d      	cmp	r3, #29
   820d2:	d001      	beq.n	820d8 <__sflush_r+0x134>
   820d4:	2b16      	cmp	r3, #22
   820d6:	d1c5      	bne.n	82064 <__sflush_r+0xc0>
   820d8:	f8c8 6000 	str.w	r6, [r8]
   820dc:	e7bf      	b.n	8205e <__sflush_r+0xba>
   820de:	89ab      	ldrh	r3, [r5, #12]
   820e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   820e4:	81ab      	strh	r3, [r5, #12]
   820e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   820ea:	bf00      	nop

000820ec <_fflush_r>:
   820ec:	b510      	push	{r4, lr}
   820ee:	4604      	mov	r4, r0
   820f0:	b082      	sub	sp, #8
   820f2:	b108      	cbz	r0, 820f8 <_fflush_r+0xc>
   820f4:	6b83      	ldr	r3, [r0, #56]	; 0x38
   820f6:	b153      	cbz	r3, 8210e <_fflush_r+0x22>
   820f8:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
   820fc:	b908      	cbnz	r0, 82102 <_fflush_r+0x16>
   820fe:	b002      	add	sp, #8
   82100:	bd10      	pop	{r4, pc}
   82102:	4620      	mov	r0, r4
   82104:	b002      	add	sp, #8
   82106:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8210a:	f7ff bf4b 	b.w	81fa4 <__sflush_r>
   8210e:	9101      	str	r1, [sp, #4]
   82110:	f000 f808 	bl	82124 <__sinit>
   82114:	9901      	ldr	r1, [sp, #4]
   82116:	e7ef      	b.n	820f8 <_fflush_r+0xc>

00082118 <_cleanup_r>:
   82118:	4901      	ldr	r1, [pc, #4]	; (82120 <_cleanup_r+0x8>)
   8211a:	f000 bb9f 	b.w	8285c <_fwalk>
   8211e:	bf00      	nop
   82120:	00083825 	.word	0x00083825

00082124 <__sinit>:
   82124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82128:	6b84      	ldr	r4, [r0, #56]	; 0x38
   8212a:	b083      	sub	sp, #12
   8212c:	4607      	mov	r7, r0
   8212e:	2c00      	cmp	r4, #0
   82130:	d165      	bne.n	821fe <__sinit+0xda>
   82132:	687d      	ldr	r5, [r7, #4]
   82134:	4833      	ldr	r0, [pc, #204]	; (82204 <__sinit+0xe0>)
   82136:	2304      	movs	r3, #4
   82138:	2103      	movs	r1, #3
   8213a:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
   8213e:	63f8      	str	r0, [r7, #60]	; 0x3c
   82140:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
   82144:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
   82148:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
   8214c:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   82150:	81ab      	strh	r3, [r5, #12]
   82152:	602c      	str	r4, [r5, #0]
   82154:	606c      	str	r4, [r5, #4]
   82156:	60ac      	str	r4, [r5, #8]
   82158:	666c      	str	r4, [r5, #100]	; 0x64
   8215a:	81ec      	strh	r4, [r5, #14]
   8215c:	612c      	str	r4, [r5, #16]
   8215e:	616c      	str	r4, [r5, #20]
   82160:	61ac      	str	r4, [r5, #24]
   82162:	4621      	mov	r1, r4
   82164:	2208      	movs	r2, #8
   82166:	f7fe ff05 	bl	80f74 <memset>
   8216a:	f8df b09c 	ldr.w	fp, [pc, #156]	; 82208 <__sinit+0xe4>
   8216e:	68be      	ldr	r6, [r7, #8]
   82170:	f8df a098 	ldr.w	sl, [pc, #152]	; 8220c <__sinit+0xe8>
   82174:	f8df 9098 	ldr.w	r9, [pc, #152]	; 82210 <__sinit+0xec>
   82178:	f8df 8098 	ldr.w	r8, [pc, #152]	; 82214 <__sinit+0xf0>
   8217c:	2301      	movs	r3, #1
   8217e:	2209      	movs	r2, #9
   82180:	61ed      	str	r5, [r5, #28]
   82182:	f8c5 b020 	str.w	fp, [r5, #32]
   82186:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   8218a:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   8218e:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   82192:	4621      	mov	r1, r4
   82194:	81f3      	strh	r3, [r6, #14]
   82196:	81b2      	strh	r2, [r6, #12]
   82198:	6034      	str	r4, [r6, #0]
   8219a:	6074      	str	r4, [r6, #4]
   8219c:	60b4      	str	r4, [r6, #8]
   8219e:	6674      	str	r4, [r6, #100]	; 0x64
   821a0:	6134      	str	r4, [r6, #16]
   821a2:	6174      	str	r4, [r6, #20]
   821a4:	61b4      	str	r4, [r6, #24]
   821a6:	2208      	movs	r2, #8
   821a8:	f106 005c 	add.w	r0, r6, #92	; 0x5c
   821ac:	9301      	str	r3, [sp, #4]
   821ae:	f7fe fee1 	bl	80f74 <memset>
   821b2:	68fd      	ldr	r5, [r7, #12]
   821b4:	2012      	movs	r0, #18
   821b6:	2202      	movs	r2, #2
   821b8:	61f6      	str	r6, [r6, #28]
   821ba:	f8c6 b020 	str.w	fp, [r6, #32]
   821be:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
   821c2:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
   821c6:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
   821ca:	4621      	mov	r1, r4
   821cc:	81a8      	strh	r0, [r5, #12]
   821ce:	81ea      	strh	r2, [r5, #14]
   821d0:	602c      	str	r4, [r5, #0]
   821d2:	606c      	str	r4, [r5, #4]
   821d4:	60ac      	str	r4, [r5, #8]
   821d6:	666c      	str	r4, [r5, #100]	; 0x64
   821d8:	612c      	str	r4, [r5, #16]
   821da:	616c      	str	r4, [r5, #20]
   821dc:	61ac      	str	r4, [r5, #24]
   821de:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   821e2:	2208      	movs	r2, #8
   821e4:	f7fe fec6 	bl	80f74 <memset>
   821e8:	9b01      	ldr	r3, [sp, #4]
   821ea:	61ed      	str	r5, [r5, #28]
   821ec:	f8c5 b020 	str.w	fp, [r5, #32]
   821f0:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   821f4:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   821f8:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   821fc:	63bb      	str	r3, [r7, #56]	; 0x38
   821fe:	b003      	add	sp, #12
   82200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82204:	00082119 	.word	0x00082119
   82208:	00083519 	.word	0x00083519
   8220c:	0008353d 	.word	0x0008353d
   82210:	00083575 	.word	0x00083575
   82214:	00083595 	.word	0x00083595

00082218 <__sfp_lock_acquire>:
   82218:	4770      	bx	lr
   8221a:	bf00      	nop

0008221c <__sfp_lock_release>:
   8221c:	4770      	bx	lr
   8221e:	bf00      	nop

00082220 <__libc_fini_array>:
   82220:	b538      	push	{r3, r4, r5, lr}
   82222:	4d09      	ldr	r5, [pc, #36]	; (82248 <__libc_fini_array+0x28>)
   82224:	4c09      	ldr	r4, [pc, #36]	; (8224c <__libc_fini_array+0x2c>)
   82226:	1b64      	subs	r4, r4, r5
   82228:	10a4      	asrs	r4, r4, #2
   8222a:	bf18      	it	ne
   8222c:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   82230:	d005      	beq.n	8223e <__libc_fini_array+0x1e>
   82232:	3c01      	subs	r4, #1
   82234:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   82238:	4798      	blx	r3
   8223a:	2c00      	cmp	r4, #0
   8223c:	d1f9      	bne.n	82232 <__libc_fini_array+0x12>
   8223e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82242:	f001 be75 	b.w	83f30 <_fini>
   82246:	bf00      	nop
   82248:	00083f3c 	.word	0x00083f3c
   8224c:	00083f40 	.word	0x00083f40

00082250 <_fputwc_r>:
   82250:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82254:	8993      	ldrh	r3, [r2, #12]
   82256:	460f      	mov	r7, r1
   82258:	0499      	lsls	r1, r3, #18
   8225a:	b082      	sub	sp, #8
   8225c:	4614      	mov	r4, r2
   8225e:	4680      	mov	r8, r0
   82260:	d406      	bmi.n	82270 <_fputwc_r+0x20>
   82262:	6e52      	ldr	r2, [r2, #100]	; 0x64
   82264:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   82268:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   8226c:	81a3      	strh	r3, [r4, #12]
   8226e:	6662      	str	r2, [r4, #100]	; 0x64
   82270:	f000 fb1c 	bl	828ac <__locale_mb_cur_max>
   82274:	2801      	cmp	r0, #1
   82276:	d03e      	beq.n	822f6 <_fputwc_r+0xa6>
   82278:	463a      	mov	r2, r7
   8227a:	4640      	mov	r0, r8
   8227c:	a901      	add	r1, sp, #4
   8227e:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   82282:	f001 f9df 	bl	83644 <_wcrtomb_r>
   82286:	1c42      	adds	r2, r0, #1
   82288:	4606      	mov	r6, r0
   8228a:	d02d      	beq.n	822e8 <_fputwc_r+0x98>
   8228c:	2800      	cmp	r0, #0
   8228e:	d03a      	beq.n	82306 <_fputwc_r+0xb6>
   82290:	f89d 1004 	ldrb.w	r1, [sp, #4]
   82294:	2500      	movs	r5, #0
   82296:	e009      	b.n	822ac <_fputwc_r+0x5c>
   82298:	6823      	ldr	r3, [r4, #0]
   8229a:	7019      	strb	r1, [r3, #0]
   8229c:	6823      	ldr	r3, [r4, #0]
   8229e:	3301      	adds	r3, #1
   822a0:	6023      	str	r3, [r4, #0]
   822a2:	3501      	adds	r5, #1
   822a4:	42b5      	cmp	r5, r6
   822a6:	d22e      	bcs.n	82306 <_fputwc_r+0xb6>
   822a8:	ab01      	add	r3, sp, #4
   822aa:	5ce9      	ldrb	r1, [r5, r3]
   822ac:	68a3      	ldr	r3, [r4, #8]
   822ae:	3b01      	subs	r3, #1
   822b0:	2b00      	cmp	r3, #0
   822b2:	60a3      	str	r3, [r4, #8]
   822b4:	daf0      	bge.n	82298 <_fputwc_r+0x48>
   822b6:	69a2      	ldr	r2, [r4, #24]
   822b8:	4293      	cmp	r3, r2
   822ba:	db06      	blt.n	822ca <_fputwc_r+0x7a>
   822bc:	6823      	ldr	r3, [r4, #0]
   822be:	7019      	strb	r1, [r3, #0]
   822c0:	6823      	ldr	r3, [r4, #0]
   822c2:	7819      	ldrb	r1, [r3, #0]
   822c4:	3301      	adds	r3, #1
   822c6:	290a      	cmp	r1, #10
   822c8:	d1ea      	bne.n	822a0 <_fputwc_r+0x50>
   822ca:	4640      	mov	r0, r8
   822cc:	4622      	mov	r2, r4
   822ce:	f001 f965 	bl	8359c <__swbuf_r>
   822d2:	f1b0 33ff 	subs.w	r3, r0, #4294967295
   822d6:	4258      	negs	r0, r3
   822d8:	4158      	adcs	r0, r3
   822da:	2800      	cmp	r0, #0
   822dc:	d0e1      	beq.n	822a2 <_fputwc_r+0x52>
   822de:	f04f 30ff 	mov.w	r0, #4294967295
   822e2:	b002      	add	sp, #8
   822e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   822e8:	89a3      	ldrh	r3, [r4, #12]
   822ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   822ee:	81a3      	strh	r3, [r4, #12]
   822f0:	b002      	add	sp, #8
   822f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   822f6:	1e7b      	subs	r3, r7, #1
   822f8:	2bfe      	cmp	r3, #254	; 0xfe
   822fa:	d8bd      	bhi.n	82278 <_fputwc_r+0x28>
   822fc:	b2f9      	uxtb	r1, r7
   822fe:	4606      	mov	r6, r0
   82300:	f88d 1004 	strb.w	r1, [sp, #4]
   82304:	e7c6      	b.n	82294 <_fputwc_r+0x44>
   82306:	4638      	mov	r0, r7
   82308:	b002      	add	sp, #8
   8230a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8230e:	bf00      	nop

00082310 <_malloc_trim_r>:
   82310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82312:	4d23      	ldr	r5, [pc, #140]	; (823a0 <_malloc_trim_r+0x90>)
   82314:	460f      	mov	r7, r1
   82316:	4604      	mov	r4, r0
   82318:	f000 ff08 	bl	8312c <__malloc_lock>
   8231c:	68ab      	ldr	r3, [r5, #8]
   8231e:	685e      	ldr	r6, [r3, #4]
   82320:	f026 0603 	bic.w	r6, r6, #3
   82324:	1bf1      	subs	r1, r6, r7
   82326:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   8232a:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   8232e:	f021 010f 	bic.w	r1, r1, #15
   82332:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   82336:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   8233a:	db07      	blt.n	8234c <_malloc_trim_r+0x3c>
   8233c:	4620      	mov	r0, r4
   8233e:	2100      	movs	r1, #0
   82340:	f001 f8d8 	bl	834f4 <_sbrk_r>
   82344:	68ab      	ldr	r3, [r5, #8]
   82346:	4433      	add	r3, r6
   82348:	4298      	cmp	r0, r3
   8234a:	d004      	beq.n	82356 <_malloc_trim_r+0x46>
   8234c:	4620      	mov	r0, r4
   8234e:	f000 feef 	bl	83130 <__malloc_unlock>
   82352:	2000      	movs	r0, #0
   82354:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82356:	4620      	mov	r0, r4
   82358:	4279      	negs	r1, r7
   8235a:	f001 f8cb 	bl	834f4 <_sbrk_r>
   8235e:	3001      	adds	r0, #1
   82360:	d00d      	beq.n	8237e <_malloc_trim_r+0x6e>
   82362:	4b10      	ldr	r3, [pc, #64]	; (823a4 <_malloc_trim_r+0x94>)
   82364:	68aa      	ldr	r2, [r5, #8]
   82366:	6819      	ldr	r1, [r3, #0]
   82368:	1bf6      	subs	r6, r6, r7
   8236a:	f046 0601 	orr.w	r6, r6, #1
   8236e:	4620      	mov	r0, r4
   82370:	1bc9      	subs	r1, r1, r7
   82372:	6056      	str	r6, [r2, #4]
   82374:	6019      	str	r1, [r3, #0]
   82376:	f000 fedb 	bl	83130 <__malloc_unlock>
   8237a:	2001      	movs	r0, #1
   8237c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8237e:	4620      	mov	r0, r4
   82380:	2100      	movs	r1, #0
   82382:	f001 f8b7 	bl	834f4 <_sbrk_r>
   82386:	68ab      	ldr	r3, [r5, #8]
   82388:	1ac2      	subs	r2, r0, r3
   8238a:	2a0f      	cmp	r2, #15
   8238c:	ddde      	ble.n	8234c <_malloc_trim_r+0x3c>
   8238e:	4d06      	ldr	r5, [pc, #24]	; (823a8 <_malloc_trim_r+0x98>)
   82390:	4904      	ldr	r1, [pc, #16]	; (823a4 <_malloc_trim_r+0x94>)
   82392:	682d      	ldr	r5, [r5, #0]
   82394:	f042 0201 	orr.w	r2, r2, #1
   82398:	1b40      	subs	r0, r0, r5
   8239a:	605a      	str	r2, [r3, #4]
   8239c:	6008      	str	r0, [r1, #0]
   8239e:	e7d5      	b.n	8234c <_malloc_trim_r+0x3c>
   823a0:	20070590 	.word	0x20070590
   823a4:	20070ae8 	.word	0x20070ae8
   823a8:	2007099c 	.word	0x2007099c

000823ac <_free_r>:
   823ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   823b0:	460d      	mov	r5, r1
   823b2:	4606      	mov	r6, r0
   823b4:	2900      	cmp	r1, #0
   823b6:	d055      	beq.n	82464 <_free_r+0xb8>
   823b8:	f000 feb8 	bl	8312c <__malloc_lock>
   823bc:	f855 1c04 	ldr.w	r1, [r5, #-4]
   823c0:	f8df c170 	ldr.w	ip, [pc, #368]	; 82534 <_free_r+0x188>
   823c4:	f1a5 0408 	sub.w	r4, r5, #8
   823c8:	f021 0301 	bic.w	r3, r1, #1
   823cc:	18e2      	adds	r2, r4, r3
   823ce:	f8dc 0008 	ldr.w	r0, [ip, #8]
   823d2:	6857      	ldr	r7, [r2, #4]
   823d4:	4290      	cmp	r0, r2
   823d6:	f027 0703 	bic.w	r7, r7, #3
   823da:	d068      	beq.n	824ae <_free_r+0x102>
   823dc:	f011 0101 	ands.w	r1, r1, #1
   823e0:	6057      	str	r7, [r2, #4]
   823e2:	d032      	beq.n	8244a <_free_r+0x9e>
   823e4:	2100      	movs	r1, #0
   823e6:	19d0      	adds	r0, r2, r7
   823e8:	6840      	ldr	r0, [r0, #4]
   823ea:	07c0      	lsls	r0, r0, #31
   823ec:	d406      	bmi.n	823fc <_free_r+0x50>
   823ee:	443b      	add	r3, r7
   823f0:	6890      	ldr	r0, [r2, #8]
   823f2:	2900      	cmp	r1, #0
   823f4:	d04d      	beq.n	82492 <_free_r+0xe6>
   823f6:	68d2      	ldr	r2, [r2, #12]
   823f8:	60c2      	str	r2, [r0, #12]
   823fa:	6090      	str	r0, [r2, #8]
   823fc:	f043 0201 	orr.w	r2, r3, #1
   82400:	6062      	str	r2, [r4, #4]
   82402:	50e3      	str	r3, [r4, r3]
   82404:	b9e1      	cbnz	r1, 82440 <_free_r+0x94>
   82406:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8240a:	d32d      	bcc.n	82468 <_free_r+0xbc>
   8240c:	0a5a      	lsrs	r2, r3, #9
   8240e:	2a04      	cmp	r2, #4
   82410:	d869      	bhi.n	824e6 <_free_r+0x13a>
   82412:	0998      	lsrs	r0, r3, #6
   82414:	3038      	adds	r0, #56	; 0x38
   82416:	0041      	lsls	r1, r0, #1
   82418:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   8241c:	f8dc 2008 	ldr.w	r2, [ip, #8]
   82420:	4944      	ldr	r1, [pc, #272]	; (82534 <_free_r+0x188>)
   82422:	4562      	cmp	r2, ip
   82424:	d065      	beq.n	824f2 <_free_r+0x146>
   82426:	6851      	ldr	r1, [r2, #4]
   82428:	f021 0103 	bic.w	r1, r1, #3
   8242c:	428b      	cmp	r3, r1
   8242e:	d202      	bcs.n	82436 <_free_r+0x8a>
   82430:	6892      	ldr	r2, [r2, #8]
   82432:	4594      	cmp	ip, r2
   82434:	d1f7      	bne.n	82426 <_free_r+0x7a>
   82436:	68d3      	ldr	r3, [r2, #12]
   82438:	60e3      	str	r3, [r4, #12]
   8243a:	60a2      	str	r2, [r4, #8]
   8243c:	609c      	str	r4, [r3, #8]
   8243e:	60d4      	str	r4, [r2, #12]
   82440:	4630      	mov	r0, r6
   82442:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82446:	f000 be73 	b.w	83130 <__malloc_unlock>
   8244a:	f855 5c08 	ldr.w	r5, [r5, #-8]
   8244e:	f10c 0808 	add.w	r8, ip, #8
   82452:	1b64      	subs	r4, r4, r5
   82454:	68a0      	ldr	r0, [r4, #8]
   82456:	442b      	add	r3, r5
   82458:	4540      	cmp	r0, r8
   8245a:	d042      	beq.n	824e2 <_free_r+0x136>
   8245c:	68e5      	ldr	r5, [r4, #12]
   8245e:	60c5      	str	r5, [r0, #12]
   82460:	60a8      	str	r0, [r5, #8]
   82462:	e7c0      	b.n	823e6 <_free_r+0x3a>
   82464:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82468:	08db      	lsrs	r3, r3, #3
   8246a:	109a      	asrs	r2, r3, #2
   8246c:	2001      	movs	r0, #1
   8246e:	4090      	lsls	r0, r2
   82470:	f8dc 1004 	ldr.w	r1, [ip, #4]
   82474:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   82478:	689a      	ldr	r2, [r3, #8]
   8247a:	4301      	orrs	r1, r0
   8247c:	60a2      	str	r2, [r4, #8]
   8247e:	60e3      	str	r3, [r4, #12]
   82480:	f8cc 1004 	str.w	r1, [ip, #4]
   82484:	4630      	mov	r0, r6
   82486:	609c      	str	r4, [r3, #8]
   82488:	60d4      	str	r4, [r2, #12]
   8248a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8248e:	f000 be4f 	b.w	83130 <__malloc_unlock>
   82492:	4d29      	ldr	r5, [pc, #164]	; (82538 <_free_r+0x18c>)
   82494:	42a8      	cmp	r0, r5
   82496:	d1ae      	bne.n	823f6 <_free_r+0x4a>
   82498:	f043 0201 	orr.w	r2, r3, #1
   8249c:	f8cc 4014 	str.w	r4, [ip, #20]
   824a0:	f8cc 4010 	str.w	r4, [ip, #16]
   824a4:	60e0      	str	r0, [r4, #12]
   824a6:	60a0      	str	r0, [r4, #8]
   824a8:	6062      	str	r2, [r4, #4]
   824aa:	50e3      	str	r3, [r4, r3]
   824ac:	e7c8      	b.n	82440 <_free_r+0x94>
   824ae:	441f      	add	r7, r3
   824b0:	07cb      	lsls	r3, r1, #31
   824b2:	d407      	bmi.n	824c4 <_free_r+0x118>
   824b4:	f855 1c08 	ldr.w	r1, [r5, #-8]
   824b8:	1a64      	subs	r4, r4, r1
   824ba:	68e3      	ldr	r3, [r4, #12]
   824bc:	68a2      	ldr	r2, [r4, #8]
   824be:	440f      	add	r7, r1
   824c0:	60d3      	str	r3, [r2, #12]
   824c2:	609a      	str	r2, [r3, #8]
   824c4:	4b1d      	ldr	r3, [pc, #116]	; (8253c <_free_r+0x190>)
   824c6:	f047 0201 	orr.w	r2, r7, #1
   824ca:	681b      	ldr	r3, [r3, #0]
   824cc:	6062      	str	r2, [r4, #4]
   824ce:	429f      	cmp	r7, r3
   824d0:	f8cc 4008 	str.w	r4, [ip, #8]
   824d4:	d3b4      	bcc.n	82440 <_free_r+0x94>
   824d6:	4b1a      	ldr	r3, [pc, #104]	; (82540 <_free_r+0x194>)
   824d8:	4630      	mov	r0, r6
   824da:	6819      	ldr	r1, [r3, #0]
   824dc:	f7ff ff18 	bl	82310 <_malloc_trim_r>
   824e0:	e7ae      	b.n	82440 <_free_r+0x94>
   824e2:	2101      	movs	r1, #1
   824e4:	e77f      	b.n	823e6 <_free_r+0x3a>
   824e6:	2a14      	cmp	r2, #20
   824e8:	d80b      	bhi.n	82502 <_free_r+0x156>
   824ea:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   824ee:	0041      	lsls	r1, r0, #1
   824f0:	e792      	b.n	82418 <_free_r+0x6c>
   824f2:	1080      	asrs	r0, r0, #2
   824f4:	2501      	movs	r5, #1
   824f6:	4085      	lsls	r5, r0
   824f8:	6848      	ldr	r0, [r1, #4]
   824fa:	4613      	mov	r3, r2
   824fc:	4328      	orrs	r0, r5
   824fe:	6048      	str	r0, [r1, #4]
   82500:	e79a      	b.n	82438 <_free_r+0x8c>
   82502:	2a54      	cmp	r2, #84	; 0x54
   82504:	d803      	bhi.n	8250e <_free_r+0x162>
   82506:	0b18      	lsrs	r0, r3, #12
   82508:	306e      	adds	r0, #110	; 0x6e
   8250a:	0041      	lsls	r1, r0, #1
   8250c:	e784      	b.n	82418 <_free_r+0x6c>
   8250e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82512:	d803      	bhi.n	8251c <_free_r+0x170>
   82514:	0bd8      	lsrs	r0, r3, #15
   82516:	3077      	adds	r0, #119	; 0x77
   82518:	0041      	lsls	r1, r0, #1
   8251a:	e77d      	b.n	82418 <_free_r+0x6c>
   8251c:	f240 5154 	movw	r1, #1364	; 0x554
   82520:	428a      	cmp	r2, r1
   82522:	d803      	bhi.n	8252c <_free_r+0x180>
   82524:	0c98      	lsrs	r0, r3, #18
   82526:	307c      	adds	r0, #124	; 0x7c
   82528:	0041      	lsls	r1, r0, #1
   8252a:	e775      	b.n	82418 <_free_r+0x6c>
   8252c:	21fc      	movs	r1, #252	; 0xfc
   8252e:	207e      	movs	r0, #126	; 0x7e
   82530:	e772      	b.n	82418 <_free_r+0x6c>
   82532:	bf00      	nop
   82534:	20070590 	.word	0x20070590
   82538:	20070598 	.word	0x20070598
   8253c:	20070998 	.word	0x20070998
   82540:	20070ae4 	.word	0x20070ae4

00082544 <__sfvwrite_r>:
   82544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82548:	6893      	ldr	r3, [r2, #8]
   8254a:	b083      	sub	sp, #12
   8254c:	4616      	mov	r6, r2
   8254e:	4681      	mov	r9, r0
   82550:	460c      	mov	r4, r1
   82552:	b32b      	cbz	r3, 825a0 <__sfvwrite_r+0x5c>
   82554:	898b      	ldrh	r3, [r1, #12]
   82556:	0719      	lsls	r1, r3, #28
   82558:	d526      	bpl.n	825a8 <__sfvwrite_r+0x64>
   8255a:	6922      	ldr	r2, [r4, #16]
   8255c:	b322      	cbz	r2, 825a8 <__sfvwrite_r+0x64>
   8255e:	f003 0202 	and.w	r2, r3, #2
   82562:	b292      	uxth	r2, r2
   82564:	6835      	ldr	r5, [r6, #0]
   82566:	2a00      	cmp	r2, #0
   82568:	d02c      	beq.n	825c4 <__sfvwrite_r+0x80>
   8256a:	f04f 0a00 	mov.w	sl, #0
   8256e:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 82858 <__sfvwrite_r+0x314>
   82572:	46d0      	mov	r8, sl
   82574:	45d8      	cmp	r8, fp
   82576:	bf34      	ite	cc
   82578:	4643      	movcc	r3, r8
   8257a:	465b      	movcs	r3, fp
   8257c:	4652      	mov	r2, sl
   8257e:	4648      	mov	r0, r9
   82580:	f1b8 0f00 	cmp.w	r8, #0
   82584:	d04f      	beq.n	82626 <__sfvwrite_r+0xe2>
   82586:	69e1      	ldr	r1, [r4, #28]
   82588:	6a67      	ldr	r7, [r4, #36]	; 0x24
   8258a:	47b8      	blx	r7
   8258c:	2800      	cmp	r0, #0
   8258e:	dd56      	ble.n	8263e <__sfvwrite_r+0xfa>
   82590:	68b3      	ldr	r3, [r6, #8]
   82592:	4482      	add	sl, r0
   82594:	1a1b      	subs	r3, r3, r0
   82596:	ebc0 0808 	rsb	r8, r0, r8
   8259a:	60b3      	str	r3, [r6, #8]
   8259c:	2b00      	cmp	r3, #0
   8259e:	d1e9      	bne.n	82574 <__sfvwrite_r+0x30>
   825a0:	2000      	movs	r0, #0
   825a2:	b003      	add	sp, #12
   825a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   825a8:	4648      	mov	r0, r9
   825aa:	4621      	mov	r1, r4
   825ac:	f7ff fc88 	bl	81ec0 <__swsetup_r>
   825b0:	2800      	cmp	r0, #0
   825b2:	f040 8148 	bne.w	82846 <__sfvwrite_r+0x302>
   825b6:	89a3      	ldrh	r3, [r4, #12]
   825b8:	6835      	ldr	r5, [r6, #0]
   825ba:	f003 0202 	and.w	r2, r3, #2
   825be:	b292      	uxth	r2, r2
   825c0:	2a00      	cmp	r2, #0
   825c2:	d1d2      	bne.n	8256a <__sfvwrite_r+0x26>
   825c4:	f013 0a01 	ands.w	sl, r3, #1
   825c8:	d142      	bne.n	82650 <__sfvwrite_r+0x10c>
   825ca:	46d0      	mov	r8, sl
   825cc:	f1b8 0f00 	cmp.w	r8, #0
   825d0:	d023      	beq.n	8261a <__sfvwrite_r+0xd6>
   825d2:	059a      	lsls	r2, r3, #22
   825d4:	68a7      	ldr	r7, [r4, #8]
   825d6:	d576      	bpl.n	826c6 <__sfvwrite_r+0x182>
   825d8:	45b8      	cmp	r8, r7
   825da:	f0c0 80a4 	bcc.w	82726 <__sfvwrite_r+0x1e2>
   825de:	f413 6f90 	tst.w	r3, #1152	; 0x480
   825e2:	f040 80b2 	bne.w	8274a <__sfvwrite_r+0x206>
   825e6:	6820      	ldr	r0, [r4, #0]
   825e8:	46bb      	mov	fp, r7
   825ea:	4651      	mov	r1, sl
   825ec:	465a      	mov	r2, fp
   825ee:	f000 fd37 	bl	83060 <memmove>
   825f2:	68a2      	ldr	r2, [r4, #8]
   825f4:	6821      	ldr	r1, [r4, #0]
   825f6:	1bd2      	subs	r2, r2, r7
   825f8:	eb01 030b 	add.w	r3, r1, fp
   825fc:	60a2      	str	r2, [r4, #8]
   825fe:	6023      	str	r3, [r4, #0]
   82600:	4642      	mov	r2, r8
   82602:	68b3      	ldr	r3, [r6, #8]
   82604:	4492      	add	sl, r2
   82606:	1a9b      	subs	r3, r3, r2
   82608:	ebc2 0808 	rsb	r8, r2, r8
   8260c:	60b3      	str	r3, [r6, #8]
   8260e:	2b00      	cmp	r3, #0
   82610:	d0c6      	beq.n	825a0 <__sfvwrite_r+0x5c>
   82612:	89a3      	ldrh	r3, [r4, #12]
   82614:	f1b8 0f00 	cmp.w	r8, #0
   82618:	d1db      	bne.n	825d2 <__sfvwrite_r+0x8e>
   8261a:	f8d5 a000 	ldr.w	sl, [r5]
   8261e:	f8d5 8004 	ldr.w	r8, [r5, #4]
   82622:	3508      	adds	r5, #8
   82624:	e7d2      	b.n	825cc <__sfvwrite_r+0x88>
   82626:	f8d5 a000 	ldr.w	sl, [r5]
   8262a:	f8d5 8004 	ldr.w	r8, [r5, #4]
   8262e:	3508      	adds	r5, #8
   82630:	e7a0      	b.n	82574 <__sfvwrite_r+0x30>
   82632:	4648      	mov	r0, r9
   82634:	4621      	mov	r1, r4
   82636:	f7ff fd59 	bl	820ec <_fflush_r>
   8263a:	2800      	cmp	r0, #0
   8263c:	d059      	beq.n	826f2 <__sfvwrite_r+0x1ae>
   8263e:	89a3      	ldrh	r3, [r4, #12]
   82640:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82644:	f04f 30ff 	mov.w	r0, #4294967295
   82648:	81a3      	strh	r3, [r4, #12]
   8264a:	b003      	add	sp, #12
   8264c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82650:	4692      	mov	sl, r2
   82652:	9201      	str	r2, [sp, #4]
   82654:	4693      	mov	fp, r2
   82656:	4690      	mov	r8, r2
   82658:	f1b8 0f00 	cmp.w	r8, #0
   8265c:	d02b      	beq.n	826b6 <__sfvwrite_r+0x172>
   8265e:	9f01      	ldr	r7, [sp, #4]
   82660:	2f00      	cmp	r7, #0
   82662:	d064      	beq.n	8272e <__sfvwrite_r+0x1ea>
   82664:	6820      	ldr	r0, [r4, #0]
   82666:	6921      	ldr	r1, [r4, #16]
   82668:	45c2      	cmp	sl, r8
   8266a:	bf34      	ite	cc
   8266c:	4653      	movcc	r3, sl
   8266e:	4643      	movcs	r3, r8
   82670:	4288      	cmp	r0, r1
   82672:	461f      	mov	r7, r3
   82674:	f8d4 c008 	ldr.w	ip, [r4, #8]
   82678:	6962      	ldr	r2, [r4, #20]
   8267a:	d903      	bls.n	82684 <__sfvwrite_r+0x140>
   8267c:	4494      	add	ip, r2
   8267e:	4563      	cmp	r3, ip
   82680:	f300 80ae 	bgt.w	827e0 <__sfvwrite_r+0x29c>
   82684:	4293      	cmp	r3, r2
   82686:	db36      	blt.n	826f6 <__sfvwrite_r+0x1b2>
   82688:	4613      	mov	r3, r2
   8268a:	6a67      	ldr	r7, [r4, #36]	; 0x24
   8268c:	4648      	mov	r0, r9
   8268e:	69e1      	ldr	r1, [r4, #28]
   82690:	465a      	mov	r2, fp
   82692:	47b8      	blx	r7
   82694:	1e07      	subs	r7, r0, #0
   82696:	ddd2      	ble.n	8263e <__sfvwrite_r+0xfa>
   82698:	ebba 0a07 	subs.w	sl, sl, r7
   8269c:	d03a      	beq.n	82714 <__sfvwrite_r+0x1d0>
   8269e:	68b3      	ldr	r3, [r6, #8]
   826a0:	44bb      	add	fp, r7
   826a2:	1bdb      	subs	r3, r3, r7
   826a4:	ebc7 0808 	rsb	r8, r7, r8
   826a8:	60b3      	str	r3, [r6, #8]
   826aa:	2b00      	cmp	r3, #0
   826ac:	f43f af78 	beq.w	825a0 <__sfvwrite_r+0x5c>
   826b0:	f1b8 0f00 	cmp.w	r8, #0
   826b4:	d1d3      	bne.n	8265e <__sfvwrite_r+0x11a>
   826b6:	2700      	movs	r7, #0
   826b8:	f8d5 b000 	ldr.w	fp, [r5]
   826bc:	f8d5 8004 	ldr.w	r8, [r5, #4]
   826c0:	9701      	str	r7, [sp, #4]
   826c2:	3508      	adds	r5, #8
   826c4:	e7c8      	b.n	82658 <__sfvwrite_r+0x114>
   826c6:	6820      	ldr	r0, [r4, #0]
   826c8:	6923      	ldr	r3, [r4, #16]
   826ca:	4298      	cmp	r0, r3
   826cc:	d802      	bhi.n	826d4 <__sfvwrite_r+0x190>
   826ce:	6963      	ldr	r3, [r4, #20]
   826d0:	4598      	cmp	r8, r3
   826d2:	d272      	bcs.n	827ba <__sfvwrite_r+0x276>
   826d4:	45b8      	cmp	r8, r7
   826d6:	bf38      	it	cc
   826d8:	4647      	movcc	r7, r8
   826da:	463a      	mov	r2, r7
   826dc:	4651      	mov	r1, sl
   826de:	f000 fcbf 	bl	83060 <memmove>
   826e2:	68a3      	ldr	r3, [r4, #8]
   826e4:	6822      	ldr	r2, [r4, #0]
   826e6:	1bdb      	subs	r3, r3, r7
   826e8:	443a      	add	r2, r7
   826ea:	60a3      	str	r3, [r4, #8]
   826ec:	6022      	str	r2, [r4, #0]
   826ee:	2b00      	cmp	r3, #0
   826f0:	d09f      	beq.n	82632 <__sfvwrite_r+0xee>
   826f2:	463a      	mov	r2, r7
   826f4:	e785      	b.n	82602 <__sfvwrite_r+0xbe>
   826f6:	461a      	mov	r2, r3
   826f8:	4659      	mov	r1, fp
   826fa:	9300      	str	r3, [sp, #0]
   826fc:	f000 fcb0 	bl	83060 <memmove>
   82700:	9b00      	ldr	r3, [sp, #0]
   82702:	68a1      	ldr	r1, [r4, #8]
   82704:	6822      	ldr	r2, [r4, #0]
   82706:	1ac9      	subs	r1, r1, r3
   82708:	ebba 0a07 	subs.w	sl, sl, r7
   8270c:	4413      	add	r3, r2
   8270e:	60a1      	str	r1, [r4, #8]
   82710:	6023      	str	r3, [r4, #0]
   82712:	d1c4      	bne.n	8269e <__sfvwrite_r+0x15a>
   82714:	4648      	mov	r0, r9
   82716:	4621      	mov	r1, r4
   82718:	f7ff fce8 	bl	820ec <_fflush_r>
   8271c:	2800      	cmp	r0, #0
   8271e:	d18e      	bne.n	8263e <__sfvwrite_r+0xfa>
   82720:	f8cd a004 	str.w	sl, [sp, #4]
   82724:	e7bb      	b.n	8269e <__sfvwrite_r+0x15a>
   82726:	6820      	ldr	r0, [r4, #0]
   82728:	4647      	mov	r7, r8
   8272a:	46c3      	mov	fp, r8
   8272c:	e75d      	b.n	825ea <__sfvwrite_r+0xa6>
   8272e:	4658      	mov	r0, fp
   82730:	210a      	movs	r1, #10
   82732:	4642      	mov	r2, r8
   82734:	f000 fbd4 	bl	82ee0 <memchr>
   82738:	2800      	cmp	r0, #0
   8273a:	d07f      	beq.n	8283c <__sfvwrite_r+0x2f8>
   8273c:	f100 0a01 	add.w	sl, r0, #1
   82740:	2701      	movs	r7, #1
   82742:	ebcb 0a0a 	rsb	sl, fp, sl
   82746:	9701      	str	r7, [sp, #4]
   82748:	e78c      	b.n	82664 <__sfvwrite_r+0x120>
   8274a:	6822      	ldr	r2, [r4, #0]
   8274c:	6921      	ldr	r1, [r4, #16]
   8274e:	6967      	ldr	r7, [r4, #20]
   82750:	ebc1 0c02 	rsb	ip, r1, r2
   82754:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   82758:	f10c 0201 	add.w	r2, ip, #1
   8275c:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   82760:	4442      	add	r2, r8
   82762:	107f      	asrs	r7, r7, #1
   82764:	4297      	cmp	r7, r2
   82766:	bf34      	ite	cc
   82768:	4617      	movcc	r7, r2
   8276a:	463a      	movcs	r2, r7
   8276c:	055b      	lsls	r3, r3, #21
   8276e:	d54f      	bpl.n	82810 <__sfvwrite_r+0x2cc>
   82770:	4611      	mov	r1, r2
   82772:	4648      	mov	r0, r9
   82774:	f8cd c000 	str.w	ip, [sp]
   82778:	f000 f916 	bl	829a8 <_malloc_r>
   8277c:	f8dd c000 	ldr.w	ip, [sp]
   82780:	4683      	mov	fp, r0
   82782:	2800      	cmp	r0, #0
   82784:	d062      	beq.n	8284c <__sfvwrite_r+0x308>
   82786:	4662      	mov	r2, ip
   82788:	6921      	ldr	r1, [r4, #16]
   8278a:	f8cd c000 	str.w	ip, [sp]
   8278e:	f000 fbf1 	bl	82f74 <memcpy>
   82792:	89a2      	ldrh	r2, [r4, #12]
   82794:	f8dd c000 	ldr.w	ip, [sp]
   82798:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   8279c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   827a0:	81a2      	strh	r2, [r4, #12]
   827a2:	eb0b 000c 	add.w	r0, fp, ip
   827a6:	ebcc 0207 	rsb	r2, ip, r7
   827aa:	f8c4 b010 	str.w	fp, [r4, #16]
   827ae:	6167      	str	r7, [r4, #20]
   827b0:	6020      	str	r0, [r4, #0]
   827b2:	60a2      	str	r2, [r4, #8]
   827b4:	4647      	mov	r7, r8
   827b6:	46c3      	mov	fp, r8
   827b8:	e717      	b.n	825ea <__sfvwrite_r+0xa6>
   827ba:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   827be:	4590      	cmp	r8, r2
   827c0:	bf38      	it	cc
   827c2:	4642      	movcc	r2, r8
   827c4:	fb92 f2f3 	sdiv	r2, r2, r3
   827c8:	fb02 f303 	mul.w	r3, r2, r3
   827cc:	6a67      	ldr	r7, [r4, #36]	; 0x24
   827ce:	4648      	mov	r0, r9
   827d0:	69e1      	ldr	r1, [r4, #28]
   827d2:	4652      	mov	r2, sl
   827d4:	47b8      	blx	r7
   827d6:	2800      	cmp	r0, #0
   827d8:	f77f af31 	ble.w	8263e <__sfvwrite_r+0xfa>
   827dc:	4602      	mov	r2, r0
   827de:	e710      	b.n	82602 <__sfvwrite_r+0xbe>
   827e0:	4662      	mov	r2, ip
   827e2:	4659      	mov	r1, fp
   827e4:	f8cd c000 	str.w	ip, [sp]
   827e8:	f000 fc3a 	bl	83060 <memmove>
   827ec:	f8dd c000 	ldr.w	ip, [sp]
   827f0:	6823      	ldr	r3, [r4, #0]
   827f2:	4648      	mov	r0, r9
   827f4:	4463      	add	r3, ip
   827f6:	6023      	str	r3, [r4, #0]
   827f8:	4621      	mov	r1, r4
   827fa:	f8cd c000 	str.w	ip, [sp]
   827fe:	f7ff fc75 	bl	820ec <_fflush_r>
   82802:	f8dd c000 	ldr.w	ip, [sp]
   82806:	2800      	cmp	r0, #0
   82808:	f47f af19 	bne.w	8263e <__sfvwrite_r+0xfa>
   8280c:	4667      	mov	r7, ip
   8280e:	e743      	b.n	82698 <__sfvwrite_r+0x154>
   82810:	4648      	mov	r0, r9
   82812:	f8cd c000 	str.w	ip, [sp]
   82816:	f000 fc8d 	bl	83134 <_realloc_r>
   8281a:	f8dd c000 	ldr.w	ip, [sp]
   8281e:	4683      	mov	fp, r0
   82820:	2800      	cmp	r0, #0
   82822:	d1be      	bne.n	827a2 <__sfvwrite_r+0x25e>
   82824:	4648      	mov	r0, r9
   82826:	6921      	ldr	r1, [r4, #16]
   82828:	f7ff fdc0 	bl	823ac <_free_r>
   8282c:	89a3      	ldrh	r3, [r4, #12]
   8282e:	220c      	movs	r2, #12
   82830:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   82834:	b29b      	uxth	r3, r3
   82836:	f8c9 2000 	str.w	r2, [r9]
   8283a:	e701      	b.n	82640 <__sfvwrite_r+0xfc>
   8283c:	2701      	movs	r7, #1
   8283e:	f108 0a01 	add.w	sl, r8, #1
   82842:	9701      	str	r7, [sp, #4]
   82844:	e70e      	b.n	82664 <__sfvwrite_r+0x120>
   82846:	f04f 30ff 	mov.w	r0, #4294967295
   8284a:	e6aa      	b.n	825a2 <__sfvwrite_r+0x5e>
   8284c:	230c      	movs	r3, #12
   8284e:	f8c9 3000 	str.w	r3, [r9]
   82852:	89a3      	ldrh	r3, [r4, #12]
   82854:	e6f4      	b.n	82640 <__sfvwrite_r+0xfc>
   82856:	bf00      	nop
   82858:	7ffffc00 	.word	0x7ffffc00

0008285c <_fwalk>:
   8285c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82860:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
   82864:	4688      	mov	r8, r1
   82866:	d019      	beq.n	8289c <_fwalk+0x40>
   82868:	2600      	movs	r6, #0
   8286a:	687d      	ldr	r5, [r7, #4]
   8286c:	68bc      	ldr	r4, [r7, #8]
   8286e:	3d01      	subs	r5, #1
   82870:	d40e      	bmi.n	82890 <_fwalk+0x34>
   82872:	89a3      	ldrh	r3, [r4, #12]
   82874:	3d01      	subs	r5, #1
   82876:	2b01      	cmp	r3, #1
   82878:	d906      	bls.n	82888 <_fwalk+0x2c>
   8287a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   8287e:	4620      	mov	r0, r4
   82880:	3301      	adds	r3, #1
   82882:	d001      	beq.n	82888 <_fwalk+0x2c>
   82884:	47c0      	blx	r8
   82886:	4306      	orrs	r6, r0
   82888:	1c6b      	adds	r3, r5, #1
   8288a:	f104 0468 	add.w	r4, r4, #104	; 0x68
   8288e:	d1f0      	bne.n	82872 <_fwalk+0x16>
   82890:	683f      	ldr	r7, [r7, #0]
   82892:	2f00      	cmp	r7, #0
   82894:	d1e9      	bne.n	8286a <_fwalk+0xe>
   82896:	4630      	mov	r0, r6
   82898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8289c:	463e      	mov	r6, r7
   8289e:	4630      	mov	r0, r6
   828a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000828a4 <__locale_charset>:
   828a4:	4800      	ldr	r0, [pc, #0]	; (828a8 <__locale_charset+0x4>)
   828a6:	4770      	bx	lr
   828a8:	2007056c 	.word	0x2007056c

000828ac <__locale_mb_cur_max>:
   828ac:	4b01      	ldr	r3, [pc, #4]	; (828b4 <__locale_mb_cur_max+0x8>)
   828ae:	6818      	ldr	r0, [r3, #0]
   828b0:	4770      	bx	lr
   828b2:	bf00      	nop
   828b4:	2007058c 	.word	0x2007058c

000828b8 <__smakebuf_r>:
   828b8:	b5f0      	push	{r4, r5, r6, r7, lr}
   828ba:	898b      	ldrh	r3, [r1, #12]
   828bc:	b091      	sub	sp, #68	; 0x44
   828be:	b29a      	uxth	r2, r3
   828c0:	0796      	lsls	r6, r2, #30
   828c2:	460c      	mov	r4, r1
   828c4:	4605      	mov	r5, r0
   828c6:	d437      	bmi.n	82938 <__smakebuf_r+0x80>
   828c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   828cc:	2900      	cmp	r1, #0
   828ce:	db17      	blt.n	82900 <__smakebuf_r+0x48>
   828d0:	aa01      	add	r2, sp, #4
   828d2:	f000 ffaf 	bl	83834 <_fstat_r>
   828d6:	2800      	cmp	r0, #0
   828d8:	db10      	blt.n	828fc <__smakebuf_r+0x44>
   828da:	9b02      	ldr	r3, [sp, #8]
   828dc:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
   828e0:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
   828e4:	424f      	negs	r7, r1
   828e6:	414f      	adcs	r7, r1
   828e8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   828ec:	d02c      	beq.n	82948 <__smakebuf_r+0x90>
   828ee:	89a3      	ldrh	r3, [r4, #12]
   828f0:	f44f 6680 	mov.w	r6, #1024	; 0x400
   828f4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   828f8:	81a3      	strh	r3, [r4, #12]
   828fa:	e00b      	b.n	82914 <__smakebuf_r+0x5c>
   828fc:	89a3      	ldrh	r3, [r4, #12]
   828fe:	b29a      	uxth	r2, r3
   82900:	f012 0f80 	tst.w	r2, #128	; 0x80
   82904:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   82908:	81a3      	strh	r3, [r4, #12]
   8290a:	bf14      	ite	ne
   8290c:	2640      	movne	r6, #64	; 0x40
   8290e:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   82912:	2700      	movs	r7, #0
   82914:	4628      	mov	r0, r5
   82916:	4631      	mov	r1, r6
   82918:	f000 f846 	bl	829a8 <_malloc_r>
   8291c:	89a3      	ldrh	r3, [r4, #12]
   8291e:	2800      	cmp	r0, #0
   82920:	d029      	beq.n	82976 <__smakebuf_r+0xbe>
   82922:	4a1b      	ldr	r2, [pc, #108]	; (82990 <__smakebuf_r+0xd8>)
   82924:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   82928:	63ea      	str	r2, [r5, #60]	; 0x3c
   8292a:	81a3      	strh	r3, [r4, #12]
   8292c:	6020      	str	r0, [r4, #0]
   8292e:	6120      	str	r0, [r4, #16]
   82930:	6166      	str	r6, [r4, #20]
   82932:	b9a7      	cbnz	r7, 8295e <__smakebuf_r+0xa6>
   82934:	b011      	add	sp, #68	; 0x44
   82936:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82938:	f101 0343 	add.w	r3, r1, #67	; 0x43
   8293c:	2201      	movs	r2, #1
   8293e:	600b      	str	r3, [r1, #0]
   82940:	610b      	str	r3, [r1, #16]
   82942:	614a      	str	r2, [r1, #20]
   82944:	b011      	add	sp, #68	; 0x44
   82946:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82948:	4a12      	ldr	r2, [pc, #72]	; (82994 <__smakebuf_r+0xdc>)
   8294a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   8294c:	4293      	cmp	r3, r2
   8294e:	d1ce      	bne.n	828ee <__smakebuf_r+0x36>
   82950:	89a3      	ldrh	r3, [r4, #12]
   82952:	f44f 6680 	mov.w	r6, #1024	; 0x400
   82956:	4333      	orrs	r3, r6
   82958:	81a3      	strh	r3, [r4, #12]
   8295a:	64e6      	str	r6, [r4, #76]	; 0x4c
   8295c:	e7da      	b.n	82914 <__smakebuf_r+0x5c>
   8295e:	4628      	mov	r0, r5
   82960:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   82964:	f000 ff7a 	bl	8385c <_isatty_r>
   82968:	2800      	cmp	r0, #0
   8296a:	d0e3      	beq.n	82934 <__smakebuf_r+0x7c>
   8296c:	89a3      	ldrh	r3, [r4, #12]
   8296e:	f043 0301 	orr.w	r3, r3, #1
   82972:	81a3      	strh	r3, [r4, #12]
   82974:	e7de      	b.n	82934 <__smakebuf_r+0x7c>
   82976:	059a      	lsls	r2, r3, #22
   82978:	d4dc      	bmi.n	82934 <__smakebuf_r+0x7c>
   8297a:	f104 0243 	add.w	r2, r4, #67	; 0x43
   8297e:	f043 0302 	orr.w	r3, r3, #2
   82982:	2101      	movs	r1, #1
   82984:	81a3      	strh	r3, [r4, #12]
   82986:	6022      	str	r2, [r4, #0]
   82988:	6122      	str	r2, [r4, #16]
   8298a:	6161      	str	r1, [r4, #20]
   8298c:	e7d2      	b.n	82934 <__smakebuf_r+0x7c>
   8298e:	bf00      	nop
   82990:	00082119 	.word	0x00082119
   82994:	00083575 	.word	0x00083575

00082998 <malloc>:
   82998:	4b02      	ldr	r3, [pc, #8]	; (829a4 <malloc+0xc>)
   8299a:	4601      	mov	r1, r0
   8299c:	6818      	ldr	r0, [r3, #0]
   8299e:	f000 b803 	b.w	829a8 <_malloc_r>
   829a2:	bf00      	nop
   829a4:	20070568 	.word	0x20070568

000829a8 <_malloc_r>:
   829a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   829ac:	f101 050b 	add.w	r5, r1, #11
   829b0:	2d16      	cmp	r5, #22
   829b2:	b083      	sub	sp, #12
   829b4:	4606      	mov	r6, r0
   829b6:	d927      	bls.n	82a08 <_malloc_r+0x60>
   829b8:	f035 0507 	bics.w	r5, r5, #7
   829bc:	d427      	bmi.n	82a0e <_malloc_r+0x66>
   829be:	42a9      	cmp	r1, r5
   829c0:	d825      	bhi.n	82a0e <_malloc_r+0x66>
   829c2:	4630      	mov	r0, r6
   829c4:	f000 fbb2 	bl	8312c <__malloc_lock>
   829c8:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   829cc:	d226      	bcs.n	82a1c <_malloc_r+0x74>
   829ce:	4fc1      	ldr	r7, [pc, #772]	; (82cd4 <_malloc_r+0x32c>)
   829d0:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   829d4:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   829d8:	68dc      	ldr	r4, [r3, #12]
   829da:	429c      	cmp	r4, r3
   829dc:	f000 81d2 	beq.w	82d84 <_malloc_r+0x3dc>
   829e0:	6863      	ldr	r3, [r4, #4]
   829e2:	68e2      	ldr	r2, [r4, #12]
   829e4:	f023 0303 	bic.w	r3, r3, #3
   829e8:	4423      	add	r3, r4
   829ea:	6858      	ldr	r0, [r3, #4]
   829ec:	68a1      	ldr	r1, [r4, #8]
   829ee:	f040 0501 	orr.w	r5, r0, #1
   829f2:	60ca      	str	r2, [r1, #12]
   829f4:	4630      	mov	r0, r6
   829f6:	6091      	str	r1, [r2, #8]
   829f8:	605d      	str	r5, [r3, #4]
   829fa:	f000 fb99 	bl	83130 <__malloc_unlock>
   829fe:	3408      	adds	r4, #8
   82a00:	4620      	mov	r0, r4
   82a02:	b003      	add	sp, #12
   82a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a08:	2510      	movs	r5, #16
   82a0a:	42a9      	cmp	r1, r5
   82a0c:	d9d9      	bls.n	829c2 <_malloc_r+0x1a>
   82a0e:	2400      	movs	r4, #0
   82a10:	230c      	movs	r3, #12
   82a12:	4620      	mov	r0, r4
   82a14:	6033      	str	r3, [r6, #0]
   82a16:	b003      	add	sp, #12
   82a18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a1c:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   82a20:	f000 8089 	beq.w	82b36 <_malloc_r+0x18e>
   82a24:	f1bc 0f04 	cmp.w	ip, #4
   82a28:	f200 8160 	bhi.w	82cec <_malloc_r+0x344>
   82a2c:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   82a30:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   82a34:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82a38:	4fa6      	ldr	r7, [pc, #664]	; (82cd4 <_malloc_r+0x32c>)
   82a3a:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   82a3e:	68cc      	ldr	r4, [r1, #12]
   82a40:	42a1      	cmp	r1, r4
   82a42:	d105      	bne.n	82a50 <_malloc_r+0xa8>
   82a44:	e00c      	b.n	82a60 <_malloc_r+0xb8>
   82a46:	2b00      	cmp	r3, #0
   82a48:	da79      	bge.n	82b3e <_malloc_r+0x196>
   82a4a:	68e4      	ldr	r4, [r4, #12]
   82a4c:	42a1      	cmp	r1, r4
   82a4e:	d007      	beq.n	82a60 <_malloc_r+0xb8>
   82a50:	6862      	ldr	r2, [r4, #4]
   82a52:	f022 0203 	bic.w	r2, r2, #3
   82a56:	1b53      	subs	r3, r2, r5
   82a58:	2b0f      	cmp	r3, #15
   82a5a:	ddf4      	ble.n	82a46 <_malloc_r+0x9e>
   82a5c:	f10c 3cff 	add.w	ip, ip, #4294967295
   82a60:	f10c 0c01 	add.w	ip, ip, #1
   82a64:	4b9b      	ldr	r3, [pc, #620]	; (82cd4 <_malloc_r+0x32c>)
   82a66:	693c      	ldr	r4, [r7, #16]
   82a68:	f103 0e08 	add.w	lr, r3, #8
   82a6c:	4574      	cmp	r4, lr
   82a6e:	f000 817e 	beq.w	82d6e <_malloc_r+0x3c6>
   82a72:	6861      	ldr	r1, [r4, #4]
   82a74:	f021 0103 	bic.w	r1, r1, #3
   82a78:	1b4a      	subs	r2, r1, r5
   82a7a:	2a0f      	cmp	r2, #15
   82a7c:	f300 8164 	bgt.w	82d48 <_malloc_r+0x3a0>
   82a80:	2a00      	cmp	r2, #0
   82a82:	f8c3 e014 	str.w	lr, [r3, #20]
   82a86:	f8c3 e010 	str.w	lr, [r3, #16]
   82a8a:	da69      	bge.n	82b60 <_malloc_r+0x1b8>
   82a8c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   82a90:	f080 813a 	bcs.w	82d08 <_malloc_r+0x360>
   82a94:	08c9      	lsrs	r1, r1, #3
   82a96:	108a      	asrs	r2, r1, #2
   82a98:	f04f 0801 	mov.w	r8, #1
   82a9c:	fa08 f802 	lsl.w	r8, r8, r2
   82aa0:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   82aa4:	685a      	ldr	r2, [r3, #4]
   82aa6:	6888      	ldr	r0, [r1, #8]
   82aa8:	ea48 0202 	orr.w	r2, r8, r2
   82aac:	60a0      	str	r0, [r4, #8]
   82aae:	60e1      	str	r1, [r4, #12]
   82ab0:	605a      	str	r2, [r3, #4]
   82ab2:	608c      	str	r4, [r1, #8]
   82ab4:	60c4      	str	r4, [r0, #12]
   82ab6:	ea4f 03ac 	mov.w	r3, ip, asr #2
   82aba:	2001      	movs	r0, #1
   82abc:	4098      	lsls	r0, r3
   82abe:	4290      	cmp	r0, r2
   82ac0:	d85b      	bhi.n	82b7a <_malloc_r+0x1d2>
   82ac2:	4202      	tst	r2, r0
   82ac4:	d106      	bne.n	82ad4 <_malloc_r+0x12c>
   82ac6:	f02c 0c03 	bic.w	ip, ip, #3
   82aca:	0040      	lsls	r0, r0, #1
   82acc:	4202      	tst	r2, r0
   82ace:	f10c 0c04 	add.w	ip, ip, #4
   82ad2:	d0fa      	beq.n	82aca <_malloc_r+0x122>
   82ad4:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   82ad8:	4644      	mov	r4, r8
   82ada:	46e1      	mov	r9, ip
   82adc:	68e3      	ldr	r3, [r4, #12]
   82ade:	429c      	cmp	r4, r3
   82ae0:	d107      	bne.n	82af2 <_malloc_r+0x14a>
   82ae2:	e146      	b.n	82d72 <_malloc_r+0x3ca>
   82ae4:	2a00      	cmp	r2, #0
   82ae6:	f280 8157 	bge.w	82d98 <_malloc_r+0x3f0>
   82aea:	68db      	ldr	r3, [r3, #12]
   82aec:	429c      	cmp	r4, r3
   82aee:	f000 8140 	beq.w	82d72 <_malloc_r+0x3ca>
   82af2:	6859      	ldr	r1, [r3, #4]
   82af4:	f021 0103 	bic.w	r1, r1, #3
   82af8:	1b4a      	subs	r2, r1, r5
   82afa:	2a0f      	cmp	r2, #15
   82afc:	ddf2      	ble.n	82ae4 <_malloc_r+0x13c>
   82afe:	461c      	mov	r4, r3
   82b00:	f854 cf08 	ldr.w	ip, [r4, #8]!
   82b04:	68d9      	ldr	r1, [r3, #12]
   82b06:	f045 0901 	orr.w	r9, r5, #1
   82b0a:	f042 0801 	orr.w	r8, r2, #1
   82b0e:	441d      	add	r5, r3
   82b10:	f8c3 9004 	str.w	r9, [r3, #4]
   82b14:	4630      	mov	r0, r6
   82b16:	f8cc 100c 	str.w	r1, [ip, #12]
   82b1a:	f8c1 c008 	str.w	ip, [r1, #8]
   82b1e:	617d      	str	r5, [r7, #20]
   82b20:	613d      	str	r5, [r7, #16]
   82b22:	f8c5 e00c 	str.w	lr, [r5, #12]
   82b26:	f8c5 e008 	str.w	lr, [r5, #8]
   82b2a:	f8c5 8004 	str.w	r8, [r5, #4]
   82b2e:	50aa      	str	r2, [r5, r2]
   82b30:	f000 fafe 	bl	83130 <__malloc_unlock>
   82b34:	e764      	b.n	82a00 <_malloc_r+0x58>
   82b36:	217e      	movs	r1, #126	; 0x7e
   82b38:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   82b3c:	e77c      	b.n	82a38 <_malloc_r+0x90>
   82b3e:	4422      	add	r2, r4
   82b40:	6850      	ldr	r0, [r2, #4]
   82b42:	68e3      	ldr	r3, [r4, #12]
   82b44:	68a1      	ldr	r1, [r4, #8]
   82b46:	f040 0501 	orr.w	r5, r0, #1
   82b4a:	60cb      	str	r3, [r1, #12]
   82b4c:	4630      	mov	r0, r6
   82b4e:	6099      	str	r1, [r3, #8]
   82b50:	6055      	str	r5, [r2, #4]
   82b52:	f000 faed 	bl	83130 <__malloc_unlock>
   82b56:	3408      	adds	r4, #8
   82b58:	4620      	mov	r0, r4
   82b5a:	b003      	add	sp, #12
   82b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82b60:	4421      	add	r1, r4
   82b62:	684b      	ldr	r3, [r1, #4]
   82b64:	4630      	mov	r0, r6
   82b66:	f043 0301 	orr.w	r3, r3, #1
   82b6a:	604b      	str	r3, [r1, #4]
   82b6c:	f000 fae0 	bl	83130 <__malloc_unlock>
   82b70:	3408      	adds	r4, #8
   82b72:	4620      	mov	r0, r4
   82b74:	b003      	add	sp, #12
   82b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82b7a:	68bc      	ldr	r4, [r7, #8]
   82b7c:	6863      	ldr	r3, [r4, #4]
   82b7e:	f023 0903 	bic.w	r9, r3, #3
   82b82:	45a9      	cmp	r9, r5
   82b84:	d304      	bcc.n	82b90 <_malloc_r+0x1e8>
   82b86:	ebc5 0309 	rsb	r3, r5, r9
   82b8a:	2b0f      	cmp	r3, #15
   82b8c:	f300 8091 	bgt.w	82cb2 <_malloc_r+0x30a>
   82b90:	4b51      	ldr	r3, [pc, #324]	; (82cd8 <_malloc_r+0x330>)
   82b92:	4a52      	ldr	r2, [pc, #328]	; (82cdc <_malloc_r+0x334>)
   82b94:	6819      	ldr	r1, [r3, #0]
   82b96:	6813      	ldr	r3, [r2, #0]
   82b98:	eb05 0a01 	add.w	sl, r5, r1
   82b9c:	3301      	adds	r3, #1
   82b9e:	eb04 0b09 	add.w	fp, r4, r9
   82ba2:	f000 8161 	beq.w	82e68 <_malloc_r+0x4c0>
   82ba6:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   82baa:	f10a 0a0f 	add.w	sl, sl, #15
   82bae:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   82bb2:	f02a 0a0f 	bic.w	sl, sl, #15
   82bb6:	4630      	mov	r0, r6
   82bb8:	4651      	mov	r1, sl
   82bba:	9201      	str	r2, [sp, #4]
   82bbc:	f000 fc9a 	bl	834f4 <_sbrk_r>
   82bc0:	f1b0 3fff 	cmp.w	r0, #4294967295
   82bc4:	4680      	mov	r8, r0
   82bc6:	9a01      	ldr	r2, [sp, #4]
   82bc8:	f000 8101 	beq.w	82dce <_malloc_r+0x426>
   82bcc:	4583      	cmp	fp, r0
   82bce:	f200 80fb 	bhi.w	82dc8 <_malloc_r+0x420>
   82bd2:	f8df c114 	ldr.w	ip, [pc, #276]	; 82ce8 <_malloc_r+0x340>
   82bd6:	45c3      	cmp	fp, r8
   82bd8:	f8dc 3000 	ldr.w	r3, [ip]
   82bdc:	4453      	add	r3, sl
   82bde:	f8cc 3000 	str.w	r3, [ip]
   82be2:	f000 814a 	beq.w	82e7a <_malloc_r+0x4d2>
   82be6:	6812      	ldr	r2, [r2, #0]
   82be8:	493c      	ldr	r1, [pc, #240]	; (82cdc <_malloc_r+0x334>)
   82bea:	3201      	adds	r2, #1
   82bec:	bf1b      	ittet	ne
   82bee:	ebcb 0b08 	rsbne	fp, fp, r8
   82bf2:	445b      	addne	r3, fp
   82bf4:	f8c1 8000 	streq.w	r8, [r1]
   82bf8:	f8cc 3000 	strne.w	r3, [ip]
   82bfc:	f018 0307 	ands.w	r3, r8, #7
   82c00:	f000 8114 	beq.w	82e2c <_malloc_r+0x484>
   82c04:	f1c3 0208 	rsb	r2, r3, #8
   82c08:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   82c0c:	4490      	add	r8, r2
   82c0e:	3308      	adds	r3, #8
   82c10:	44c2      	add	sl, r8
   82c12:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   82c16:	ebca 0a03 	rsb	sl, sl, r3
   82c1a:	4651      	mov	r1, sl
   82c1c:	4630      	mov	r0, r6
   82c1e:	f8cd c004 	str.w	ip, [sp, #4]
   82c22:	f000 fc67 	bl	834f4 <_sbrk_r>
   82c26:	1c43      	adds	r3, r0, #1
   82c28:	f8dd c004 	ldr.w	ip, [sp, #4]
   82c2c:	f000 8135 	beq.w	82e9a <_malloc_r+0x4f2>
   82c30:	ebc8 0200 	rsb	r2, r8, r0
   82c34:	4452      	add	r2, sl
   82c36:	f042 0201 	orr.w	r2, r2, #1
   82c3a:	f8dc 3000 	ldr.w	r3, [ip]
   82c3e:	42bc      	cmp	r4, r7
   82c40:	4453      	add	r3, sl
   82c42:	f8c7 8008 	str.w	r8, [r7, #8]
   82c46:	f8cc 3000 	str.w	r3, [ip]
   82c4a:	f8c8 2004 	str.w	r2, [r8, #4]
   82c4e:	f8df a098 	ldr.w	sl, [pc, #152]	; 82ce8 <_malloc_r+0x340>
   82c52:	d015      	beq.n	82c80 <_malloc_r+0x2d8>
   82c54:	f1b9 0f0f 	cmp.w	r9, #15
   82c58:	f240 80eb 	bls.w	82e32 <_malloc_r+0x48a>
   82c5c:	6861      	ldr	r1, [r4, #4]
   82c5e:	f1a9 020c 	sub.w	r2, r9, #12
   82c62:	f022 0207 	bic.w	r2, r2, #7
   82c66:	f001 0101 	and.w	r1, r1, #1
   82c6a:	ea42 0e01 	orr.w	lr, r2, r1
   82c6e:	2005      	movs	r0, #5
   82c70:	18a1      	adds	r1, r4, r2
   82c72:	2a0f      	cmp	r2, #15
   82c74:	f8c4 e004 	str.w	lr, [r4, #4]
   82c78:	6048      	str	r0, [r1, #4]
   82c7a:	6088      	str	r0, [r1, #8]
   82c7c:	f200 8111 	bhi.w	82ea2 <_malloc_r+0x4fa>
   82c80:	4a17      	ldr	r2, [pc, #92]	; (82ce0 <_malloc_r+0x338>)
   82c82:	68bc      	ldr	r4, [r7, #8]
   82c84:	6811      	ldr	r1, [r2, #0]
   82c86:	428b      	cmp	r3, r1
   82c88:	bf88      	it	hi
   82c8a:	6013      	strhi	r3, [r2, #0]
   82c8c:	4a15      	ldr	r2, [pc, #84]	; (82ce4 <_malloc_r+0x33c>)
   82c8e:	6811      	ldr	r1, [r2, #0]
   82c90:	428b      	cmp	r3, r1
   82c92:	bf88      	it	hi
   82c94:	6013      	strhi	r3, [r2, #0]
   82c96:	6862      	ldr	r2, [r4, #4]
   82c98:	f022 0203 	bic.w	r2, r2, #3
   82c9c:	4295      	cmp	r5, r2
   82c9e:	ebc5 0302 	rsb	r3, r5, r2
   82ca2:	d801      	bhi.n	82ca8 <_malloc_r+0x300>
   82ca4:	2b0f      	cmp	r3, #15
   82ca6:	dc04      	bgt.n	82cb2 <_malloc_r+0x30a>
   82ca8:	4630      	mov	r0, r6
   82caa:	f000 fa41 	bl	83130 <__malloc_unlock>
   82cae:	2400      	movs	r4, #0
   82cb0:	e6a6      	b.n	82a00 <_malloc_r+0x58>
   82cb2:	f045 0201 	orr.w	r2, r5, #1
   82cb6:	f043 0301 	orr.w	r3, r3, #1
   82cba:	4425      	add	r5, r4
   82cbc:	6062      	str	r2, [r4, #4]
   82cbe:	4630      	mov	r0, r6
   82cc0:	60bd      	str	r5, [r7, #8]
   82cc2:	606b      	str	r3, [r5, #4]
   82cc4:	f000 fa34 	bl	83130 <__malloc_unlock>
   82cc8:	3408      	adds	r4, #8
   82cca:	4620      	mov	r0, r4
   82ccc:	b003      	add	sp, #12
   82cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82cd2:	bf00      	nop
   82cd4:	20070590 	.word	0x20070590
   82cd8:	20070ae4 	.word	0x20070ae4
   82cdc:	2007099c 	.word	0x2007099c
   82ce0:	20070ae0 	.word	0x20070ae0
   82ce4:	20070adc 	.word	0x20070adc
   82ce8:	20070ae8 	.word	0x20070ae8
   82cec:	f1bc 0f14 	cmp.w	ip, #20
   82cf0:	d961      	bls.n	82db6 <_malloc_r+0x40e>
   82cf2:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   82cf6:	f200 808f 	bhi.w	82e18 <_malloc_r+0x470>
   82cfa:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   82cfe:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   82d02:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82d06:	e697      	b.n	82a38 <_malloc_r+0x90>
   82d08:	0a4b      	lsrs	r3, r1, #9
   82d0a:	2b04      	cmp	r3, #4
   82d0c:	d958      	bls.n	82dc0 <_malloc_r+0x418>
   82d0e:	2b14      	cmp	r3, #20
   82d10:	f200 80ad 	bhi.w	82e6e <_malloc_r+0x4c6>
   82d14:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   82d18:	0050      	lsls	r0, r2, #1
   82d1a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   82d1e:	6883      	ldr	r3, [r0, #8]
   82d20:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 82edc <_malloc_r+0x534>
   82d24:	4283      	cmp	r3, r0
   82d26:	f000 808a 	beq.w	82e3e <_malloc_r+0x496>
   82d2a:	685a      	ldr	r2, [r3, #4]
   82d2c:	f022 0203 	bic.w	r2, r2, #3
   82d30:	4291      	cmp	r1, r2
   82d32:	d202      	bcs.n	82d3a <_malloc_r+0x392>
   82d34:	689b      	ldr	r3, [r3, #8]
   82d36:	4298      	cmp	r0, r3
   82d38:	d1f7      	bne.n	82d2a <_malloc_r+0x382>
   82d3a:	68d9      	ldr	r1, [r3, #12]
   82d3c:	687a      	ldr	r2, [r7, #4]
   82d3e:	60e1      	str	r1, [r4, #12]
   82d40:	60a3      	str	r3, [r4, #8]
   82d42:	608c      	str	r4, [r1, #8]
   82d44:	60dc      	str	r4, [r3, #12]
   82d46:	e6b6      	b.n	82ab6 <_malloc_r+0x10e>
   82d48:	f045 0701 	orr.w	r7, r5, #1
   82d4c:	f042 0101 	orr.w	r1, r2, #1
   82d50:	4425      	add	r5, r4
   82d52:	6067      	str	r7, [r4, #4]
   82d54:	4630      	mov	r0, r6
   82d56:	615d      	str	r5, [r3, #20]
   82d58:	611d      	str	r5, [r3, #16]
   82d5a:	f8c5 e00c 	str.w	lr, [r5, #12]
   82d5e:	f8c5 e008 	str.w	lr, [r5, #8]
   82d62:	6069      	str	r1, [r5, #4]
   82d64:	50aa      	str	r2, [r5, r2]
   82d66:	3408      	adds	r4, #8
   82d68:	f000 f9e2 	bl	83130 <__malloc_unlock>
   82d6c:	e648      	b.n	82a00 <_malloc_r+0x58>
   82d6e:	685a      	ldr	r2, [r3, #4]
   82d70:	e6a1      	b.n	82ab6 <_malloc_r+0x10e>
   82d72:	f109 0901 	add.w	r9, r9, #1
   82d76:	f019 0f03 	tst.w	r9, #3
   82d7a:	f104 0408 	add.w	r4, r4, #8
   82d7e:	f47f aead 	bne.w	82adc <_malloc_r+0x134>
   82d82:	e02d      	b.n	82de0 <_malloc_r+0x438>
   82d84:	f104 0308 	add.w	r3, r4, #8
   82d88:	6964      	ldr	r4, [r4, #20]
   82d8a:	42a3      	cmp	r3, r4
   82d8c:	bf08      	it	eq
   82d8e:	f10c 0c02 	addeq.w	ip, ip, #2
   82d92:	f43f ae67 	beq.w	82a64 <_malloc_r+0xbc>
   82d96:	e623      	b.n	829e0 <_malloc_r+0x38>
   82d98:	4419      	add	r1, r3
   82d9a:	6848      	ldr	r0, [r1, #4]
   82d9c:	461c      	mov	r4, r3
   82d9e:	f854 2f08 	ldr.w	r2, [r4, #8]!
   82da2:	68db      	ldr	r3, [r3, #12]
   82da4:	f040 0501 	orr.w	r5, r0, #1
   82da8:	604d      	str	r5, [r1, #4]
   82daa:	4630      	mov	r0, r6
   82dac:	60d3      	str	r3, [r2, #12]
   82dae:	609a      	str	r2, [r3, #8]
   82db0:	f000 f9be 	bl	83130 <__malloc_unlock>
   82db4:	e624      	b.n	82a00 <_malloc_r+0x58>
   82db6:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   82dba:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82dbe:	e63b      	b.n	82a38 <_malloc_r+0x90>
   82dc0:	098a      	lsrs	r2, r1, #6
   82dc2:	3238      	adds	r2, #56	; 0x38
   82dc4:	0050      	lsls	r0, r2, #1
   82dc6:	e7a8      	b.n	82d1a <_malloc_r+0x372>
   82dc8:	42bc      	cmp	r4, r7
   82dca:	f43f af02 	beq.w	82bd2 <_malloc_r+0x22a>
   82dce:	68bc      	ldr	r4, [r7, #8]
   82dd0:	6862      	ldr	r2, [r4, #4]
   82dd2:	f022 0203 	bic.w	r2, r2, #3
   82dd6:	e761      	b.n	82c9c <_malloc_r+0x2f4>
   82dd8:	f8d8 8000 	ldr.w	r8, [r8]
   82ddc:	4598      	cmp	r8, r3
   82dde:	d17a      	bne.n	82ed6 <_malloc_r+0x52e>
   82de0:	f01c 0f03 	tst.w	ip, #3
   82de4:	f1a8 0308 	sub.w	r3, r8, #8
   82de8:	f10c 3cff 	add.w	ip, ip, #4294967295
   82dec:	d1f4      	bne.n	82dd8 <_malloc_r+0x430>
   82dee:	687b      	ldr	r3, [r7, #4]
   82df0:	ea23 0300 	bic.w	r3, r3, r0
   82df4:	607b      	str	r3, [r7, #4]
   82df6:	0040      	lsls	r0, r0, #1
   82df8:	4298      	cmp	r0, r3
   82dfa:	f63f aebe 	bhi.w	82b7a <_malloc_r+0x1d2>
   82dfe:	2800      	cmp	r0, #0
   82e00:	f43f aebb 	beq.w	82b7a <_malloc_r+0x1d2>
   82e04:	4203      	tst	r3, r0
   82e06:	46cc      	mov	ip, r9
   82e08:	f47f ae64 	bne.w	82ad4 <_malloc_r+0x12c>
   82e0c:	0040      	lsls	r0, r0, #1
   82e0e:	4203      	tst	r3, r0
   82e10:	f10c 0c04 	add.w	ip, ip, #4
   82e14:	d0fa      	beq.n	82e0c <_malloc_r+0x464>
   82e16:	e65d      	b.n	82ad4 <_malloc_r+0x12c>
   82e18:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   82e1c:	d819      	bhi.n	82e52 <_malloc_r+0x4aa>
   82e1e:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   82e22:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   82e26:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82e2a:	e605      	b.n	82a38 <_malloc_r+0x90>
   82e2c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   82e30:	e6ee      	b.n	82c10 <_malloc_r+0x268>
   82e32:	2301      	movs	r3, #1
   82e34:	f8c8 3004 	str.w	r3, [r8, #4]
   82e38:	4644      	mov	r4, r8
   82e3a:	2200      	movs	r2, #0
   82e3c:	e72e      	b.n	82c9c <_malloc_r+0x2f4>
   82e3e:	1092      	asrs	r2, r2, #2
   82e40:	2001      	movs	r0, #1
   82e42:	4090      	lsls	r0, r2
   82e44:	f8d8 2004 	ldr.w	r2, [r8, #4]
   82e48:	4619      	mov	r1, r3
   82e4a:	4302      	orrs	r2, r0
   82e4c:	f8c8 2004 	str.w	r2, [r8, #4]
   82e50:	e775      	b.n	82d3e <_malloc_r+0x396>
   82e52:	f240 5354 	movw	r3, #1364	; 0x554
   82e56:	459c      	cmp	ip, r3
   82e58:	d81b      	bhi.n	82e92 <_malloc_r+0x4ea>
   82e5a:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   82e5e:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   82e62:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82e66:	e5e7      	b.n	82a38 <_malloc_r+0x90>
   82e68:	f10a 0a10 	add.w	sl, sl, #16
   82e6c:	e6a3      	b.n	82bb6 <_malloc_r+0x20e>
   82e6e:	2b54      	cmp	r3, #84	; 0x54
   82e70:	d81f      	bhi.n	82eb2 <_malloc_r+0x50a>
   82e72:	0b0a      	lsrs	r2, r1, #12
   82e74:	326e      	adds	r2, #110	; 0x6e
   82e76:	0050      	lsls	r0, r2, #1
   82e78:	e74f      	b.n	82d1a <_malloc_r+0x372>
   82e7a:	f3cb 010b 	ubfx	r1, fp, #0, #12
   82e7e:	2900      	cmp	r1, #0
   82e80:	f47f aeb1 	bne.w	82be6 <_malloc_r+0x23e>
   82e84:	eb0a 0109 	add.w	r1, sl, r9
   82e88:	68ba      	ldr	r2, [r7, #8]
   82e8a:	f041 0101 	orr.w	r1, r1, #1
   82e8e:	6051      	str	r1, [r2, #4]
   82e90:	e6f6      	b.n	82c80 <_malloc_r+0x2d8>
   82e92:	21fc      	movs	r1, #252	; 0xfc
   82e94:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   82e98:	e5ce      	b.n	82a38 <_malloc_r+0x90>
   82e9a:	2201      	movs	r2, #1
   82e9c:	f04f 0a00 	mov.w	sl, #0
   82ea0:	e6cb      	b.n	82c3a <_malloc_r+0x292>
   82ea2:	f104 0108 	add.w	r1, r4, #8
   82ea6:	4630      	mov	r0, r6
   82ea8:	f7ff fa80 	bl	823ac <_free_r>
   82eac:	f8da 3000 	ldr.w	r3, [sl]
   82eb0:	e6e6      	b.n	82c80 <_malloc_r+0x2d8>
   82eb2:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   82eb6:	d803      	bhi.n	82ec0 <_malloc_r+0x518>
   82eb8:	0bca      	lsrs	r2, r1, #15
   82eba:	3277      	adds	r2, #119	; 0x77
   82ebc:	0050      	lsls	r0, r2, #1
   82ebe:	e72c      	b.n	82d1a <_malloc_r+0x372>
   82ec0:	f240 5254 	movw	r2, #1364	; 0x554
   82ec4:	4293      	cmp	r3, r2
   82ec6:	d803      	bhi.n	82ed0 <_malloc_r+0x528>
   82ec8:	0c8a      	lsrs	r2, r1, #18
   82eca:	327c      	adds	r2, #124	; 0x7c
   82ecc:	0050      	lsls	r0, r2, #1
   82ece:	e724      	b.n	82d1a <_malloc_r+0x372>
   82ed0:	20fc      	movs	r0, #252	; 0xfc
   82ed2:	227e      	movs	r2, #126	; 0x7e
   82ed4:	e721      	b.n	82d1a <_malloc_r+0x372>
   82ed6:	687b      	ldr	r3, [r7, #4]
   82ed8:	e78d      	b.n	82df6 <_malloc_r+0x44e>
   82eda:	bf00      	nop
   82edc:	20070590 	.word	0x20070590

00082ee0 <memchr>:
   82ee0:	0783      	lsls	r3, r0, #30
   82ee2:	b470      	push	{r4, r5, r6}
   82ee4:	b2c9      	uxtb	r1, r1
   82ee6:	d040      	beq.n	82f6a <memchr+0x8a>
   82ee8:	1e54      	subs	r4, r2, #1
   82eea:	b32a      	cbz	r2, 82f38 <memchr+0x58>
   82eec:	7803      	ldrb	r3, [r0, #0]
   82eee:	428b      	cmp	r3, r1
   82ef0:	d023      	beq.n	82f3a <memchr+0x5a>
   82ef2:	1c43      	adds	r3, r0, #1
   82ef4:	e004      	b.n	82f00 <memchr+0x20>
   82ef6:	b1fc      	cbz	r4, 82f38 <memchr+0x58>
   82ef8:	7805      	ldrb	r5, [r0, #0]
   82efa:	4614      	mov	r4, r2
   82efc:	428d      	cmp	r5, r1
   82efe:	d01c      	beq.n	82f3a <memchr+0x5a>
   82f00:	f013 0f03 	tst.w	r3, #3
   82f04:	4618      	mov	r0, r3
   82f06:	f104 32ff 	add.w	r2, r4, #4294967295
   82f0a:	f103 0301 	add.w	r3, r3, #1
   82f0e:	d1f2      	bne.n	82ef6 <memchr+0x16>
   82f10:	2c03      	cmp	r4, #3
   82f12:	d814      	bhi.n	82f3e <memchr+0x5e>
   82f14:	1e65      	subs	r5, r4, #1
   82f16:	b354      	cbz	r4, 82f6e <memchr+0x8e>
   82f18:	7803      	ldrb	r3, [r0, #0]
   82f1a:	428b      	cmp	r3, r1
   82f1c:	d00d      	beq.n	82f3a <memchr+0x5a>
   82f1e:	1c42      	adds	r2, r0, #1
   82f20:	2300      	movs	r3, #0
   82f22:	e002      	b.n	82f2a <memchr+0x4a>
   82f24:	7804      	ldrb	r4, [r0, #0]
   82f26:	428c      	cmp	r4, r1
   82f28:	d007      	beq.n	82f3a <memchr+0x5a>
   82f2a:	42ab      	cmp	r3, r5
   82f2c:	4610      	mov	r0, r2
   82f2e:	f103 0301 	add.w	r3, r3, #1
   82f32:	f102 0201 	add.w	r2, r2, #1
   82f36:	d1f5      	bne.n	82f24 <memchr+0x44>
   82f38:	2000      	movs	r0, #0
   82f3a:	bc70      	pop	{r4, r5, r6}
   82f3c:	4770      	bx	lr
   82f3e:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   82f42:	4603      	mov	r3, r0
   82f44:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   82f48:	681a      	ldr	r2, [r3, #0]
   82f4a:	4618      	mov	r0, r3
   82f4c:	4072      	eors	r2, r6
   82f4e:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   82f52:	ea25 0202 	bic.w	r2, r5, r2
   82f56:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   82f5a:	f103 0304 	add.w	r3, r3, #4
   82f5e:	d1d9      	bne.n	82f14 <memchr+0x34>
   82f60:	3c04      	subs	r4, #4
   82f62:	2c03      	cmp	r4, #3
   82f64:	4618      	mov	r0, r3
   82f66:	d8ef      	bhi.n	82f48 <memchr+0x68>
   82f68:	e7d4      	b.n	82f14 <memchr+0x34>
   82f6a:	4614      	mov	r4, r2
   82f6c:	e7d0      	b.n	82f10 <memchr+0x30>
   82f6e:	4620      	mov	r0, r4
   82f70:	e7e3      	b.n	82f3a <memchr+0x5a>
   82f72:	bf00      	nop

00082f74 <memcpy>:
   82f74:	4684      	mov	ip, r0
   82f76:	ea41 0300 	orr.w	r3, r1, r0
   82f7a:	f013 0303 	ands.w	r3, r3, #3
   82f7e:	d149      	bne.n	83014 <memcpy+0xa0>
   82f80:	3a40      	subs	r2, #64	; 0x40
   82f82:	d323      	bcc.n	82fcc <memcpy+0x58>
   82f84:	680b      	ldr	r3, [r1, #0]
   82f86:	6003      	str	r3, [r0, #0]
   82f88:	684b      	ldr	r3, [r1, #4]
   82f8a:	6043      	str	r3, [r0, #4]
   82f8c:	688b      	ldr	r3, [r1, #8]
   82f8e:	6083      	str	r3, [r0, #8]
   82f90:	68cb      	ldr	r3, [r1, #12]
   82f92:	60c3      	str	r3, [r0, #12]
   82f94:	690b      	ldr	r3, [r1, #16]
   82f96:	6103      	str	r3, [r0, #16]
   82f98:	694b      	ldr	r3, [r1, #20]
   82f9a:	6143      	str	r3, [r0, #20]
   82f9c:	698b      	ldr	r3, [r1, #24]
   82f9e:	6183      	str	r3, [r0, #24]
   82fa0:	69cb      	ldr	r3, [r1, #28]
   82fa2:	61c3      	str	r3, [r0, #28]
   82fa4:	6a0b      	ldr	r3, [r1, #32]
   82fa6:	6203      	str	r3, [r0, #32]
   82fa8:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   82faa:	6243      	str	r3, [r0, #36]	; 0x24
   82fac:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   82fae:	6283      	str	r3, [r0, #40]	; 0x28
   82fb0:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   82fb2:	62c3      	str	r3, [r0, #44]	; 0x2c
   82fb4:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82fb6:	6303      	str	r3, [r0, #48]	; 0x30
   82fb8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   82fba:	6343      	str	r3, [r0, #52]	; 0x34
   82fbc:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   82fbe:	6383      	str	r3, [r0, #56]	; 0x38
   82fc0:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   82fc2:	63c3      	str	r3, [r0, #60]	; 0x3c
   82fc4:	3040      	adds	r0, #64	; 0x40
   82fc6:	3140      	adds	r1, #64	; 0x40
   82fc8:	3a40      	subs	r2, #64	; 0x40
   82fca:	d2db      	bcs.n	82f84 <memcpy+0x10>
   82fcc:	3230      	adds	r2, #48	; 0x30
   82fce:	d30b      	bcc.n	82fe8 <memcpy+0x74>
   82fd0:	680b      	ldr	r3, [r1, #0]
   82fd2:	6003      	str	r3, [r0, #0]
   82fd4:	684b      	ldr	r3, [r1, #4]
   82fd6:	6043      	str	r3, [r0, #4]
   82fd8:	688b      	ldr	r3, [r1, #8]
   82fda:	6083      	str	r3, [r0, #8]
   82fdc:	68cb      	ldr	r3, [r1, #12]
   82fde:	60c3      	str	r3, [r0, #12]
   82fe0:	3010      	adds	r0, #16
   82fe2:	3110      	adds	r1, #16
   82fe4:	3a10      	subs	r2, #16
   82fe6:	d2f3      	bcs.n	82fd0 <memcpy+0x5c>
   82fe8:	320c      	adds	r2, #12
   82fea:	d305      	bcc.n	82ff8 <memcpy+0x84>
   82fec:	f851 3b04 	ldr.w	r3, [r1], #4
   82ff0:	f840 3b04 	str.w	r3, [r0], #4
   82ff4:	3a04      	subs	r2, #4
   82ff6:	d2f9      	bcs.n	82fec <memcpy+0x78>
   82ff8:	3204      	adds	r2, #4
   82ffa:	d008      	beq.n	8300e <memcpy+0x9a>
   82ffc:	07d2      	lsls	r2, r2, #31
   82ffe:	bf1c      	itt	ne
   83000:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83004:	f800 3b01 	strbne.w	r3, [r0], #1
   83008:	d301      	bcc.n	8300e <memcpy+0x9a>
   8300a:	880b      	ldrh	r3, [r1, #0]
   8300c:	8003      	strh	r3, [r0, #0]
   8300e:	4660      	mov	r0, ip
   83010:	4770      	bx	lr
   83012:	bf00      	nop
   83014:	2a08      	cmp	r2, #8
   83016:	d313      	bcc.n	83040 <memcpy+0xcc>
   83018:	078b      	lsls	r3, r1, #30
   8301a:	d0b1      	beq.n	82f80 <memcpy+0xc>
   8301c:	f010 0303 	ands.w	r3, r0, #3
   83020:	d0ae      	beq.n	82f80 <memcpy+0xc>
   83022:	f1c3 0304 	rsb	r3, r3, #4
   83026:	1ad2      	subs	r2, r2, r3
   83028:	07db      	lsls	r3, r3, #31
   8302a:	bf1c      	itt	ne
   8302c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83030:	f800 3b01 	strbne.w	r3, [r0], #1
   83034:	d3a4      	bcc.n	82f80 <memcpy+0xc>
   83036:	f831 3b02 	ldrh.w	r3, [r1], #2
   8303a:	f820 3b02 	strh.w	r3, [r0], #2
   8303e:	e79f      	b.n	82f80 <memcpy+0xc>
   83040:	3a04      	subs	r2, #4
   83042:	d3d9      	bcc.n	82ff8 <memcpy+0x84>
   83044:	3a01      	subs	r2, #1
   83046:	f811 3b01 	ldrb.w	r3, [r1], #1
   8304a:	f800 3b01 	strb.w	r3, [r0], #1
   8304e:	d2f9      	bcs.n	83044 <memcpy+0xd0>
   83050:	780b      	ldrb	r3, [r1, #0]
   83052:	7003      	strb	r3, [r0, #0]
   83054:	784b      	ldrb	r3, [r1, #1]
   83056:	7043      	strb	r3, [r0, #1]
   83058:	788b      	ldrb	r3, [r1, #2]
   8305a:	7083      	strb	r3, [r0, #2]
   8305c:	4660      	mov	r0, ip
   8305e:	4770      	bx	lr

00083060 <memmove>:
   83060:	4288      	cmp	r0, r1
   83062:	b4f0      	push	{r4, r5, r6, r7}
   83064:	d910      	bls.n	83088 <memmove+0x28>
   83066:	188c      	adds	r4, r1, r2
   83068:	42a0      	cmp	r0, r4
   8306a:	d20d      	bcs.n	83088 <memmove+0x28>
   8306c:	1885      	adds	r5, r0, r2
   8306e:	1e53      	subs	r3, r2, #1
   83070:	b142      	cbz	r2, 83084 <memmove+0x24>
   83072:	4621      	mov	r1, r4
   83074:	462a      	mov	r2, r5
   83076:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   8307a:	3b01      	subs	r3, #1
   8307c:	f802 4d01 	strb.w	r4, [r2, #-1]!
   83080:	1c5c      	adds	r4, r3, #1
   83082:	d1f8      	bne.n	83076 <memmove+0x16>
   83084:	bcf0      	pop	{r4, r5, r6, r7}
   83086:	4770      	bx	lr
   83088:	2a0f      	cmp	r2, #15
   8308a:	d944      	bls.n	83116 <memmove+0xb6>
   8308c:	ea40 0301 	orr.w	r3, r0, r1
   83090:	079b      	lsls	r3, r3, #30
   83092:	d144      	bne.n	8311e <memmove+0xbe>
   83094:	f1a2 0710 	sub.w	r7, r2, #16
   83098:	093f      	lsrs	r7, r7, #4
   8309a:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   8309e:	3610      	adds	r6, #16
   830a0:	460c      	mov	r4, r1
   830a2:	4603      	mov	r3, r0
   830a4:	6825      	ldr	r5, [r4, #0]
   830a6:	3310      	adds	r3, #16
   830a8:	f843 5c10 	str.w	r5, [r3, #-16]
   830ac:	6865      	ldr	r5, [r4, #4]
   830ae:	3410      	adds	r4, #16
   830b0:	f843 5c0c 	str.w	r5, [r3, #-12]
   830b4:	f854 5c08 	ldr.w	r5, [r4, #-8]
   830b8:	f843 5c08 	str.w	r5, [r3, #-8]
   830bc:	f854 5c04 	ldr.w	r5, [r4, #-4]
   830c0:	f843 5c04 	str.w	r5, [r3, #-4]
   830c4:	42b3      	cmp	r3, r6
   830c6:	d1ed      	bne.n	830a4 <memmove+0x44>
   830c8:	1c7b      	adds	r3, r7, #1
   830ca:	f002 0c0f 	and.w	ip, r2, #15
   830ce:	011b      	lsls	r3, r3, #4
   830d0:	f1bc 0f03 	cmp.w	ip, #3
   830d4:	4419      	add	r1, r3
   830d6:	4403      	add	r3, r0
   830d8:	d923      	bls.n	83122 <memmove+0xc2>
   830da:	460e      	mov	r6, r1
   830dc:	461d      	mov	r5, r3
   830de:	4664      	mov	r4, ip
   830e0:	f856 7b04 	ldr.w	r7, [r6], #4
   830e4:	3c04      	subs	r4, #4
   830e6:	2c03      	cmp	r4, #3
   830e8:	f845 7b04 	str.w	r7, [r5], #4
   830ec:	d8f8      	bhi.n	830e0 <memmove+0x80>
   830ee:	f1ac 0404 	sub.w	r4, ip, #4
   830f2:	f024 0403 	bic.w	r4, r4, #3
   830f6:	3404      	adds	r4, #4
   830f8:	f002 0203 	and.w	r2, r2, #3
   830fc:	4423      	add	r3, r4
   830fe:	4421      	add	r1, r4
   83100:	2a00      	cmp	r2, #0
   83102:	d0bf      	beq.n	83084 <memmove+0x24>
   83104:	441a      	add	r2, r3
   83106:	f811 4b01 	ldrb.w	r4, [r1], #1
   8310a:	f803 4b01 	strb.w	r4, [r3], #1
   8310e:	4293      	cmp	r3, r2
   83110:	d1f9      	bne.n	83106 <memmove+0xa6>
   83112:	bcf0      	pop	{r4, r5, r6, r7}
   83114:	4770      	bx	lr
   83116:	4603      	mov	r3, r0
   83118:	2a00      	cmp	r2, #0
   8311a:	d1f3      	bne.n	83104 <memmove+0xa4>
   8311c:	e7b2      	b.n	83084 <memmove+0x24>
   8311e:	4603      	mov	r3, r0
   83120:	e7f0      	b.n	83104 <memmove+0xa4>
   83122:	4662      	mov	r2, ip
   83124:	2a00      	cmp	r2, #0
   83126:	d1ed      	bne.n	83104 <memmove+0xa4>
   83128:	e7ac      	b.n	83084 <memmove+0x24>
   8312a:	bf00      	nop

0008312c <__malloc_lock>:
   8312c:	4770      	bx	lr
   8312e:	bf00      	nop

00083130 <__malloc_unlock>:
   83130:	4770      	bx	lr
   83132:	bf00      	nop

00083134 <_realloc_r>:
   83134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83138:	460c      	mov	r4, r1
   8313a:	b083      	sub	sp, #12
   8313c:	4690      	mov	r8, r2
   8313e:	4681      	mov	r9, r0
   83140:	2900      	cmp	r1, #0
   83142:	f000 80ba 	beq.w	832ba <_realloc_r+0x186>
   83146:	f7ff fff1 	bl	8312c <__malloc_lock>
   8314a:	f108 060b 	add.w	r6, r8, #11
   8314e:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83152:	2e16      	cmp	r6, #22
   83154:	f023 0503 	bic.w	r5, r3, #3
   83158:	f1a4 0708 	sub.w	r7, r4, #8
   8315c:	d84b      	bhi.n	831f6 <_realloc_r+0xc2>
   8315e:	2110      	movs	r1, #16
   83160:	460e      	mov	r6, r1
   83162:	45b0      	cmp	r8, r6
   83164:	d84c      	bhi.n	83200 <_realloc_r+0xcc>
   83166:	428d      	cmp	r5, r1
   83168:	da51      	bge.n	8320e <_realloc_r+0xda>
   8316a:	f8df b384 	ldr.w	fp, [pc, #900]	; 834f0 <_realloc_r+0x3bc>
   8316e:	1978      	adds	r0, r7, r5
   83170:	f8db e008 	ldr.w	lr, [fp, #8]
   83174:	4586      	cmp	lr, r0
   83176:	f000 80a6 	beq.w	832c6 <_realloc_r+0x192>
   8317a:	6842      	ldr	r2, [r0, #4]
   8317c:	f022 0c01 	bic.w	ip, r2, #1
   83180:	4484      	add	ip, r0
   83182:	f8dc c004 	ldr.w	ip, [ip, #4]
   83186:	f01c 0f01 	tst.w	ip, #1
   8318a:	d054      	beq.n	83236 <_realloc_r+0x102>
   8318c:	2200      	movs	r2, #0
   8318e:	4610      	mov	r0, r2
   83190:	07db      	lsls	r3, r3, #31
   83192:	d46f      	bmi.n	83274 <_realloc_r+0x140>
   83194:	f854 3c08 	ldr.w	r3, [r4, #-8]
   83198:	ebc3 0a07 	rsb	sl, r3, r7
   8319c:	f8da 3004 	ldr.w	r3, [sl, #4]
   831a0:	f023 0303 	bic.w	r3, r3, #3
   831a4:	442b      	add	r3, r5
   831a6:	2800      	cmp	r0, #0
   831a8:	d062      	beq.n	83270 <_realloc_r+0x13c>
   831aa:	4570      	cmp	r0, lr
   831ac:	f000 80e9 	beq.w	83382 <_realloc_r+0x24e>
   831b0:	eb02 0e03 	add.w	lr, r2, r3
   831b4:	458e      	cmp	lr, r1
   831b6:	db5b      	blt.n	83270 <_realloc_r+0x13c>
   831b8:	68c3      	ldr	r3, [r0, #12]
   831ba:	6882      	ldr	r2, [r0, #8]
   831bc:	46d0      	mov	r8, sl
   831be:	60d3      	str	r3, [r2, #12]
   831c0:	609a      	str	r2, [r3, #8]
   831c2:	f858 1f08 	ldr.w	r1, [r8, #8]!
   831c6:	f8da 300c 	ldr.w	r3, [sl, #12]
   831ca:	1f2a      	subs	r2, r5, #4
   831cc:	2a24      	cmp	r2, #36	; 0x24
   831ce:	60cb      	str	r3, [r1, #12]
   831d0:	6099      	str	r1, [r3, #8]
   831d2:	f200 8123 	bhi.w	8341c <_realloc_r+0x2e8>
   831d6:	2a13      	cmp	r2, #19
   831d8:	f240 80b0 	bls.w	8333c <_realloc_r+0x208>
   831dc:	6823      	ldr	r3, [r4, #0]
   831de:	2a1b      	cmp	r2, #27
   831e0:	f8ca 3008 	str.w	r3, [sl, #8]
   831e4:	6863      	ldr	r3, [r4, #4]
   831e6:	f8ca 300c 	str.w	r3, [sl, #12]
   831ea:	f200 812b 	bhi.w	83444 <_realloc_r+0x310>
   831ee:	3408      	adds	r4, #8
   831f0:	f10a 0310 	add.w	r3, sl, #16
   831f4:	e0a3      	b.n	8333e <_realloc_r+0x20a>
   831f6:	f026 0607 	bic.w	r6, r6, #7
   831fa:	2e00      	cmp	r6, #0
   831fc:	4631      	mov	r1, r6
   831fe:	dab0      	bge.n	83162 <_realloc_r+0x2e>
   83200:	230c      	movs	r3, #12
   83202:	2000      	movs	r0, #0
   83204:	f8c9 3000 	str.w	r3, [r9]
   83208:	b003      	add	sp, #12
   8320a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8320e:	46a0      	mov	r8, r4
   83210:	1baa      	subs	r2, r5, r6
   83212:	2a0f      	cmp	r2, #15
   83214:	f003 0301 	and.w	r3, r3, #1
   83218:	d81a      	bhi.n	83250 <_realloc_r+0x11c>
   8321a:	432b      	orrs	r3, r5
   8321c:	607b      	str	r3, [r7, #4]
   8321e:	443d      	add	r5, r7
   83220:	686b      	ldr	r3, [r5, #4]
   83222:	f043 0301 	orr.w	r3, r3, #1
   83226:	606b      	str	r3, [r5, #4]
   83228:	4648      	mov	r0, r9
   8322a:	f7ff ff81 	bl	83130 <__malloc_unlock>
   8322e:	4640      	mov	r0, r8
   83230:	b003      	add	sp, #12
   83232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83236:	f022 0203 	bic.w	r2, r2, #3
   8323a:	eb02 0c05 	add.w	ip, r2, r5
   8323e:	458c      	cmp	ip, r1
   83240:	dba6      	blt.n	83190 <_realloc_r+0x5c>
   83242:	68c2      	ldr	r2, [r0, #12]
   83244:	6881      	ldr	r1, [r0, #8]
   83246:	46a0      	mov	r8, r4
   83248:	60ca      	str	r2, [r1, #12]
   8324a:	4665      	mov	r5, ip
   8324c:	6091      	str	r1, [r2, #8]
   8324e:	e7df      	b.n	83210 <_realloc_r+0xdc>
   83250:	19b9      	adds	r1, r7, r6
   83252:	4333      	orrs	r3, r6
   83254:	f042 0001 	orr.w	r0, r2, #1
   83258:	607b      	str	r3, [r7, #4]
   8325a:	440a      	add	r2, r1
   8325c:	6048      	str	r0, [r1, #4]
   8325e:	6853      	ldr	r3, [r2, #4]
   83260:	3108      	adds	r1, #8
   83262:	f043 0301 	orr.w	r3, r3, #1
   83266:	6053      	str	r3, [r2, #4]
   83268:	4648      	mov	r0, r9
   8326a:	f7ff f89f 	bl	823ac <_free_r>
   8326e:	e7db      	b.n	83228 <_realloc_r+0xf4>
   83270:	428b      	cmp	r3, r1
   83272:	da33      	bge.n	832dc <_realloc_r+0x1a8>
   83274:	4641      	mov	r1, r8
   83276:	4648      	mov	r0, r9
   83278:	f7ff fb96 	bl	829a8 <_malloc_r>
   8327c:	4680      	mov	r8, r0
   8327e:	2800      	cmp	r0, #0
   83280:	d0d2      	beq.n	83228 <_realloc_r+0xf4>
   83282:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83286:	f1a0 0108 	sub.w	r1, r0, #8
   8328a:	f023 0201 	bic.w	r2, r3, #1
   8328e:	443a      	add	r2, r7
   83290:	4291      	cmp	r1, r2
   83292:	f000 80bc 	beq.w	8340e <_realloc_r+0x2da>
   83296:	1f2a      	subs	r2, r5, #4
   83298:	2a24      	cmp	r2, #36	; 0x24
   8329a:	d86e      	bhi.n	8337a <_realloc_r+0x246>
   8329c:	2a13      	cmp	r2, #19
   8329e:	d842      	bhi.n	83326 <_realloc_r+0x1f2>
   832a0:	4603      	mov	r3, r0
   832a2:	4622      	mov	r2, r4
   832a4:	6811      	ldr	r1, [r2, #0]
   832a6:	6019      	str	r1, [r3, #0]
   832a8:	6851      	ldr	r1, [r2, #4]
   832aa:	6059      	str	r1, [r3, #4]
   832ac:	6892      	ldr	r2, [r2, #8]
   832ae:	609a      	str	r2, [r3, #8]
   832b0:	4621      	mov	r1, r4
   832b2:	4648      	mov	r0, r9
   832b4:	f7ff f87a 	bl	823ac <_free_r>
   832b8:	e7b6      	b.n	83228 <_realloc_r+0xf4>
   832ba:	4611      	mov	r1, r2
   832bc:	b003      	add	sp, #12
   832be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   832c2:	f7ff bb71 	b.w	829a8 <_malloc_r>
   832c6:	f8de 2004 	ldr.w	r2, [lr, #4]
   832ca:	f106 0c10 	add.w	ip, r6, #16
   832ce:	f022 0203 	bic.w	r2, r2, #3
   832d2:	1950      	adds	r0, r2, r5
   832d4:	4560      	cmp	r0, ip
   832d6:	da3d      	bge.n	83354 <_realloc_r+0x220>
   832d8:	4670      	mov	r0, lr
   832da:	e759      	b.n	83190 <_realloc_r+0x5c>
   832dc:	46d0      	mov	r8, sl
   832de:	f858 0f08 	ldr.w	r0, [r8, #8]!
   832e2:	f8da 100c 	ldr.w	r1, [sl, #12]
   832e6:	1f2a      	subs	r2, r5, #4
   832e8:	2a24      	cmp	r2, #36	; 0x24
   832ea:	60c1      	str	r1, [r0, #12]
   832ec:	6088      	str	r0, [r1, #8]
   832ee:	f200 80a0 	bhi.w	83432 <_realloc_r+0x2fe>
   832f2:	2a13      	cmp	r2, #19
   832f4:	f240 809b 	bls.w	8342e <_realloc_r+0x2fa>
   832f8:	6821      	ldr	r1, [r4, #0]
   832fa:	2a1b      	cmp	r2, #27
   832fc:	f8ca 1008 	str.w	r1, [sl, #8]
   83300:	6861      	ldr	r1, [r4, #4]
   83302:	f8ca 100c 	str.w	r1, [sl, #12]
   83306:	f200 80b2 	bhi.w	8346e <_realloc_r+0x33a>
   8330a:	3408      	adds	r4, #8
   8330c:	f10a 0210 	add.w	r2, sl, #16
   83310:	6821      	ldr	r1, [r4, #0]
   83312:	461d      	mov	r5, r3
   83314:	6011      	str	r1, [r2, #0]
   83316:	6861      	ldr	r1, [r4, #4]
   83318:	4657      	mov	r7, sl
   8331a:	6051      	str	r1, [r2, #4]
   8331c:	68a3      	ldr	r3, [r4, #8]
   8331e:	6093      	str	r3, [r2, #8]
   83320:	f8da 3004 	ldr.w	r3, [sl, #4]
   83324:	e774      	b.n	83210 <_realloc_r+0xdc>
   83326:	6823      	ldr	r3, [r4, #0]
   83328:	2a1b      	cmp	r2, #27
   8332a:	6003      	str	r3, [r0, #0]
   8332c:	6863      	ldr	r3, [r4, #4]
   8332e:	6043      	str	r3, [r0, #4]
   83330:	d862      	bhi.n	833f8 <_realloc_r+0x2c4>
   83332:	f100 0308 	add.w	r3, r0, #8
   83336:	f104 0208 	add.w	r2, r4, #8
   8333a:	e7b3      	b.n	832a4 <_realloc_r+0x170>
   8333c:	4643      	mov	r3, r8
   8333e:	6822      	ldr	r2, [r4, #0]
   83340:	4675      	mov	r5, lr
   83342:	601a      	str	r2, [r3, #0]
   83344:	6862      	ldr	r2, [r4, #4]
   83346:	4657      	mov	r7, sl
   83348:	605a      	str	r2, [r3, #4]
   8334a:	68a2      	ldr	r2, [r4, #8]
   8334c:	609a      	str	r2, [r3, #8]
   8334e:	f8da 3004 	ldr.w	r3, [sl, #4]
   83352:	e75d      	b.n	83210 <_realloc_r+0xdc>
   83354:	1b83      	subs	r3, r0, r6
   83356:	4437      	add	r7, r6
   83358:	f043 0301 	orr.w	r3, r3, #1
   8335c:	f8cb 7008 	str.w	r7, [fp, #8]
   83360:	607b      	str	r3, [r7, #4]
   83362:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83366:	4648      	mov	r0, r9
   83368:	f003 0301 	and.w	r3, r3, #1
   8336c:	431e      	orrs	r6, r3
   8336e:	f844 6c04 	str.w	r6, [r4, #-4]
   83372:	f7ff fedd 	bl	83130 <__malloc_unlock>
   83376:	4620      	mov	r0, r4
   83378:	e75a      	b.n	83230 <_realloc_r+0xfc>
   8337a:	4621      	mov	r1, r4
   8337c:	f7ff fe70 	bl	83060 <memmove>
   83380:	e796      	b.n	832b0 <_realloc_r+0x17c>
   83382:	eb02 0c03 	add.w	ip, r2, r3
   83386:	f106 0210 	add.w	r2, r6, #16
   8338a:	4594      	cmp	ip, r2
   8338c:	f6ff af70 	blt.w	83270 <_realloc_r+0x13c>
   83390:	4657      	mov	r7, sl
   83392:	f857 1f08 	ldr.w	r1, [r7, #8]!
   83396:	f8da 300c 	ldr.w	r3, [sl, #12]
   8339a:	1f2a      	subs	r2, r5, #4
   8339c:	2a24      	cmp	r2, #36	; 0x24
   8339e:	60cb      	str	r3, [r1, #12]
   833a0:	6099      	str	r1, [r3, #8]
   833a2:	f200 8086 	bhi.w	834b2 <_realloc_r+0x37e>
   833a6:	2a13      	cmp	r2, #19
   833a8:	d977      	bls.n	8349a <_realloc_r+0x366>
   833aa:	6823      	ldr	r3, [r4, #0]
   833ac:	2a1b      	cmp	r2, #27
   833ae:	f8ca 3008 	str.w	r3, [sl, #8]
   833b2:	6863      	ldr	r3, [r4, #4]
   833b4:	f8ca 300c 	str.w	r3, [sl, #12]
   833b8:	f200 8084 	bhi.w	834c4 <_realloc_r+0x390>
   833bc:	3408      	adds	r4, #8
   833be:	f10a 0310 	add.w	r3, sl, #16
   833c2:	6822      	ldr	r2, [r4, #0]
   833c4:	601a      	str	r2, [r3, #0]
   833c6:	6862      	ldr	r2, [r4, #4]
   833c8:	605a      	str	r2, [r3, #4]
   833ca:	68a2      	ldr	r2, [r4, #8]
   833cc:	609a      	str	r2, [r3, #8]
   833ce:	ebc6 020c 	rsb	r2, r6, ip
   833d2:	eb0a 0306 	add.w	r3, sl, r6
   833d6:	f042 0201 	orr.w	r2, r2, #1
   833da:	f8cb 3008 	str.w	r3, [fp, #8]
   833de:	605a      	str	r2, [r3, #4]
   833e0:	f8da 3004 	ldr.w	r3, [sl, #4]
   833e4:	4648      	mov	r0, r9
   833e6:	f003 0301 	and.w	r3, r3, #1
   833ea:	431e      	orrs	r6, r3
   833ec:	f8ca 6004 	str.w	r6, [sl, #4]
   833f0:	f7ff fe9e 	bl	83130 <__malloc_unlock>
   833f4:	4638      	mov	r0, r7
   833f6:	e71b      	b.n	83230 <_realloc_r+0xfc>
   833f8:	68a3      	ldr	r3, [r4, #8]
   833fa:	2a24      	cmp	r2, #36	; 0x24
   833fc:	6083      	str	r3, [r0, #8]
   833fe:	68e3      	ldr	r3, [r4, #12]
   83400:	60c3      	str	r3, [r0, #12]
   83402:	d02b      	beq.n	8345c <_realloc_r+0x328>
   83404:	f100 0310 	add.w	r3, r0, #16
   83408:	f104 0210 	add.w	r2, r4, #16
   8340c:	e74a      	b.n	832a4 <_realloc_r+0x170>
   8340e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   83412:	46a0      	mov	r8, r4
   83414:	f022 0203 	bic.w	r2, r2, #3
   83418:	4415      	add	r5, r2
   8341a:	e6f9      	b.n	83210 <_realloc_r+0xdc>
   8341c:	4621      	mov	r1, r4
   8341e:	4640      	mov	r0, r8
   83420:	4675      	mov	r5, lr
   83422:	4657      	mov	r7, sl
   83424:	f7ff fe1c 	bl	83060 <memmove>
   83428:	f8da 3004 	ldr.w	r3, [sl, #4]
   8342c:	e6f0      	b.n	83210 <_realloc_r+0xdc>
   8342e:	4642      	mov	r2, r8
   83430:	e76e      	b.n	83310 <_realloc_r+0x1dc>
   83432:	4621      	mov	r1, r4
   83434:	4640      	mov	r0, r8
   83436:	461d      	mov	r5, r3
   83438:	4657      	mov	r7, sl
   8343a:	f7ff fe11 	bl	83060 <memmove>
   8343e:	f8da 3004 	ldr.w	r3, [sl, #4]
   83442:	e6e5      	b.n	83210 <_realloc_r+0xdc>
   83444:	68a3      	ldr	r3, [r4, #8]
   83446:	2a24      	cmp	r2, #36	; 0x24
   83448:	f8ca 3010 	str.w	r3, [sl, #16]
   8344c:	68e3      	ldr	r3, [r4, #12]
   8344e:	f8ca 3014 	str.w	r3, [sl, #20]
   83452:	d018      	beq.n	83486 <_realloc_r+0x352>
   83454:	3410      	adds	r4, #16
   83456:	f10a 0318 	add.w	r3, sl, #24
   8345a:	e770      	b.n	8333e <_realloc_r+0x20a>
   8345c:	6922      	ldr	r2, [r4, #16]
   8345e:	f100 0318 	add.w	r3, r0, #24
   83462:	6102      	str	r2, [r0, #16]
   83464:	6961      	ldr	r1, [r4, #20]
   83466:	f104 0218 	add.w	r2, r4, #24
   8346a:	6141      	str	r1, [r0, #20]
   8346c:	e71a      	b.n	832a4 <_realloc_r+0x170>
   8346e:	68a1      	ldr	r1, [r4, #8]
   83470:	2a24      	cmp	r2, #36	; 0x24
   83472:	f8ca 1010 	str.w	r1, [sl, #16]
   83476:	68e1      	ldr	r1, [r4, #12]
   83478:	f8ca 1014 	str.w	r1, [sl, #20]
   8347c:	d00f      	beq.n	8349e <_realloc_r+0x36a>
   8347e:	3410      	adds	r4, #16
   83480:	f10a 0218 	add.w	r2, sl, #24
   83484:	e744      	b.n	83310 <_realloc_r+0x1dc>
   83486:	6922      	ldr	r2, [r4, #16]
   83488:	f10a 0320 	add.w	r3, sl, #32
   8348c:	f8ca 2018 	str.w	r2, [sl, #24]
   83490:	6962      	ldr	r2, [r4, #20]
   83492:	3418      	adds	r4, #24
   83494:	f8ca 201c 	str.w	r2, [sl, #28]
   83498:	e751      	b.n	8333e <_realloc_r+0x20a>
   8349a:	463b      	mov	r3, r7
   8349c:	e791      	b.n	833c2 <_realloc_r+0x28e>
   8349e:	6921      	ldr	r1, [r4, #16]
   834a0:	f10a 0220 	add.w	r2, sl, #32
   834a4:	f8ca 1018 	str.w	r1, [sl, #24]
   834a8:	6961      	ldr	r1, [r4, #20]
   834aa:	3418      	adds	r4, #24
   834ac:	f8ca 101c 	str.w	r1, [sl, #28]
   834b0:	e72e      	b.n	83310 <_realloc_r+0x1dc>
   834b2:	4621      	mov	r1, r4
   834b4:	4638      	mov	r0, r7
   834b6:	f8cd c004 	str.w	ip, [sp, #4]
   834ba:	f7ff fdd1 	bl	83060 <memmove>
   834be:	f8dd c004 	ldr.w	ip, [sp, #4]
   834c2:	e784      	b.n	833ce <_realloc_r+0x29a>
   834c4:	68a3      	ldr	r3, [r4, #8]
   834c6:	2a24      	cmp	r2, #36	; 0x24
   834c8:	f8ca 3010 	str.w	r3, [sl, #16]
   834cc:	68e3      	ldr	r3, [r4, #12]
   834ce:	f8ca 3014 	str.w	r3, [sl, #20]
   834d2:	d003      	beq.n	834dc <_realloc_r+0x3a8>
   834d4:	3410      	adds	r4, #16
   834d6:	f10a 0318 	add.w	r3, sl, #24
   834da:	e772      	b.n	833c2 <_realloc_r+0x28e>
   834dc:	6922      	ldr	r2, [r4, #16]
   834de:	f10a 0320 	add.w	r3, sl, #32
   834e2:	f8ca 2018 	str.w	r2, [sl, #24]
   834e6:	6962      	ldr	r2, [r4, #20]
   834e8:	3418      	adds	r4, #24
   834ea:	f8ca 201c 	str.w	r2, [sl, #28]
   834ee:	e768      	b.n	833c2 <_realloc_r+0x28e>
   834f0:	20070590 	.word	0x20070590

000834f4 <_sbrk_r>:
   834f4:	b538      	push	{r3, r4, r5, lr}
   834f6:	4c07      	ldr	r4, [pc, #28]	; (83514 <_sbrk_r+0x20>)
   834f8:	2300      	movs	r3, #0
   834fa:	4605      	mov	r5, r0
   834fc:	4608      	mov	r0, r1
   834fe:	6023      	str	r3, [r4, #0]
   83500:	f7fd fcd4 	bl	80eac <_sbrk>
   83504:	1c43      	adds	r3, r0, #1
   83506:	d000      	beq.n	8350a <_sbrk_r+0x16>
   83508:	bd38      	pop	{r3, r4, r5, pc}
   8350a:	6823      	ldr	r3, [r4, #0]
   8350c:	2b00      	cmp	r3, #0
   8350e:	d0fb      	beq.n	83508 <_sbrk_r+0x14>
   83510:	602b      	str	r3, [r5, #0]
   83512:	bd38      	pop	{r3, r4, r5, pc}
   83514:	20070b6c 	.word	0x20070b6c

00083518 <__sread>:
   83518:	b510      	push	{r4, lr}
   8351a:	460c      	mov	r4, r1
   8351c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83520:	f000 f9c2 	bl	838a8 <_read_r>
   83524:	2800      	cmp	r0, #0
   83526:	db03      	blt.n	83530 <__sread+0x18>
   83528:	6d23      	ldr	r3, [r4, #80]	; 0x50
   8352a:	4403      	add	r3, r0
   8352c:	6523      	str	r3, [r4, #80]	; 0x50
   8352e:	bd10      	pop	{r4, pc}
   83530:	89a3      	ldrh	r3, [r4, #12]
   83532:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   83536:	81a3      	strh	r3, [r4, #12]
   83538:	bd10      	pop	{r4, pc}
   8353a:	bf00      	nop

0008353c <__swrite>:
   8353c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83540:	460c      	mov	r4, r1
   83542:	8989      	ldrh	r1, [r1, #12]
   83544:	461d      	mov	r5, r3
   83546:	05cb      	lsls	r3, r1, #23
   83548:	4616      	mov	r6, r2
   8354a:	4607      	mov	r7, r0
   8354c:	d506      	bpl.n	8355c <__swrite+0x20>
   8354e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83552:	2200      	movs	r2, #0
   83554:	2302      	movs	r3, #2
   83556:	f000 f993 	bl	83880 <_lseek_r>
   8355a:	89a1      	ldrh	r1, [r4, #12]
   8355c:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   83560:	81a1      	strh	r1, [r4, #12]
   83562:	4638      	mov	r0, r7
   83564:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83568:	4632      	mov	r2, r6
   8356a:	462b      	mov	r3, r5
   8356c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83570:	f000 b89e 	b.w	836b0 <_write_r>

00083574 <__sseek>:
   83574:	b510      	push	{r4, lr}
   83576:	460c      	mov	r4, r1
   83578:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   8357c:	f000 f980 	bl	83880 <_lseek_r>
   83580:	89a3      	ldrh	r3, [r4, #12]
   83582:	1c42      	adds	r2, r0, #1
   83584:	bf0e      	itee	eq
   83586:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   8358a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   8358e:	6520      	strne	r0, [r4, #80]	; 0x50
   83590:	81a3      	strh	r3, [r4, #12]
   83592:	bd10      	pop	{r4, pc}

00083594 <__sclose>:
   83594:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83598:	f000 b8f2 	b.w	83780 <_close_r>

0008359c <__swbuf_r>:
   8359c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8359e:	460d      	mov	r5, r1
   835a0:	4614      	mov	r4, r2
   835a2:	4607      	mov	r7, r0
   835a4:	b110      	cbz	r0, 835ac <__swbuf_r+0x10>
   835a6:	6b83      	ldr	r3, [r0, #56]	; 0x38
   835a8:	2b00      	cmp	r3, #0
   835aa:	d048      	beq.n	8363e <__swbuf_r+0xa2>
   835ac:	89a2      	ldrh	r2, [r4, #12]
   835ae:	69a0      	ldr	r0, [r4, #24]
   835b0:	b293      	uxth	r3, r2
   835b2:	60a0      	str	r0, [r4, #8]
   835b4:	0718      	lsls	r0, r3, #28
   835b6:	d538      	bpl.n	8362a <__swbuf_r+0x8e>
   835b8:	6926      	ldr	r6, [r4, #16]
   835ba:	2e00      	cmp	r6, #0
   835bc:	d035      	beq.n	8362a <__swbuf_r+0x8e>
   835be:	0499      	lsls	r1, r3, #18
   835c0:	b2ed      	uxtb	r5, r5
   835c2:	d515      	bpl.n	835f0 <__swbuf_r+0x54>
   835c4:	6823      	ldr	r3, [r4, #0]
   835c6:	6962      	ldr	r2, [r4, #20]
   835c8:	1b9e      	subs	r6, r3, r6
   835ca:	4296      	cmp	r6, r2
   835cc:	da1c      	bge.n	83608 <__swbuf_r+0x6c>
   835ce:	3601      	adds	r6, #1
   835d0:	68a2      	ldr	r2, [r4, #8]
   835d2:	1c59      	adds	r1, r3, #1
   835d4:	3a01      	subs	r2, #1
   835d6:	60a2      	str	r2, [r4, #8]
   835d8:	6021      	str	r1, [r4, #0]
   835da:	701d      	strb	r5, [r3, #0]
   835dc:	6963      	ldr	r3, [r4, #20]
   835de:	42b3      	cmp	r3, r6
   835e0:	d01a      	beq.n	83618 <__swbuf_r+0x7c>
   835e2:	89a3      	ldrh	r3, [r4, #12]
   835e4:	07db      	lsls	r3, r3, #31
   835e6:	d501      	bpl.n	835ec <__swbuf_r+0x50>
   835e8:	2d0a      	cmp	r5, #10
   835ea:	d015      	beq.n	83618 <__swbuf_r+0x7c>
   835ec:	4628      	mov	r0, r5
   835ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   835f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
   835f2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   835f6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   835fa:	6663      	str	r3, [r4, #100]	; 0x64
   835fc:	6823      	ldr	r3, [r4, #0]
   835fe:	81a2      	strh	r2, [r4, #12]
   83600:	6962      	ldr	r2, [r4, #20]
   83602:	1b9e      	subs	r6, r3, r6
   83604:	4296      	cmp	r6, r2
   83606:	dbe2      	blt.n	835ce <__swbuf_r+0x32>
   83608:	4638      	mov	r0, r7
   8360a:	4621      	mov	r1, r4
   8360c:	f7fe fd6e 	bl	820ec <_fflush_r>
   83610:	b940      	cbnz	r0, 83624 <__swbuf_r+0x88>
   83612:	6823      	ldr	r3, [r4, #0]
   83614:	2601      	movs	r6, #1
   83616:	e7db      	b.n	835d0 <__swbuf_r+0x34>
   83618:	4638      	mov	r0, r7
   8361a:	4621      	mov	r1, r4
   8361c:	f7fe fd66 	bl	820ec <_fflush_r>
   83620:	2800      	cmp	r0, #0
   83622:	d0e3      	beq.n	835ec <__swbuf_r+0x50>
   83624:	f04f 30ff 	mov.w	r0, #4294967295
   83628:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8362a:	4638      	mov	r0, r7
   8362c:	4621      	mov	r1, r4
   8362e:	f7fe fc47 	bl	81ec0 <__swsetup_r>
   83632:	2800      	cmp	r0, #0
   83634:	d1f6      	bne.n	83624 <__swbuf_r+0x88>
   83636:	89a2      	ldrh	r2, [r4, #12]
   83638:	6926      	ldr	r6, [r4, #16]
   8363a:	b293      	uxth	r3, r2
   8363c:	e7bf      	b.n	835be <__swbuf_r+0x22>
   8363e:	f7fe fd71 	bl	82124 <__sinit>
   83642:	e7b3      	b.n	835ac <__swbuf_r+0x10>

00083644 <_wcrtomb_r>:
   83644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83648:	461e      	mov	r6, r3
   8364a:	b086      	sub	sp, #24
   8364c:	460c      	mov	r4, r1
   8364e:	4605      	mov	r5, r0
   83650:	4617      	mov	r7, r2
   83652:	4b0f      	ldr	r3, [pc, #60]	; (83690 <_wcrtomb_r+0x4c>)
   83654:	b191      	cbz	r1, 8367c <_wcrtomb_r+0x38>
   83656:	f8d3 8000 	ldr.w	r8, [r3]
   8365a:	f7ff f923 	bl	828a4 <__locale_charset>
   8365e:	9600      	str	r6, [sp, #0]
   83660:	4603      	mov	r3, r0
   83662:	4621      	mov	r1, r4
   83664:	463a      	mov	r2, r7
   83666:	4628      	mov	r0, r5
   83668:	47c0      	blx	r8
   8366a:	1c43      	adds	r3, r0, #1
   8366c:	d103      	bne.n	83676 <_wcrtomb_r+0x32>
   8366e:	2200      	movs	r2, #0
   83670:	238a      	movs	r3, #138	; 0x8a
   83672:	6032      	str	r2, [r6, #0]
   83674:	602b      	str	r3, [r5, #0]
   83676:	b006      	add	sp, #24
   83678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8367c:	681f      	ldr	r7, [r3, #0]
   8367e:	f7ff f911 	bl	828a4 <__locale_charset>
   83682:	9600      	str	r6, [sp, #0]
   83684:	4603      	mov	r3, r0
   83686:	4622      	mov	r2, r4
   83688:	4628      	mov	r0, r5
   8368a:	a903      	add	r1, sp, #12
   8368c:	47b8      	blx	r7
   8368e:	e7ec      	b.n	8366a <_wcrtomb_r+0x26>
   83690:	200709a0 	.word	0x200709a0

00083694 <__ascii_wctomb>:
   83694:	b121      	cbz	r1, 836a0 <__ascii_wctomb+0xc>
   83696:	2aff      	cmp	r2, #255	; 0xff
   83698:	d804      	bhi.n	836a4 <__ascii_wctomb+0x10>
   8369a:	700a      	strb	r2, [r1, #0]
   8369c:	2001      	movs	r0, #1
   8369e:	4770      	bx	lr
   836a0:	4608      	mov	r0, r1
   836a2:	4770      	bx	lr
   836a4:	238a      	movs	r3, #138	; 0x8a
   836a6:	6003      	str	r3, [r0, #0]
   836a8:	f04f 30ff 	mov.w	r0, #4294967295
   836ac:	4770      	bx	lr
   836ae:	bf00      	nop

000836b0 <_write_r>:
   836b0:	b570      	push	{r4, r5, r6, lr}
   836b2:	4c08      	ldr	r4, [pc, #32]	; (836d4 <_write_r+0x24>)
   836b4:	4606      	mov	r6, r0
   836b6:	2500      	movs	r5, #0
   836b8:	4608      	mov	r0, r1
   836ba:	4611      	mov	r1, r2
   836bc:	461a      	mov	r2, r3
   836be:	6025      	str	r5, [r4, #0]
   836c0:	f7fc fdf4 	bl	802ac <_write>
   836c4:	1c43      	adds	r3, r0, #1
   836c6:	d000      	beq.n	836ca <_write_r+0x1a>
   836c8:	bd70      	pop	{r4, r5, r6, pc}
   836ca:	6823      	ldr	r3, [r4, #0]
   836cc:	2b00      	cmp	r3, #0
   836ce:	d0fb      	beq.n	836c8 <_write_r+0x18>
   836d0:	6033      	str	r3, [r6, #0]
   836d2:	bd70      	pop	{r4, r5, r6, pc}
   836d4:	20070b6c 	.word	0x20070b6c

000836d8 <__register_exitproc>:
   836d8:	b5f0      	push	{r4, r5, r6, r7, lr}
   836da:	4c27      	ldr	r4, [pc, #156]	; (83778 <__register_exitproc+0xa0>)
   836dc:	b085      	sub	sp, #20
   836de:	6826      	ldr	r6, [r4, #0]
   836e0:	4607      	mov	r7, r0
   836e2:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   836e6:	2c00      	cmp	r4, #0
   836e8:	d040      	beq.n	8376c <__register_exitproc+0x94>
   836ea:	6865      	ldr	r5, [r4, #4]
   836ec:	2d1f      	cmp	r5, #31
   836ee:	dd1e      	ble.n	8372e <__register_exitproc+0x56>
   836f0:	4822      	ldr	r0, [pc, #136]	; (8377c <__register_exitproc+0xa4>)
   836f2:	b918      	cbnz	r0, 836fc <__register_exitproc+0x24>
   836f4:	f04f 30ff 	mov.w	r0, #4294967295
   836f8:	b005      	add	sp, #20
   836fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
   836fc:	f44f 70c8 	mov.w	r0, #400	; 0x190
   83700:	9103      	str	r1, [sp, #12]
   83702:	9202      	str	r2, [sp, #8]
   83704:	9301      	str	r3, [sp, #4]
   83706:	f7ff f947 	bl	82998 <malloc>
   8370a:	9903      	ldr	r1, [sp, #12]
   8370c:	4604      	mov	r4, r0
   8370e:	9a02      	ldr	r2, [sp, #8]
   83710:	9b01      	ldr	r3, [sp, #4]
   83712:	2800      	cmp	r0, #0
   83714:	d0ee      	beq.n	836f4 <__register_exitproc+0x1c>
   83716:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   8371a:	2000      	movs	r0, #0
   8371c:	6025      	str	r5, [r4, #0]
   8371e:	6060      	str	r0, [r4, #4]
   83720:	4605      	mov	r5, r0
   83722:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   83726:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   8372a:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   8372e:	b93f      	cbnz	r7, 83740 <__register_exitproc+0x68>
   83730:	1c6b      	adds	r3, r5, #1
   83732:	2000      	movs	r0, #0
   83734:	3502      	adds	r5, #2
   83736:	6063      	str	r3, [r4, #4]
   83738:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   8373c:	b005      	add	sp, #20
   8373e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83740:	2601      	movs	r6, #1
   83742:	40ae      	lsls	r6, r5
   83744:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   83748:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   8374c:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   83750:	2f02      	cmp	r7, #2
   83752:	ea42 0206 	orr.w	r2, r2, r6
   83756:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   8375a:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   8375e:	d1e7      	bne.n	83730 <__register_exitproc+0x58>
   83760:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   83764:	431e      	orrs	r6, r3
   83766:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   8376a:	e7e1      	b.n	83730 <__register_exitproc+0x58>
   8376c:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   83770:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   83774:	e7b9      	b.n	836ea <__register_exitproc+0x12>
   83776:	bf00      	nop
   83778:	00083ec8 	.word	0x00083ec8
   8377c:	00082999 	.word	0x00082999

00083780 <_close_r>:
   83780:	b538      	push	{r3, r4, r5, lr}
   83782:	4c07      	ldr	r4, [pc, #28]	; (837a0 <_close_r+0x20>)
   83784:	2300      	movs	r3, #0
   83786:	4605      	mov	r5, r0
   83788:	4608      	mov	r0, r1
   8378a:	6023      	str	r3, [r4, #0]
   8378c:	f7fd fba8 	bl	80ee0 <_close>
   83790:	1c43      	adds	r3, r0, #1
   83792:	d000      	beq.n	83796 <_close_r+0x16>
   83794:	bd38      	pop	{r3, r4, r5, pc}
   83796:	6823      	ldr	r3, [r4, #0]
   83798:	2b00      	cmp	r3, #0
   8379a:	d0fb      	beq.n	83794 <_close_r+0x14>
   8379c:	602b      	str	r3, [r5, #0]
   8379e:	bd38      	pop	{r3, r4, r5, pc}
   837a0:	20070b6c 	.word	0x20070b6c

000837a4 <_fclose_r>:
   837a4:	b570      	push	{r4, r5, r6, lr}
   837a6:	460c      	mov	r4, r1
   837a8:	4605      	mov	r5, r0
   837aa:	b131      	cbz	r1, 837ba <_fclose_r+0x16>
   837ac:	b110      	cbz	r0, 837b4 <_fclose_r+0x10>
   837ae:	6b83      	ldr	r3, [r0, #56]	; 0x38
   837b0:	2b00      	cmp	r3, #0
   837b2:	d02f      	beq.n	83814 <_fclose_r+0x70>
   837b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   837b8:	b90b      	cbnz	r3, 837be <_fclose_r+0x1a>
   837ba:	2000      	movs	r0, #0
   837bc:	bd70      	pop	{r4, r5, r6, pc}
   837be:	4628      	mov	r0, r5
   837c0:	4621      	mov	r1, r4
   837c2:	f7fe fc93 	bl	820ec <_fflush_r>
   837c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   837c8:	4606      	mov	r6, r0
   837ca:	b133      	cbz	r3, 837da <_fclose_r+0x36>
   837cc:	4628      	mov	r0, r5
   837ce:	69e1      	ldr	r1, [r4, #28]
   837d0:	4798      	blx	r3
   837d2:	2800      	cmp	r0, #0
   837d4:	bfb8      	it	lt
   837d6:	f04f 36ff 	movlt.w	r6, #4294967295
   837da:	89a3      	ldrh	r3, [r4, #12]
   837dc:	061b      	lsls	r3, r3, #24
   837de:	d41c      	bmi.n	8381a <_fclose_r+0x76>
   837e0:	6b21      	ldr	r1, [r4, #48]	; 0x30
   837e2:	b141      	cbz	r1, 837f6 <_fclose_r+0x52>
   837e4:	f104 0340 	add.w	r3, r4, #64	; 0x40
   837e8:	4299      	cmp	r1, r3
   837ea:	d002      	beq.n	837f2 <_fclose_r+0x4e>
   837ec:	4628      	mov	r0, r5
   837ee:	f7fe fddd 	bl	823ac <_free_r>
   837f2:	2300      	movs	r3, #0
   837f4:	6323      	str	r3, [r4, #48]	; 0x30
   837f6:	6c61      	ldr	r1, [r4, #68]	; 0x44
   837f8:	b121      	cbz	r1, 83804 <_fclose_r+0x60>
   837fa:	4628      	mov	r0, r5
   837fc:	f7fe fdd6 	bl	823ac <_free_r>
   83800:	2300      	movs	r3, #0
   83802:	6463      	str	r3, [r4, #68]	; 0x44
   83804:	f7fe fd08 	bl	82218 <__sfp_lock_acquire>
   83808:	2300      	movs	r3, #0
   8380a:	81a3      	strh	r3, [r4, #12]
   8380c:	f7fe fd06 	bl	8221c <__sfp_lock_release>
   83810:	4630      	mov	r0, r6
   83812:	bd70      	pop	{r4, r5, r6, pc}
   83814:	f7fe fc86 	bl	82124 <__sinit>
   83818:	e7cc      	b.n	837b4 <_fclose_r+0x10>
   8381a:	4628      	mov	r0, r5
   8381c:	6921      	ldr	r1, [r4, #16]
   8381e:	f7fe fdc5 	bl	823ac <_free_r>
   83822:	e7dd      	b.n	837e0 <_fclose_r+0x3c>

00083824 <fclose>:
   83824:	4b02      	ldr	r3, [pc, #8]	; (83830 <fclose+0xc>)
   83826:	4601      	mov	r1, r0
   83828:	6818      	ldr	r0, [r3, #0]
   8382a:	f7ff bfbb 	b.w	837a4 <_fclose_r>
   8382e:	bf00      	nop
   83830:	20070568 	.word	0x20070568

00083834 <_fstat_r>:
   83834:	b538      	push	{r3, r4, r5, lr}
   83836:	4c08      	ldr	r4, [pc, #32]	; (83858 <_fstat_r+0x24>)
   83838:	2300      	movs	r3, #0
   8383a:	4605      	mov	r5, r0
   8383c:	4608      	mov	r0, r1
   8383e:	4611      	mov	r1, r2
   83840:	6023      	str	r3, [r4, #0]
   83842:	f7fd fb51 	bl	80ee8 <_fstat>
   83846:	1c43      	adds	r3, r0, #1
   83848:	d000      	beq.n	8384c <_fstat_r+0x18>
   8384a:	bd38      	pop	{r3, r4, r5, pc}
   8384c:	6823      	ldr	r3, [r4, #0]
   8384e:	2b00      	cmp	r3, #0
   83850:	d0fb      	beq.n	8384a <_fstat_r+0x16>
   83852:	602b      	str	r3, [r5, #0]
   83854:	bd38      	pop	{r3, r4, r5, pc}
   83856:	bf00      	nop
   83858:	20070b6c 	.word	0x20070b6c

0008385c <_isatty_r>:
   8385c:	b538      	push	{r3, r4, r5, lr}
   8385e:	4c07      	ldr	r4, [pc, #28]	; (8387c <_isatty_r+0x20>)
   83860:	2300      	movs	r3, #0
   83862:	4605      	mov	r5, r0
   83864:	4608      	mov	r0, r1
   83866:	6023      	str	r3, [r4, #0]
   83868:	f7fd fb44 	bl	80ef4 <_isatty>
   8386c:	1c43      	adds	r3, r0, #1
   8386e:	d000      	beq.n	83872 <_isatty_r+0x16>
   83870:	bd38      	pop	{r3, r4, r5, pc}
   83872:	6823      	ldr	r3, [r4, #0]
   83874:	2b00      	cmp	r3, #0
   83876:	d0fb      	beq.n	83870 <_isatty_r+0x14>
   83878:	602b      	str	r3, [r5, #0]
   8387a:	bd38      	pop	{r3, r4, r5, pc}
   8387c:	20070b6c 	.word	0x20070b6c

00083880 <_lseek_r>:
   83880:	b570      	push	{r4, r5, r6, lr}
   83882:	4c08      	ldr	r4, [pc, #32]	; (838a4 <_lseek_r+0x24>)
   83884:	4606      	mov	r6, r0
   83886:	2500      	movs	r5, #0
   83888:	4608      	mov	r0, r1
   8388a:	4611      	mov	r1, r2
   8388c:	461a      	mov	r2, r3
   8388e:	6025      	str	r5, [r4, #0]
   83890:	f7fd fb32 	bl	80ef8 <_lseek>
   83894:	1c43      	adds	r3, r0, #1
   83896:	d000      	beq.n	8389a <_lseek_r+0x1a>
   83898:	bd70      	pop	{r4, r5, r6, pc}
   8389a:	6823      	ldr	r3, [r4, #0]
   8389c:	2b00      	cmp	r3, #0
   8389e:	d0fb      	beq.n	83898 <_lseek_r+0x18>
   838a0:	6033      	str	r3, [r6, #0]
   838a2:	bd70      	pop	{r4, r5, r6, pc}
   838a4:	20070b6c 	.word	0x20070b6c

000838a8 <_read_r>:
   838a8:	b570      	push	{r4, r5, r6, lr}
   838aa:	4c08      	ldr	r4, [pc, #32]	; (838cc <_read_r+0x24>)
   838ac:	4606      	mov	r6, r0
   838ae:	2500      	movs	r5, #0
   838b0:	4608      	mov	r0, r1
   838b2:	4611      	mov	r1, r2
   838b4:	461a      	mov	r2, r3
   838b6:	6025      	str	r5, [r4, #0]
   838b8:	f7fc fcd8 	bl	8026c <_read>
   838bc:	1c43      	adds	r3, r0, #1
   838be:	d000      	beq.n	838c2 <_read_r+0x1a>
   838c0:	bd70      	pop	{r4, r5, r6, pc}
   838c2:	6823      	ldr	r3, [r4, #0]
   838c4:	2b00      	cmp	r3, #0
   838c6:	d0fb      	beq.n	838c0 <_read_r+0x18>
   838c8:	6033      	str	r3, [r6, #0]
   838ca:	bd70      	pop	{r4, r5, r6, pc}
   838cc:	20070b6c 	.word	0x20070b6c

000838d0 <__aeabi_uldivmod>:
   838d0:	b94b      	cbnz	r3, 838e6 <__aeabi_uldivmod+0x16>
   838d2:	b942      	cbnz	r2, 838e6 <__aeabi_uldivmod+0x16>
   838d4:	2900      	cmp	r1, #0
   838d6:	bf08      	it	eq
   838d8:	2800      	cmpeq	r0, #0
   838da:	d002      	beq.n	838e2 <__aeabi_uldivmod+0x12>
   838dc:	f04f 31ff 	mov.w	r1, #4294967295
   838e0:	4608      	mov	r0, r1
   838e2:	f000 b83b 	b.w	8395c <__aeabi_idiv0>
   838e6:	b082      	sub	sp, #8
   838e8:	46ec      	mov	ip, sp
   838ea:	e92d 5000 	stmdb	sp!, {ip, lr}
   838ee:	f000 f81d 	bl	8392c <__gnu_uldivmod_helper>
   838f2:	f8dd e004 	ldr.w	lr, [sp, #4]
   838f6:	b002      	add	sp, #8
   838f8:	bc0c      	pop	{r2, r3}
   838fa:	4770      	bx	lr

000838fc <__gnu_ldivmod_helper>:
   838fc:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   83900:	9e08      	ldr	r6, [sp, #32]
   83902:	4614      	mov	r4, r2
   83904:	461d      	mov	r5, r3
   83906:	4680      	mov	r8, r0
   83908:	4689      	mov	r9, r1
   8390a:	f000 f829 	bl	83960 <__divdi3>
   8390e:	fb04 f301 	mul.w	r3, r4, r1
   83912:	fba4 ab00 	umull	sl, fp, r4, r0
   83916:	fb00 3205 	mla	r2, r0, r5, r3
   8391a:	4493      	add	fp, r2
   8391c:	ebb8 080a 	subs.w	r8, r8, sl
   83920:	eb69 090b 	sbc.w	r9, r9, fp
   83924:	e9c6 8900 	strd	r8, r9, [r6]
   83928:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0008392c <__gnu_uldivmod_helper>:
   8392c:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   83930:	9e08      	ldr	r6, [sp, #32]
   83932:	4614      	mov	r4, r2
   83934:	461d      	mov	r5, r3
   83936:	4680      	mov	r8, r0
   83938:	4689      	mov	r9, r1
   8393a:	f000 f961 	bl	83c00 <__udivdi3>
   8393e:	fb00 f505 	mul.w	r5, r0, r5
   83942:	fba0 ab04 	umull	sl, fp, r0, r4
   83946:	fb04 5401 	mla	r4, r4, r1, r5
   8394a:	44a3      	add	fp, r4
   8394c:	ebb8 080a 	subs.w	r8, r8, sl
   83950:	eb69 090b 	sbc.w	r9, r9, fp
   83954:	e9c6 8900 	strd	r8, r9, [r6]
   83958:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

0008395c <__aeabi_idiv0>:
   8395c:	4770      	bx	lr
   8395e:	bf00      	nop

00083960 <__divdi3>:
   83960:	2900      	cmp	r1, #0
   83962:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83966:	f2c0 80a1 	blt.w	83aac <__divdi3+0x14c>
   8396a:	2400      	movs	r4, #0
   8396c:	2b00      	cmp	r3, #0
   8396e:	f2c0 8098 	blt.w	83aa2 <__divdi3+0x142>
   83972:	4615      	mov	r5, r2
   83974:	4606      	mov	r6, r0
   83976:	460f      	mov	r7, r1
   83978:	2b00      	cmp	r3, #0
   8397a:	d13f      	bne.n	839fc <__divdi3+0x9c>
   8397c:	428a      	cmp	r2, r1
   8397e:	d958      	bls.n	83a32 <__divdi3+0xd2>
   83980:	fab2 f382 	clz	r3, r2
   83984:	b14b      	cbz	r3, 8399a <__divdi3+0x3a>
   83986:	f1c3 0220 	rsb	r2, r3, #32
   8398a:	fa01 f703 	lsl.w	r7, r1, r3
   8398e:	fa20 f202 	lsr.w	r2, r0, r2
   83992:	409d      	lsls	r5, r3
   83994:	fa00 f603 	lsl.w	r6, r0, r3
   83998:	4317      	orrs	r7, r2
   8399a:	0c29      	lsrs	r1, r5, #16
   8399c:	fbb7 f2f1 	udiv	r2, r7, r1
   839a0:	fb01 7712 	mls	r7, r1, r2, r7
   839a4:	b2a8      	uxth	r0, r5
   839a6:	fb00 f302 	mul.w	r3, r0, r2
   839aa:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   839ae:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   839b2:	42bb      	cmp	r3, r7
   839b4:	d909      	bls.n	839ca <__divdi3+0x6a>
   839b6:	197f      	adds	r7, r7, r5
   839b8:	f102 3cff 	add.w	ip, r2, #4294967295
   839bc:	f080 8105 	bcs.w	83bca <__divdi3+0x26a>
   839c0:	42bb      	cmp	r3, r7
   839c2:	f240 8102 	bls.w	83bca <__divdi3+0x26a>
   839c6:	3a02      	subs	r2, #2
   839c8:	442f      	add	r7, r5
   839ca:	1aff      	subs	r7, r7, r3
   839cc:	fbb7 f3f1 	udiv	r3, r7, r1
   839d0:	fb01 7113 	mls	r1, r1, r3, r7
   839d4:	fb00 f003 	mul.w	r0, r0, r3
   839d8:	b2b6      	uxth	r6, r6
   839da:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   839de:	4288      	cmp	r0, r1
   839e0:	d908      	bls.n	839f4 <__divdi3+0x94>
   839e2:	1949      	adds	r1, r1, r5
   839e4:	f103 37ff 	add.w	r7, r3, #4294967295
   839e8:	f080 80f1 	bcs.w	83bce <__divdi3+0x26e>
   839ec:	4288      	cmp	r0, r1
   839ee:	f240 80ee 	bls.w	83bce <__divdi3+0x26e>
   839f2:	3b02      	subs	r3, #2
   839f4:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   839f8:	2300      	movs	r3, #0
   839fa:	e003      	b.n	83a04 <__divdi3+0xa4>
   839fc:	428b      	cmp	r3, r1
   839fe:	d90a      	bls.n	83a16 <__divdi3+0xb6>
   83a00:	2300      	movs	r3, #0
   83a02:	461a      	mov	r2, r3
   83a04:	4610      	mov	r0, r2
   83a06:	4619      	mov	r1, r3
   83a08:	b114      	cbz	r4, 83a10 <__divdi3+0xb0>
   83a0a:	4240      	negs	r0, r0
   83a0c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   83a10:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83a14:	4770      	bx	lr
   83a16:	fab3 f883 	clz	r8, r3
   83a1a:	f1b8 0f00 	cmp.w	r8, #0
   83a1e:	f040 8088 	bne.w	83b32 <__divdi3+0x1d2>
   83a22:	428b      	cmp	r3, r1
   83a24:	d302      	bcc.n	83a2c <__divdi3+0xcc>
   83a26:	4282      	cmp	r2, r0
   83a28:	f200 80e2 	bhi.w	83bf0 <__divdi3+0x290>
   83a2c:	2300      	movs	r3, #0
   83a2e:	2201      	movs	r2, #1
   83a30:	e7e8      	b.n	83a04 <__divdi3+0xa4>
   83a32:	b912      	cbnz	r2, 83a3a <__divdi3+0xda>
   83a34:	2301      	movs	r3, #1
   83a36:	fbb3 f5f2 	udiv	r5, r3, r2
   83a3a:	fab5 f285 	clz	r2, r5
   83a3e:	2a00      	cmp	r2, #0
   83a40:	d13a      	bne.n	83ab8 <__divdi3+0x158>
   83a42:	1b7f      	subs	r7, r7, r5
   83a44:	0c28      	lsrs	r0, r5, #16
   83a46:	fa1f fc85 	uxth.w	ip, r5
   83a4a:	2301      	movs	r3, #1
   83a4c:	fbb7 f1f0 	udiv	r1, r7, r0
   83a50:	fb00 7711 	mls	r7, r0, r1, r7
   83a54:	fb0c f201 	mul.w	r2, ip, r1
   83a58:	ea4f 4816 	mov.w	r8, r6, lsr #16
   83a5c:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   83a60:	42ba      	cmp	r2, r7
   83a62:	d907      	bls.n	83a74 <__divdi3+0x114>
   83a64:	197f      	adds	r7, r7, r5
   83a66:	f101 38ff 	add.w	r8, r1, #4294967295
   83a6a:	d202      	bcs.n	83a72 <__divdi3+0x112>
   83a6c:	42ba      	cmp	r2, r7
   83a6e:	f200 80c4 	bhi.w	83bfa <__divdi3+0x29a>
   83a72:	4641      	mov	r1, r8
   83a74:	1abf      	subs	r7, r7, r2
   83a76:	fbb7 f2f0 	udiv	r2, r7, r0
   83a7a:	fb00 7012 	mls	r0, r0, r2, r7
   83a7e:	fb0c fc02 	mul.w	ip, ip, r2
   83a82:	b2b6      	uxth	r6, r6
   83a84:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   83a88:	4584      	cmp	ip, r0
   83a8a:	d907      	bls.n	83a9c <__divdi3+0x13c>
   83a8c:	1940      	adds	r0, r0, r5
   83a8e:	f102 37ff 	add.w	r7, r2, #4294967295
   83a92:	d202      	bcs.n	83a9a <__divdi3+0x13a>
   83a94:	4584      	cmp	ip, r0
   83a96:	f200 80ae 	bhi.w	83bf6 <__divdi3+0x296>
   83a9a:	463a      	mov	r2, r7
   83a9c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   83aa0:	e7b0      	b.n	83a04 <__divdi3+0xa4>
   83aa2:	43e4      	mvns	r4, r4
   83aa4:	4252      	negs	r2, r2
   83aa6:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   83aaa:	e762      	b.n	83972 <__divdi3+0x12>
   83aac:	4240      	negs	r0, r0
   83aae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   83ab2:	f04f 34ff 	mov.w	r4, #4294967295
   83ab6:	e759      	b.n	8396c <__divdi3+0xc>
   83ab8:	4095      	lsls	r5, r2
   83aba:	f1c2 0920 	rsb	r9, r2, #32
   83abe:	fa27 f109 	lsr.w	r1, r7, r9
   83ac2:	fa26 f909 	lsr.w	r9, r6, r9
   83ac6:	4097      	lsls	r7, r2
   83ac8:	0c28      	lsrs	r0, r5, #16
   83aca:	fbb1 f8f0 	udiv	r8, r1, r0
   83ace:	fb00 1118 	mls	r1, r0, r8, r1
   83ad2:	fa1f fc85 	uxth.w	ip, r5
   83ad6:	fb0c f308 	mul.w	r3, ip, r8
   83ada:	ea49 0907 	orr.w	r9, r9, r7
   83ade:	ea4f 4719 	mov.w	r7, r9, lsr #16
   83ae2:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   83ae6:	428b      	cmp	r3, r1
   83ae8:	fa06 f602 	lsl.w	r6, r6, r2
   83aec:	d908      	bls.n	83b00 <__divdi3+0x1a0>
   83aee:	1949      	adds	r1, r1, r5
   83af0:	f108 32ff 	add.w	r2, r8, #4294967295
   83af4:	d27a      	bcs.n	83bec <__divdi3+0x28c>
   83af6:	428b      	cmp	r3, r1
   83af8:	d978      	bls.n	83bec <__divdi3+0x28c>
   83afa:	f1a8 0802 	sub.w	r8, r8, #2
   83afe:	4429      	add	r1, r5
   83b00:	1ac9      	subs	r1, r1, r3
   83b02:	fbb1 f3f0 	udiv	r3, r1, r0
   83b06:	fb00 1713 	mls	r7, r0, r3, r1
   83b0a:	fb0c f203 	mul.w	r2, ip, r3
   83b0e:	fa1f f989 	uxth.w	r9, r9
   83b12:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   83b16:	42ba      	cmp	r2, r7
   83b18:	d907      	bls.n	83b2a <__divdi3+0x1ca>
   83b1a:	197f      	adds	r7, r7, r5
   83b1c:	f103 31ff 	add.w	r1, r3, #4294967295
   83b20:	d260      	bcs.n	83be4 <__divdi3+0x284>
   83b22:	42ba      	cmp	r2, r7
   83b24:	d95e      	bls.n	83be4 <__divdi3+0x284>
   83b26:	3b02      	subs	r3, #2
   83b28:	442f      	add	r7, r5
   83b2a:	1abf      	subs	r7, r7, r2
   83b2c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   83b30:	e78c      	b.n	83a4c <__divdi3+0xec>
   83b32:	f1c8 0220 	rsb	r2, r8, #32
   83b36:	fa25 f102 	lsr.w	r1, r5, r2
   83b3a:	fa03 fc08 	lsl.w	ip, r3, r8
   83b3e:	fa27 f302 	lsr.w	r3, r7, r2
   83b42:	fa20 f202 	lsr.w	r2, r0, r2
   83b46:	fa07 f708 	lsl.w	r7, r7, r8
   83b4a:	ea41 0c0c 	orr.w	ip, r1, ip
   83b4e:	ea4f 491c 	mov.w	r9, ip, lsr #16
   83b52:	fbb3 f1f9 	udiv	r1, r3, r9
   83b56:	fb09 3311 	mls	r3, r9, r1, r3
   83b5a:	fa1f fa8c 	uxth.w	sl, ip
   83b5e:	fb0a fb01 	mul.w	fp, sl, r1
   83b62:	4317      	orrs	r7, r2
   83b64:	0c3a      	lsrs	r2, r7, #16
   83b66:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   83b6a:	459b      	cmp	fp, r3
   83b6c:	fa05 f008 	lsl.w	r0, r5, r8
   83b70:	d908      	bls.n	83b84 <__divdi3+0x224>
   83b72:	eb13 030c 	adds.w	r3, r3, ip
   83b76:	f101 32ff 	add.w	r2, r1, #4294967295
   83b7a:	d235      	bcs.n	83be8 <__divdi3+0x288>
   83b7c:	459b      	cmp	fp, r3
   83b7e:	d933      	bls.n	83be8 <__divdi3+0x288>
   83b80:	3902      	subs	r1, #2
   83b82:	4463      	add	r3, ip
   83b84:	ebcb 0303 	rsb	r3, fp, r3
   83b88:	fbb3 f2f9 	udiv	r2, r3, r9
   83b8c:	fb09 3312 	mls	r3, r9, r2, r3
   83b90:	fb0a fa02 	mul.w	sl, sl, r2
   83b94:	b2bf      	uxth	r7, r7
   83b96:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   83b9a:	45ba      	cmp	sl, r7
   83b9c:	d908      	bls.n	83bb0 <__divdi3+0x250>
   83b9e:	eb17 070c 	adds.w	r7, r7, ip
   83ba2:	f102 33ff 	add.w	r3, r2, #4294967295
   83ba6:	d21b      	bcs.n	83be0 <__divdi3+0x280>
   83ba8:	45ba      	cmp	sl, r7
   83baa:	d919      	bls.n	83be0 <__divdi3+0x280>
   83bac:	3a02      	subs	r2, #2
   83bae:	4467      	add	r7, ip
   83bb0:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   83bb4:	fba5 0100 	umull	r0, r1, r5, r0
   83bb8:	ebca 0707 	rsb	r7, sl, r7
   83bbc:	428f      	cmp	r7, r1
   83bbe:	f04f 0300 	mov.w	r3, #0
   83bc2:	d30a      	bcc.n	83bda <__divdi3+0x27a>
   83bc4:	d005      	beq.n	83bd2 <__divdi3+0x272>
   83bc6:	462a      	mov	r2, r5
   83bc8:	e71c      	b.n	83a04 <__divdi3+0xa4>
   83bca:	4662      	mov	r2, ip
   83bcc:	e6fd      	b.n	839ca <__divdi3+0x6a>
   83bce:	463b      	mov	r3, r7
   83bd0:	e710      	b.n	839f4 <__divdi3+0x94>
   83bd2:	fa06 f608 	lsl.w	r6, r6, r8
   83bd6:	4286      	cmp	r6, r0
   83bd8:	d2f5      	bcs.n	83bc6 <__divdi3+0x266>
   83bda:	1e6a      	subs	r2, r5, #1
   83bdc:	2300      	movs	r3, #0
   83bde:	e711      	b.n	83a04 <__divdi3+0xa4>
   83be0:	461a      	mov	r2, r3
   83be2:	e7e5      	b.n	83bb0 <__divdi3+0x250>
   83be4:	460b      	mov	r3, r1
   83be6:	e7a0      	b.n	83b2a <__divdi3+0x1ca>
   83be8:	4611      	mov	r1, r2
   83bea:	e7cb      	b.n	83b84 <__divdi3+0x224>
   83bec:	4690      	mov	r8, r2
   83bee:	e787      	b.n	83b00 <__divdi3+0x1a0>
   83bf0:	4643      	mov	r3, r8
   83bf2:	4642      	mov	r2, r8
   83bf4:	e706      	b.n	83a04 <__divdi3+0xa4>
   83bf6:	3a02      	subs	r2, #2
   83bf8:	e750      	b.n	83a9c <__divdi3+0x13c>
   83bfa:	3902      	subs	r1, #2
   83bfc:	442f      	add	r7, r5
   83bfe:	e739      	b.n	83a74 <__divdi3+0x114>

00083c00 <__udivdi3>:
   83c00:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83c04:	4614      	mov	r4, r2
   83c06:	4605      	mov	r5, r0
   83c08:	460e      	mov	r6, r1
   83c0a:	2b00      	cmp	r3, #0
   83c0c:	d143      	bne.n	83c96 <__udivdi3+0x96>
   83c0e:	428a      	cmp	r2, r1
   83c10:	d953      	bls.n	83cba <__udivdi3+0xba>
   83c12:	fab2 f782 	clz	r7, r2
   83c16:	b157      	cbz	r7, 83c2e <__udivdi3+0x2e>
   83c18:	f1c7 0620 	rsb	r6, r7, #32
   83c1c:	fa20 f606 	lsr.w	r6, r0, r6
   83c20:	fa01 f307 	lsl.w	r3, r1, r7
   83c24:	fa02 f407 	lsl.w	r4, r2, r7
   83c28:	fa00 f507 	lsl.w	r5, r0, r7
   83c2c:	431e      	orrs	r6, r3
   83c2e:	0c21      	lsrs	r1, r4, #16
   83c30:	fbb6 f2f1 	udiv	r2, r6, r1
   83c34:	fb01 6612 	mls	r6, r1, r2, r6
   83c38:	b2a0      	uxth	r0, r4
   83c3a:	fb00 f302 	mul.w	r3, r0, r2
   83c3e:	0c2f      	lsrs	r7, r5, #16
   83c40:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   83c44:	42b3      	cmp	r3, r6
   83c46:	d909      	bls.n	83c5c <__udivdi3+0x5c>
   83c48:	1936      	adds	r6, r6, r4
   83c4a:	f102 37ff 	add.w	r7, r2, #4294967295
   83c4e:	f080 80fd 	bcs.w	83e4c <__udivdi3+0x24c>
   83c52:	42b3      	cmp	r3, r6
   83c54:	f240 80fa 	bls.w	83e4c <__udivdi3+0x24c>
   83c58:	3a02      	subs	r2, #2
   83c5a:	4426      	add	r6, r4
   83c5c:	1af6      	subs	r6, r6, r3
   83c5e:	fbb6 f3f1 	udiv	r3, r6, r1
   83c62:	fb01 6113 	mls	r1, r1, r3, r6
   83c66:	fb00 f003 	mul.w	r0, r0, r3
   83c6a:	b2ad      	uxth	r5, r5
   83c6c:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   83c70:	4288      	cmp	r0, r1
   83c72:	d908      	bls.n	83c86 <__udivdi3+0x86>
   83c74:	1909      	adds	r1, r1, r4
   83c76:	f103 36ff 	add.w	r6, r3, #4294967295
   83c7a:	f080 80e9 	bcs.w	83e50 <__udivdi3+0x250>
   83c7e:	4288      	cmp	r0, r1
   83c80:	f240 80e6 	bls.w	83e50 <__udivdi3+0x250>
   83c84:	3b02      	subs	r3, #2
   83c86:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   83c8a:	2300      	movs	r3, #0
   83c8c:	4610      	mov	r0, r2
   83c8e:	4619      	mov	r1, r3
   83c90:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83c94:	4770      	bx	lr
   83c96:	428b      	cmp	r3, r1
   83c98:	d84c      	bhi.n	83d34 <__udivdi3+0x134>
   83c9a:	fab3 f683 	clz	r6, r3
   83c9e:	2e00      	cmp	r6, #0
   83ca0:	d14f      	bne.n	83d42 <__udivdi3+0x142>
   83ca2:	428b      	cmp	r3, r1
   83ca4:	d302      	bcc.n	83cac <__udivdi3+0xac>
   83ca6:	4282      	cmp	r2, r0
   83ca8:	f200 80dd 	bhi.w	83e66 <__udivdi3+0x266>
   83cac:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83cb0:	2300      	movs	r3, #0
   83cb2:	2201      	movs	r2, #1
   83cb4:	4610      	mov	r0, r2
   83cb6:	4619      	mov	r1, r3
   83cb8:	4770      	bx	lr
   83cba:	b912      	cbnz	r2, 83cc2 <__udivdi3+0xc2>
   83cbc:	2401      	movs	r4, #1
   83cbe:	fbb4 f4f2 	udiv	r4, r4, r2
   83cc2:	fab4 f284 	clz	r2, r4
   83cc6:	2a00      	cmp	r2, #0
   83cc8:	f040 8082 	bne.w	83dd0 <__udivdi3+0x1d0>
   83ccc:	1b09      	subs	r1, r1, r4
   83cce:	0c26      	lsrs	r6, r4, #16
   83cd0:	b2a7      	uxth	r7, r4
   83cd2:	2301      	movs	r3, #1
   83cd4:	fbb1 f0f6 	udiv	r0, r1, r6
   83cd8:	fb06 1110 	mls	r1, r6, r0, r1
   83cdc:	fb07 f200 	mul.w	r2, r7, r0
   83ce0:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   83ce4:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   83ce8:	428a      	cmp	r2, r1
   83cea:	d907      	bls.n	83cfc <__udivdi3+0xfc>
   83cec:	1909      	adds	r1, r1, r4
   83cee:	f100 3cff 	add.w	ip, r0, #4294967295
   83cf2:	d202      	bcs.n	83cfa <__udivdi3+0xfa>
   83cf4:	428a      	cmp	r2, r1
   83cf6:	f200 80c8 	bhi.w	83e8a <__udivdi3+0x28a>
   83cfa:	4660      	mov	r0, ip
   83cfc:	1a89      	subs	r1, r1, r2
   83cfe:	fbb1 f2f6 	udiv	r2, r1, r6
   83d02:	fb06 1112 	mls	r1, r6, r2, r1
   83d06:	fb07 f702 	mul.w	r7, r7, r2
   83d0a:	b2ad      	uxth	r5, r5
   83d0c:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   83d10:	42af      	cmp	r7, r5
   83d12:	d908      	bls.n	83d26 <__udivdi3+0x126>
   83d14:	192c      	adds	r4, r5, r4
   83d16:	f102 31ff 	add.w	r1, r2, #4294967295
   83d1a:	f080 809b 	bcs.w	83e54 <__udivdi3+0x254>
   83d1e:	42a7      	cmp	r7, r4
   83d20:	f240 8098 	bls.w	83e54 <__udivdi3+0x254>
   83d24:	3a02      	subs	r2, #2
   83d26:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   83d2a:	4610      	mov	r0, r2
   83d2c:	4619      	mov	r1, r3
   83d2e:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83d32:	4770      	bx	lr
   83d34:	2300      	movs	r3, #0
   83d36:	461a      	mov	r2, r3
   83d38:	4610      	mov	r0, r2
   83d3a:	4619      	mov	r1, r3
   83d3c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83d40:	4770      	bx	lr
   83d42:	f1c6 0520 	rsb	r5, r6, #32
   83d46:	fa22 f705 	lsr.w	r7, r2, r5
   83d4a:	fa03 f406 	lsl.w	r4, r3, r6
   83d4e:	fa21 f305 	lsr.w	r3, r1, r5
   83d52:	fa01 fb06 	lsl.w	fp, r1, r6
   83d56:	fa20 f505 	lsr.w	r5, r0, r5
   83d5a:	433c      	orrs	r4, r7
   83d5c:	ea4f 4814 	mov.w	r8, r4, lsr #16
   83d60:	fbb3 fcf8 	udiv	ip, r3, r8
   83d64:	fb08 331c 	mls	r3, r8, ip, r3
   83d68:	fa1f f984 	uxth.w	r9, r4
   83d6c:	fb09 fa0c 	mul.w	sl, r9, ip
   83d70:	ea45 0b0b 	orr.w	fp, r5, fp
   83d74:	ea4f 451b 	mov.w	r5, fp, lsr #16
   83d78:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   83d7c:	459a      	cmp	sl, r3
   83d7e:	fa02 f206 	lsl.w	r2, r2, r6
   83d82:	d904      	bls.n	83d8e <__udivdi3+0x18e>
   83d84:	191b      	adds	r3, r3, r4
   83d86:	f10c 35ff 	add.w	r5, ip, #4294967295
   83d8a:	d36f      	bcc.n	83e6c <__udivdi3+0x26c>
   83d8c:	46ac      	mov	ip, r5
   83d8e:	ebca 0303 	rsb	r3, sl, r3
   83d92:	fbb3 f5f8 	udiv	r5, r3, r8
   83d96:	fb08 3315 	mls	r3, r8, r5, r3
   83d9a:	fb09 f905 	mul.w	r9, r9, r5
   83d9e:	fa1f fb8b 	uxth.w	fp, fp
   83da2:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   83da6:	45b9      	cmp	r9, r7
   83da8:	d904      	bls.n	83db4 <__udivdi3+0x1b4>
   83daa:	193f      	adds	r7, r7, r4
   83dac:	f105 33ff 	add.w	r3, r5, #4294967295
   83db0:	d362      	bcc.n	83e78 <__udivdi3+0x278>
   83db2:	461d      	mov	r5, r3
   83db4:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   83db8:	fbac 2302 	umull	r2, r3, ip, r2
   83dbc:	ebc9 0707 	rsb	r7, r9, r7
   83dc0:	429f      	cmp	r7, r3
   83dc2:	f04f 0500 	mov.w	r5, #0
   83dc6:	d34a      	bcc.n	83e5e <__udivdi3+0x25e>
   83dc8:	d046      	beq.n	83e58 <__udivdi3+0x258>
   83dca:	4662      	mov	r2, ip
   83dcc:	462b      	mov	r3, r5
   83dce:	e75d      	b.n	83c8c <__udivdi3+0x8c>
   83dd0:	4094      	lsls	r4, r2
   83dd2:	f1c2 0920 	rsb	r9, r2, #32
   83dd6:	fa21 fc09 	lsr.w	ip, r1, r9
   83dda:	4091      	lsls	r1, r2
   83ddc:	fa20 f909 	lsr.w	r9, r0, r9
   83de0:	0c26      	lsrs	r6, r4, #16
   83de2:	fbbc f8f6 	udiv	r8, ip, r6
   83de6:	fb06 cc18 	mls	ip, r6, r8, ip
   83dea:	b2a7      	uxth	r7, r4
   83dec:	fb07 f308 	mul.w	r3, r7, r8
   83df0:	ea49 0901 	orr.w	r9, r9, r1
   83df4:	ea4f 4119 	mov.w	r1, r9, lsr #16
   83df8:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   83dfc:	4563      	cmp	r3, ip
   83dfe:	fa00 f502 	lsl.w	r5, r0, r2
   83e02:	d909      	bls.n	83e18 <__udivdi3+0x218>
   83e04:	eb1c 0c04 	adds.w	ip, ip, r4
   83e08:	f108 32ff 	add.w	r2, r8, #4294967295
   83e0c:	d23b      	bcs.n	83e86 <__udivdi3+0x286>
   83e0e:	4563      	cmp	r3, ip
   83e10:	d939      	bls.n	83e86 <__udivdi3+0x286>
   83e12:	f1a8 0802 	sub.w	r8, r8, #2
   83e16:	44a4      	add	ip, r4
   83e18:	ebc3 0c0c 	rsb	ip, r3, ip
   83e1c:	fbbc f3f6 	udiv	r3, ip, r6
   83e20:	fb06 c113 	mls	r1, r6, r3, ip
   83e24:	fb07 f203 	mul.w	r2, r7, r3
   83e28:	fa1f f989 	uxth.w	r9, r9
   83e2c:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   83e30:	428a      	cmp	r2, r1
   83e32:	d907      	bls.n	83e44 <__udivdi3+0x244>
   83e34:	1909      	adds	r1, r1, r4
   83e36:	f103 30ff 	add.w	r0, r3, #4294967295
   83e3a:	d222      	bcs.n	83e82 <__udivdi3+0x282>
   83e3c:	428a      	cmp	r2, r1
   83e3e:	d920      	bls.n	83e82 <__udivdi3+0x282>
   83e40:	3b02      	subs	r3, #2
   83e42:	4421      	add	r1, r4
   83e44:	1a89      	subs	r1, r1, r2
   83e46:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   83e4a:	e743      	b.n	83cd4 <__udivdi3+0xd4>
   83e4c:	463a      	mov	r2, r7
   83e4e:	e705      	b.n	83c5c <__udivdi3+0x5c>
   83e50:	4633      	mov	r3, r6
   83e52:	e718      	b.n	83c86 <__udivdi3+0x86>
   83e54:	460a      	mov	r2, r1
   83e56:	e766      	b.n	83d26 <__udivdi3+0x126>
   83e58:	40b0      	lsls	r0, r6
   83e5a:	4290      	cmp	r0, r2
   83e5c:	d2b5      	bcs.n	83dca <__udivdi3+0x1ca>
   83e5e:	f10c 32ff 	add.w	r2, ip, #4294967295
   83e62:	2300      	movs	r3, #0
   83e64:	e712      	b.n	83c8c <__udivdi3+0x8c>
   83e66:	4633      	mov	r3, r6
   83e68:	4632      	mov	r2, r6
   83e6a:	e70f      	b.n	83c8c <__udivdi3+0x8c>
   83e6c:	459a      	cmp	sl, r3
   83e6e:	d98d      	bls.n	83d8c <__udivdi3+0x18c>
   83e70:	f1ac 0c02 	sub.w	ip, ip, #2
   83e74:	4423      	add	r3, r4
   83e76:	e78a      	b.n	83d8e <__udivdi3+0x18e>
   83e78:	45b9      	cmp	r9, r7
   83e7a:	d99a      	bls.n	83db2 <__udivdi3+0x1b2>
   83e7c:	3d02      	subs	r5, #2
   83e7e:	4427      	add	r7, r4
   83e80:	e798      	b.n	83db4 <__udivdi3+0x1b4>
   83e82:	4603      	mov	r3, r0
   83e84:	e7de      	b.n	83e44 <__udivdi3+0x244>
   83e86:	4690      	mov	r8, r2
   83e88:	e7c6      	b.n	83e18 <__udivdi3+0x218>
   83e8a:	3802      	subs	r0, #2
   83e8c:	4421      	add	r1, r4
   83e8e:	e735      	b.n	83cfc <__udivdi3+0xfc>
   83e90:	72617453 	.word	0x72617453
   83e94:	00726174 	.word	0x00726174
   83e98:	00000001 	.word	0x00000001
   83e9c:	00000002 	.word	0x00000002
   83ea0:	00000004 	.word	0x00000004
   83ea4:	00000008 	.word	0x00000008
   83ea8:	00000010 	.word	0x00000010
   83eac:	00000020 	.word	0x00000020
   83eb0:	00000040 	.word	0x00000040
   83eb4:	00000080 	.word	0x00000080
   83eb8:	00000100 	.word	0x00000100
   83ebc:	00000200 	.word	0x00000200
   83ec0:	00000400 	.word	0x00000400
   83ec4:	00000043 	.word	0x00000043

00083ec8 <_global_impure_ptr>:
   83ec8:	20070140 33323130 37363534 42413938     @.. 0123456789AB
   83ed8:	46454443 00000000 33323130 37363534     CDEF....01234567
   83ee8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   83ef8:	0000296c                                l)..

00083efc <zeroes.6721>:
   83efc:	30303030 30303030 30303030 30303030     0000000000000000

00083f0c <blanks.6720>:
   83f0c:	20202020 20202020 20202020 20202020                     

00083f1c <_init>:
   83f1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83f1e:	bf00      	nop
   83f20:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83f22:	bc08      	pop	{r3}
   83f24:	469e      	mov	lr, r3
   83f26:	4770      	bx	lr

00083f28 <__init_array_start>:
   83f28:	00081f85 	.word	0x00081f85

00083f2c <__frame_dummy_init_array_entry>:
   83f2c:	00080119                                ....

00083f30 <_fini>:
   83f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83f32:	bf00      	nop
   83f34:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83f36:	bc08      	pop	{r3}
   83f38:	469e      	mov	lr, r3
   83f3a:	4770      	bx	lr

00083f3c <__fini_array_start>:
   83f3c:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
2007000a:	bf00      	nop

2007000c <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4b14      	ldr	r3, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b1a      	ldr	r2, [r3, #48]	; 0x30
20070048:	f022 0203 	bic.w	r2, r2, #3
2007004c:	f042 0201 	orr.w	r2, r2, #1
20070050:	631a      	str	r2, [r3, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	461a      	mov	r2, r3
20070054:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070056:	f013 0f08 	tst.w	r3, #8
2007005a:	d0fb      	beq.n	20070054 <SystemInit+0x48>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005c:	4a11      	ldr	r2, [pc, #68]	; (200700a4 <SystemInit+0x98>)
2007005e:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
20070060:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070062:	461a      	mov	r2, r3
20070064:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070066:	f013 0f02 	tst.w	r3, #2
2007006a:	d0fb      	beq.n	20070064 <SystemInit+0x58>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006c:	2211      	movs	r2, #17
2007006e:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
20070070:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070072:	461a      	mov	r2, r3
20070074:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070076:	f013 0f08 	tst.w	r3, #8
2007007a:	d0fb      	beq.n	20070074 <SystemInit+0x68>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007c:	2212      	movs	r2, #18
2007007e:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
20070080:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070082:	461a      	mov	r2, r3
20070084:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070086:	f013 0f08 	tst.w	r3, #8
2007008a:	d0fb      	beq.n	20070084 <SystemInit+0x78>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008c:	4a06      	ldr	r2, [pc, #24]	; (200700a8 <SystemInit+0x9c>)
2007008e:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
20070090:	601a      	str	r2, [r3, #0]
20070092:	4770      	bx	lr
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007013c 	.word	0x2007013c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d806      	bhi.n	200700c4 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700b6:	2300      	movs	r3, #0
200700b8:	4a1a      	ldr	r2, [pc, #104]	; (20070124 <system_init_flash+0x74>)
200700ba:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700bc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700c0:	6013      	str	r3, [r2, #0]
200700c2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700c4:	4b18      	ldr	r3, [pc, #96]	; (20070128 <system_init_flash+0x78>)
200700c6:	4298      	cmp	r0, r3
200700c8:	d807      	bhi.n	200700da <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700ca:	f44f 7380 	mov.w	r3, #256	; 0x100
200700ce:	4a15      	ldr	r2, [pc, #84]	; (20070124 <system_init_flash+0x74>)
200700d0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700d2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700d6:	6013      	str	r3, [r2, #0]
200700d8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700da:	4b14      	ldr	r3, [pc, #80]	; (2007012c <system_init_flash+0x7c>)
200700dc:	4298      	cmp	r0, r3
200700de:	d807      	bhi.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700e0:	f44f 7300 	mov.w	r3, #512	; 0x200
200700e4:	4a0f      	ldr	r2, [pc, #60]	; (20070124 <system_init_flash+0x74>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700f0:	4b0f      	ldr	r3, [pc, #60]	; (20070130 <system_init_flash+0x80>)
200700f2:	4298      	cmp	r0, r3
200700f4:	d807      	bhi.n	20070106 <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700f6:	f44f 7340 	mov.w	r3, #768	; 0x300
200700fa:	4a0a      	ldr	r2, [pc, #40]	; (20070124 <system_init_flash+0x74>)
200700fc:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700fe:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070102:	6013      	str	r3, [r2, #0]
20070104:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
20070106:	4b0b      	ldr	r3, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070108:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007010a:	bf94      	ite	ls
2007010c:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070110:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070114:	4a03      	ldr	r2, [pc, #12]	; (20070124 <system_init_flash+0x74>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	400e0a00 	.word	0x400e0a00
20070128:	02faf07f 	.word	0x02faf07f
2007012c:	03d08fff 	.word	0x03d08fff
20070130:	04c4b3ff 	.word	0x04c4b3ff
20070134:	055d4a7f 	.word	0x055d4a7f

20070138 <g_interrupt_enabled>:
20070138:	00000001                                ....

2007013c <SystemCoreClock>:
2007013c:	003d0900                                ..=.

20070140 <impure_data>:
20070140:	00000000 2007042c 20070494 200704fc     ....,.. ... ... 
	...
20070174:	00083ec4 00000000 00000000 00000000     .>..............
	...
200701e8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f8:	0005deec 0000000b 00000000 00000000     ................
	...

20070568 <_impure_ptr>:
20070568:	20070140                                @.. 

2007056c <lc_ctype_charset>:
2007056c:	49435341 00000049 00000000 00000000     ASCII...........
	...

2007058c <__mb_cur_max>:
2007058c:	00000001                                ....

20070590 <__malloc_av_>:
	...
20070598:	20070590 20070590 20070598 20070598     ... ... ... ... 
200705a8:	200705a0 200705a0 200705a8 200705a8     ... ... ... ... 
200705b8:	200705b0 200705b0 200705b8 200705b8     ... ... ... ... 
200705c8:	200705c0 200705c0 200705c8 200705c8     ... ... ... ... 
200705d8:	200705d0 200705d0 200705d8 200705d8     ... ... ... ... 
200705e8:	200705e0 200705e0 200705e8 200705e8     ... ... ... ... 
200705f8:	200705f0 200705f0 200705f8 200705f8     ... ... ... ... 
20070608:	20070600 20070600 20070608 20070608     ... ... ... ... 
20070618:	20070610 20070610 20070618 20070618     ... ... ... ... 
20070628:	20070620 20070620 20070628 20070628      ..  .. (.. (.. 
20070638:	20070630 20070630 20070638 20070638     0.. 0.. 8.. 8.. 
20070648:	20070640 20070640 20070648 20070648     @.. @.. H.. H.. 
20070658:	20070650 20070650 20070658 20070658     P.. P.. X.. X.. 
20070668:	20070660 20070660 20070668 20070668     `.. `.. h.. h.. 
20070678:	20070670 20070670 20070678 20070678     p.. p.. x.. x.. 
20070688:	20070680 20070680 20070688 20070688     ... ... ... ... 
20070698:	20070690 20070690 20070698 20070698     ... ... ... ... 
200706a8:	200706a0 200706a0 200706a8 200706a8     ... ... ... ... 
200706b8:	200706b0 200706b0 200706b8 200706b8     ... ... ... ... 
200706c8:	200706c0 200706c0 200706c8 200706c8     ... ... ... ... 
200706d8:	200706d0 200706d0 200706d8 200706d8     ... ... ... ... 
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 

20070998 <__malloc_trim_threshold>:
20070998:	00020000                                ....

2007099c <__malloc_sbrk_base>:
2007099c:	ffffffff                                ....

200709a0 <__wctomb>:
200709a0:	00083695                                .6..
