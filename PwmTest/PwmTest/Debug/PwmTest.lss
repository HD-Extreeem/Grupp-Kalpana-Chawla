
PwmTest.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003ca4  00080000  00080000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00083ca4  00083ca4  0000bca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009a4  20070000  00083cac  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000178  200709a4  00084650  000109a4  2**2
                  ALLOC
  4 .stack        00002004  20070b1c  000847c8  000109a4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109a4  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  000109cd  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000c8a4  00000000  00000000  00010a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000022b4  00000000  00000000  0001d2cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000040ab  00000000  00000000  0001f580  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009b0  00000000  00000000  0002362b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000898  00000000  00000000  00023fdb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00017ff4  00000000  00000000  00024873  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000f0c8  00000000  00000000  0003c867  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000606eb  00000000  00000000  0004b92f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001ecc  00000000  00000000  000ac01c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072b20 	.word	0x20072b20
   80004:	00080b75 	.word	0x00080b75
   80008:	00080b71 	.word	0x00080b71
   8000c:	00080b71 	.word	0x00080b71
   80010:	00080b71 	.word	0x00080b71
   80014:	00080b71 	.word	0x00080b71
   80018:	00080b71 	.word	0x00080b71
	...
   8002c:	00080b71 	.word	0x00080b71
   80030:	00080b71 	.word	0x00080b71
   80034:	00000000 	.word	0x00000000
   80038:	00080b71 	.word	0x00080b71
   8003c:	00080b71 	.word	0x00080b71
   80040:	00080b71 	.word	0x00080b71
   80044:	00080b71 	.word	0x00080b71
   80048:	00080b71 	.word	0x00080b71
   8004c:	00080b71 	.word	0x00080b71
   80050:	00080b71 	.word	0x00080b71
   80054:	00080b71 	.word	0x00080b71
   80058:	00080b71 	.word	0x00080b71
   8005c:	00080b71 	.word	0x00080b71
   80060:	00080b71 	.word	0x00080b71
   80064:	00080b71 	.word	0x00080b71
   80068:	00000000 	.word	0x00000000
   8006c:	00080aa5 	.word	0x00080aa5
   80070:	00080ab9 	.word	0x00080ab9
   80074:	00080acd 	.word	0x00080acd
   80078:	00080ae1 	.word	0x00080ae1
	...
   80084:	000803e1 	.word	0x000803e1
   80088:	00080b71 	.word	0x00080b71
   8008c:	00080b71 	.word	0x00080b71
   80090:	00080b71 	.word	0x00080b71
   80094:	00080b71 	.word	0x00080b71
   80098:	00080b71 	.word	0x00080b71
   8009c:	00080b71 	.word	0x00080b71
   800a0:	00080b71 	.word	0x00080b71
   800a4:	00000000 	.word	0x00000000
   800a8:	00080b71 	.word	0x00080b71
   800ac:	00080b71 	.word	0x00080b71
   800b0:	00080b71 	.word	0x00080b71
   800b4:	00080b71 	.word	0x00080b71
   800b8:	00080b71 	.word	0x00080b71
   800bc:	00080b71 	.word	0x00080b71
   800c0:	00080b71 	.word	0x00080b71
   800c4:	00080b71 	.word	0x00080b71
   800c8:	00080b71 	.word	0x00080b71
   800cc:	00080b71 	.word	0x00080b71
   800d0:	00080b71 	.word	0x00080b71
   800d4:	00080b71 	.word	0x00080b71
   800d8:	00080b71 	.word	0x00080b71
   800dc:	00080b71 	.word	0x00080b71
   800e0:	00080b71 	.word	0x00080b71
   800e4:	00080b71 	.word	0x00080b71
   800e8:	00080b71 	.word	0x00080b71
   800ec:	00080b71 	.word	0x00080b71
   800f0:	00080b71 	.word	0x00080b71

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709a4 	.word	0x200709a4
   80110:	00000000 	.word	0x00000000
   80114:	00083cac 	.word	0x00083cac

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00083cac 	.word	0x00083cac
   8013c:	200709a8 	.word	0x200709a8
   80140:	00083cac 	.word	0x00083cac
   80144:	00000000 	.word	0x00000000

00080148 <main>:
#include "asf.h"
#include "PwmFunctions.h"
#include "InterruptStepCounter.h"
#include "consoleFunctions.h"
int main(void)
{
   80148:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8014c:	b082      	sub	sp, #8
	/* Initialize the SAM system */
	SystemInit();
   8014e:	4b1f      	ldr	r3, [pc, #124]	; (801cc <main+0x84>)
   80150:	4798      	blx	r3
	/*Initialize the board configurations*/
	board_init();
   80152:	4b1f      	ldr	r3, [pc, #124]	; (801d0 <main+0x88>)
   80154:	4798      	blx	r3
	configureConsole();
   80156:	4b1f      	ldr	r3, [pc, #124]	; (801d4 <main+0x8c>)
   80158:	4798      	blx	r3
	printf("main");
   8015a:	481f      	ldr	r0, [pc, #124]	; (801d8 <main+0x90>)
   8015c:	4b1f      	ldr	r3, [pc, #124]	; (801dc <main+0x94>)
   8015e:	4798      	blx	r3
	pio_set_output(PIOB, PIO_PB27, LOW, DISABLE, ENABLE);
   80160:	2501      	movs	r5, #1
   80162:	9500      	str	r5, [sp, #0]
   80164:	481e      	ldr	r0, [pc, #120]	; (801e0 <main+0x98>)
   80166:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8016a:	2200      	movs	r2, #0
   8016c:	4613      	mov	r3, r2
   8016e:	4c1d      	ldr	r4, [pc, #116]	; (801e4 <main+0x9c>)
   80170:	47a0      	blx	r4
	pio_set_output(PIOD, PIO_PD8, LOW, DISABLE, ENABLE);
   80172:	9500      	str	r5, [sp, #0]
   80174:	481c      	ldr	r0, [pc, #112]	; (801e8 <main+0xa0>)
   80176:	f44f 7180 	mov.w	r1, #256	; 0x100
   8017a:	2200      	movs	r2, #0
   8017c:	4613      	mov	r3, r2
   8017e:	47a0      	blx	r4
	configInterrupts();
   80180:	4b1a      	ldr	r3, [pc, #104]	; (801ec <main+0xa4>)
   80182:	4798      	blx	r3
   80184:	240a      	movs	r4, #10
	for(int i=0; i<=9;i++){
	pio_set(PIOD, PIO_PD8);
   80186:	f8df a060 	ldr.w	sl, [pc, #96]	; 801e8 <main+0xa0>
   8018a:	f8df 9070 	ldr.w	r9, [pc, #112]	; 801fc <main+0xb4>
	pio_set(PIOB, PIO_PB27);
   8018e:	f8df 8050 	ldr.w	r8, [pc, #80]	; 801e0 <main+0x98>
	printf("main");
	pio_set_output(PIOB, PIO_PB27, LOW, DISABLE, ENABLE);
	pio_set_output(PIOD, PIO_PD8, LOW, DISABLE, ENABLE);
	configInterrupts();
	for(int i=0; i<=9;i++){
	pio_set(PIOD, PIO_PD8);
   80192:	4650      	mov	r0, sl
   80194:	f44f 7180 	mov.w	r1, #256	; 0x100
   80198:	47c8      	blx	r9
	pio_set(PIOB, PIO_PB27);
   8019a:	4640      	mov	r0, r8
   8019c:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   801a0:	47c8      	blx	r9
	delay_ms(25);
   801a2:	4e13      	ldr	r6, [pc, #76]	; (801f0 <main+0xa8>)
   801a4:	4630      	mov	r0, r6
   801a6:	4d13      	ldr	r5, [pc, #76]	; (801f4 <main+0xac>)
   801a8:	47a8      	blx	r5
	 pio_clear(PIOD, PIO_PD8);
   801aa:	4650      	mov	r0, sl
   801ac:	f44f 7180 	mov.w	r1, #256	; 0x100
   801b0:	4f11      	ldr	r7, [pc, #68]	; (801f8 <main+0xb0>)
   801b2:	47b8      	blx	r7
  pio_clear(PIOB, PIO_PB27);
   801b4:	4640      	mov	r0, r8
   801b6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   801ba:	47b8      	blx	r7
  delay_ms(25);
   801bc:	4630      	mov	r0, r6
   801be:	47a8      	blx	r5
	configureConsole();
	printf("main");
	pio_set_output(PIOB, PIO_PB27, LOW, DISABLE, ENABLE);
	pio_set_output(PIOD, PIO_PD8, LOW, DISABLE, ENABLE);
	configInterrupts();
	for(int i=0; i<=9;i++){
   801c0:	3c01      	subs	r4, #1
   801c2:	d1e6      	bne.n	80192 <main+0x4a>
		}
		pwm_pin_21(1500);
		pwm_pin_22(1500);
	}
	*/
   801c4:	2000      	movs	r0, #0
   801c6:	b002      	add	sp, #8
   801c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   801cc:	2007000d 	.word	0x2007000d
   801d0:	00080721 	.word	0x00080721
   801d4:	0008059d 	.word	0x0008059d
   801d8:	00083c08 	.word	0x00083c08
   801dc:	00080cc5 	.word	0x00080cc5
   801e0:	400e1000 	.word	0x400e1000
   801e4:	00080835 	.word	0x00080835
   801e8:	400e1400 	.word	0x400e1400
   801ec:	00080675 	.word	0x00080675
   801f0:	000249f0 	.word	0x000249f0
   801f4:	20070001 	.word	0x20070001
   801f8:	000807a5 	.word	0x000807a5
   801fc:	000807a1 	.word	0x000807a1

00080200 <usart_serial_read_packet>:
 * \param len    Length of data
 *
 */
status_code_t usart_serial_read_packet(usart_if usart, uint8_t *data,
		size_t len)
{
   80200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80204:	b083      	sub	sp, #12
   80206:	4605      	mov	r5, r0
	while (len) {
   80208:	4690      	mov	r8, r2
   8020a:	2a00      	cmp	r2, #0
   8020c:	d047      	beq.n	8029e <usart_serial_read_packet+0x9e>
   8020e:	1c4e      	adds	r6, r1, #1
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80210:	4f25      	ldr	r7, [pc, #148]	; (802a8 <usart_serial_read_packet+0xa8>)
		while (usart_read(p_usart, &val));
   80212:	4c26      	ldr	r4, [pc, #152]	; (802ac <usart_serial_read_packet+0xac>)
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80214:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 802c0 <usart_serial_read_packet+0xc0>
	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
   80218:	f8df b094 	ldr.w	fp, [pc, #148]	; 802b0 <usart_serial_read_packet+0xb0>
   8021c:	f106 39ff 	add.w	r9, r6, #4294967295
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
	uint32_t val = 0;
   80220:	2300      	movs	r3, #0
   80222:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80224:	4b22      	ldr	r3, [pc, #136]	; (802b0 <usart_serial_read_packet+0xb0>)
   80226:	429d      	cmp	r5, r3
   80228:	d106      	bne.n	80238 <usart_serial_read_packet+0x38>
		while (uart_read((Uart*)p_usart, data));
   8022a:	4658      	mov	r0, fp
   8022c:	4649      	mov	r1, r9
   8022e:	4b21      	ldr	r3, [pc, #132]	; (802b4 <usart_serial_read_packet+0xb4>)
   80230:	4798      	blx	r3
   80232:	2800      	cmp	r0, #0
   80234:	d1f9      	bne.n	8022a <usart_serial_read_packet+0x2a>
   80236:	e019      	b.n	8026c <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80238:	4b1f      	ldr	r3, [pc, #124]	; (802b8 <usart_serial_read_packet+0xb8>)
   8023a:	429d      	cmp	r5, r3
   8023c:	d109      	bne.n	80252 <usart_serial_read_packet+0x52>
		while (usart_read(p_usart, &val));
   8023e:	4699      	mov	r9, r3
   80240:	4648      	mov	r0, r9
   80242:	a901      	add	r1, sp, #4
   80244:	47a0      	blx	r4
   80246:	2800      	cmp	r0, #0
   80248:	d1fa      	bne.n	80240 <usart_serial_read_packet+0x40>
		*data = (uint8_t)(val & 0xFF);
   8024a:	9b01      	ldr	r3, [sp, #4]
   8024c:	f806 3c01 	strb.w	r3, [r6, #-1]
   80250:	e017      	b.n	80282 <usart_serial_read_packet+0x82>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80252:	4b1a      	ldr	r3, [pc, #104]	; (802bc <usart_serial_read_packet+0xbc>)
   80254:	429d      	cmp	r5, r3
   80256:	d109      	bne.n	8026c <usart_serial_read_packet+0x6c>
		while (usart_read(p_usart, &val));
   80258:	4699      	mov	r9, r3
   8025a:	4648      	mov	r0, r9
   8025c:	a901      	add	r1, sp, #4
   8025e:	47a0      	blx	r4
   80260:	2800      	cmp	r0, #0
   80262:	d1fa      	bne.n	8025a <usart_serial_read_packet+0x5a>
		*data = (uint8_t)(val & 0xFF);
   80264:	9b01      	ldr	r3, [sp, #4]
   80266:	f806 3c01 	strb.w	r3, [r6, #-1]
   8026a:	e014      	b.n	80296 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   8026c:	4555      	cmp	r5, sl
   8026e:	d108      	bne.n	80282 <usart_serial_read_packet+0x82>
		while (usart_read(p_usart, &val));
   80270:	4650      	mov	r0, sl
   80272:	a901      	add	r1, sp, #4
   80274:	47a0      	blx	r4
   80276:	2800      	cmp	r0, #0
   80278:	d1fa      	bne.n	80270 <usart_serial_read_packet+0x70>
		*data = (uint8_t)(val & 0xFF);
   8027a:	9b01      	ldr	r3, [sp, #4]
   8027c:	f806 3c01 	strb.w	r3, [r6, #-1]
   80280:	e009      	b.n	80296 <usart_serial_read_packet+0x96>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80282:	42bd      	cmp	r5, r7
   80284:	d107      	bne.n	80296 <usart_serial_read_packet+0x96>
		while (usart_read(p_usart, &val));
   80286:	4638      	mov	r0, r7
   80288:	a901      	add	r1, sp, #4
   8028a:	47a0      	blx	r4
   8028c:	2800      	cmp	r0, #0
   8028e:	d1fa      	bne.n	80286 <usart_serial_read_packet+0x86>
		*data = (uint8_t)(val & 0xFF);
   80290:	9b01      	ldr	r3, [sp, #4]
   80292:	f806 3c01 	strb.w	r3, [r6, #-1]
   80296:	3601      	adds	r6, #1
   80298:	f1b8 0801 	subs.w	r8, r8, #1
   8029c:	d1be      	bne.n	8021c <usart_serial_read_packet+0x1c>
		usart_serial_getchar(usart, data);
		len--;
		data++;
	}
	return STATUS_OK;
}
   8029e:	2000      	movs	r0, #0
   802a0:	b003      	add	sp, #12
   802a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   802a6:	bf00      	nop
   802a8:	400a4000 	.word	0x400a4000
   802ac:	000803c9 	.word	0x000803c9
   802b0:	400e0800 	.word	0x400e0800
   802b4:	000803a1 	.word	0x000803a1
   802b8:	40098000 	.word	0x40098000
   802bc:	4009c000 	.word	0x4009c000
   802c0:	400a0000 	.word	0x400a0000

000802c4 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   802c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   802c8:	460c      	mov	r4, r1
   802ca:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
   802cc:	b960      	cbnz	r0, 802e8 <_read+0x24>
		return -1;
	}

	for (; len > 0; --len) {
   802ce:	2a00      	cmp	r2, #0
   802d0:	dd0e      	ble.n	802f0 <_read+0x2c>
   802d2:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   802d4:	4e09      	ldr	r6, [pc, #36]	; (802fc <_read+0x38>)
   802d6:	4d0a      	ldr	r5, [pc, #40]	; (80300 <_read+0x3c>)
   802d8:	6830      	ldr	r0, [r6, #0]
   802da:	4621      	mov	r1, r4
   802dc:	682b      	ldr	r3, [r5, #0]
   802de:	4798      	blx	r3
		ptr++;
   802e0:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
   802e2:	42bc      	cmp	r4, r7
   802e4:	d1f8      	bne.n	802d8 <_read+0x14>
   802e6:	e006      	b.n	802f6 <_read+0x32>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
   802e8:	f04f 30ff 	mov.w	r0, #4294967295
   802ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len > 0; --len) {
   802f0:	2000      	movs	r0, #0
   802f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
   802f6:	4640      	mov	r0, r8
	}
	return nChars;
}
   802f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   802fc:	20070b14 	.word	0x20070b14
   80300:	20070b0c 	.word	0x20070b0c

00080304 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len);

int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
   80304:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80308:	460e      	mov	r6, r1
   8030a:	4615      	mov	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   8030c:	3801      	subs	r0, #1
   8030e:	2802      	cmp	r0, #2
   80310:	d80f      	bhi.n	80332 <_write+0x2e>
		return -1;
	}

	for (; len != 0; --len) {
   80312:	b192      	cbz	r2, 8033a <_write+0x36>
   80314:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
   80316:	f8df 803c 	ldr.w	r8, [pc, #60]	; 80354 <_write+0x50>
   8031a:	4f0d      	ldr	r7, [pc, #52]	; (80350 <_write+0x4c>)
   8031c:	f8d8 0000 	ldr.w	r0, [r8]
   80320:	5d31      	ldrb	r1, [r6, r4]
   80322:	683b      	ldr	r3, [r7, #0]
   80324:	4798      	blx	r3
   80326:	2800      	cmp	r0, #0
   80328:	db0a      	blt.n	80340 <_write+0x3c>
			return -1;
		}
		++nChars;
   8032a:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
   8032c:	42a5      	cmp	r5, r4
   8032e:	d1f5      	bne.n	8031c <_write+0x18>
   80330:	e00a      	b.n	80348 <_write+0x44>
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
   80332:	f04f 30ff 	mov.w	r0, #4294967295
   80336:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	}

	for (; len != 0; --len) {
   8033a:	2000      	movs	r0, #0
   8033c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
   80340:	f04f 30ff 	mov.w	r0, #4294967295
   80344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		}
		++nChars;
   80348:	4620      	mov	r0, r4
	}
	return nChars;
}
   8034a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8034e:	bf00      	nop
   80350:	20070b10 	.word	0x20070b10
   80354:	20070b14 	.word	0x20070b14

00080358 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   80358:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   8035a:	23ac      	movs	r3, #172	; 0xac
   8035c:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8035e:	680a      	ldr	r2, [r1, #0]
   80360:	684b      	ldr	r3, [r1, #4]
   80362:	fbb2 f3f3 	udiv	r3, r2, r3
   80366:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   80368:	1e5c      	subs	r4, r3, #1
   8036a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   8036e:	4294      	cmp	r4, r2
   80370:	d80a      	bhi.n	80388 <uart_init+0x30>
		return 1;

	p_uart->UART_BRGR = cd;
   80372:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   80374:	688b      	ldr	r3, [r1, #8]
   80376:	6043      	str	r3, [r0, #4]

	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   80378:	f240 2302 	movw	r3, #514	; 0x202
   8037c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80380:	2350      	movs	r3, #80	; 0x50
   80382:	6003      	str	r3, [r0, #0]

	return 0;
   80384:	2000      	movs	r0, #0
   80386:	e000      	b.n	8038a <uart_init+0x32>

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
		return 1;
   80388:	2001      	movs	r0, #1

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

	return 0;
}
   8038a:	f85d 4b04 	ldr.w	r4, [sp], #4
   8038e:	4770      	bx	lr

00080390 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   80390:	6943      	ldr	r3, [r0, #20]
   80392:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   80396:	bf1a      	itte	ne
   80398:	61c1      	strne	r1, [r0, #28]
	return 0;
   8039a:	2000      	movne	r0, #0
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
		return 1;
   8039c:	2001      	moveq	r0, #1

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
}
   8039e:	4770      	bx	lr

000803a0 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   803a0:	6943      	ldr	r3, [r0, #20]
   803a2:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   803a6:	bf1d      	ittte	ne
   803a8:	6983      	ldrne	r3, [r0, #24]
   803aa:	700b      	strbne	r3, [r1, #0]
	return 0;
   803ac:	2000      	movne	r0, #0
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
		return 1;
   803ae:	2001      	moveq	r0, #1

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
	return 0;
}
   803b0:	4770      	bx	lr
   803b2:	bf00      	nop

000803b4 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   803b4:	6943      	ldr	r3, [r0, #20]
   803b6:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   803ba:	bf1d      	ittte	ne
   803bc:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   803c0:	61c1      	strne	r1, [r0, #28]
	return 0;
   803c2:	2000      	movne	r0, #0
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
		return 1;
   803c4:	2001      	moveq	r0, #1
	}

	p_usart->US_THR = US_THR_TXCHR(c);
	return 0;
}
   803c6:	4770      	bx	lr

000803c8 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   803c8:	6943      	ldr	r3, [r0, #20]
   803ca:	f013 0f01 	tst.w	r3, #1
   803ce:	d005      	beq.n	803dc <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   803d0:	6983      	ldr	r3, [r0, #24]
   803d2:	f3c3 0308 	ubfx	r3, r3, #0, #9
   803d6:	600b      	str	r3, [r1, #0]

	return 0;
   803d8:	2000      	movs	r0, #0
   803da:	4770      	bx	lr
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
		return 1;
   803dc:	2001      	movs	r0, #1

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;

	return 0;
}
   803de:	4770      	bx	lr

000803e0 <USART0_Handler>:
#if SAMD || SAMR21
void USART_HOST_ISR_VECT(uint8_t instance)
#else
USART_HOST_ISR_VECT()
#endif
{
   803e0:	b500      	push	{lr}
   803e2:	b083      	sub	sp, #12
	uint8_t temp;
#if SAMD || SAMR21
	usart_serial_read_packet(&host_uart_module, &temp, 1);
#else
	usart_serial_read_packet(USART_HOST, &temp, 1);
   803e4:	4813      	ldr	r0, [pc, #76]	; (80434 <USART0_Handler+0x54>)
   803e6:	f10d 0107 	add.w	r1, sp, #7
   803ea:	2201      	movs	r2, #1
   803ec:	4b12      	ldr	r3, [pc, #72]	; (80438 <USART0_Handler+0x58>)
   803ee:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i");
   803f0:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   803f2:	f3bf 8f5f 	dmb	sy
#endif

	/* Introducing critical section to avoid buffer corruption. */
	cpu_irq_disable();
   803f6:	2200      	movs	r2, #0
   803f8:	4b10      	ldr	r3, [pc, #64]	; (8043c <USART0_Handler+0x5c>)
   803fa:	701a      	strb	r2, [r3, #0]

	/* The number of data in the receive buffer is incremented and the
	 * buffer is updated. */
	serial_rx_count++;
   803fc:	4b10      	ldr	r3, [pc, #64]	; (80440 <USART0_Handler+0x60>)
   803fe:	781a      	ldrb	r2, [r3, #0]
   80400:	3201      	adds	r2, #1
   80402:	701a      	strb	r2, [r3, #0]

	serial_rx_buf[serial_rx_buf_tail] = temp;
   80404:	4b0f      	ldr	r3, [pc, #60]	; (80444 <USART0_Handler+0x64>)
   80406:	781b      	ldrb	r3, [r3, #0]
   80408:	f89d 1007 	ldrb.w	r1, [sp, #7]
   8040c:	4a0e      	ldr	r2, [pc, #56]	; (80448 <USART0_Handler+0x68>)
   8040e:	54d1      	strb	r1, [r2, r3]

	if ((SERIAL_RX_BUF_SIZE_HOST - 1) == serial_rx_buf_tail) {
   80410:	2b9b      	cmp	r3, #155	; 0x9b
   80412:	d103      	bne.n	8041c <USART0_Handler+0x3c>
		/* Reached the end of buffer, revert back to beginning of
		 * buffer. */
		serial_rx_buf_tail = 0x00;
   80414:	2200      	movs	r2, #0
   80416:	4b0b      	ldr	r3, [pc, #44]	; (80444 <USART0_Handler+0x64>)
   80418:	701a      	strb	r2, [r3, #0]
   8041a:	e002      	b.n	80422 <USART0_Handler+0x42>
	} else {
		serial_rx_buf_tail++;
   8041c:	3301      	adds	r3, #1
   8041e:	4a09      	ldr	r2, [pc, #36]	; (80444 <USART0_Handler+0x64>)
   80420:	7013      	strb	r3, [r2, #0]
	}

	cpu_irq_enable();
   80422:	2201      	movs	r2, #1
   80424:	4b05      	ldr	r3, [pc, #20]	; (8043c <USART0_Handler+0x5c>)
   80426:	701a      	strb	r2, [r3, #0]
   80428:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
   8042c:	b662      	cpsie	i
}
   8042e:	b003      	add	sp, #12
   80430:	f85d fb04 	ldr.w	pc, [sp], #4
   80434:	40098000 	.word	0x40098000
   80438:	00080201 	.word	0x00080201
   8043c:	20070138 	.word	0x20070138
   80440:	20070a5d 	.word	0x20070a5d
   80444:	20070a5c 	.word	0x20070a5c
   80448:	200709c0 	.word	0x200709c0

0008044c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
   8044c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8044e:	b083      	sub	sp, #12
   80450:	4604      	mov	r4, r0
   80452:	460d      	mov	r5, r1
	uint32_t val = 0;
   80454:	2300      	movs	r3, #0
   80456:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80458:	4b1f      	ldr	r3, [pc, #124]	; (804d8 <usart_serial_getchar+0x8c>)
   8045a:	4298      	cmp	r0, r3
   8045c:	d107      	bne.n	8046e <usart_serial_getchar+0x22>
		while (uart_read((Uart*)p_usart, data));
   8045e:	461f      	mov	r7, r3
   80460:	4e1e      	ldr	r6, [pc, #120]	; (804dc <usart_serial_getchar+0x90>)
   80462:	4638      	mov	r0, r7
   80464:	4629      	mov	r1, r5
   80466:	47b0      	blx	r6
   80468:	2800      	cmp	r0, #0
   8046a:	d1fa      	bne.n	80462 <usart_serial_getchar+0x16>
   8046c:	e019      	b.n	804a2 <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   8046e:	4b1c      	ldr	r3, [pc, #112]	; (804e0 <usart_serial_getchar+0x94>)
   80470:	4298      	cmp	r0, r3
   80472:	d109      	bne.n	80488 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
   80474:	461f      	mov	r7, r3
   80476:	4e1b      	ldr	r6, [pc, #108]	; (804e4 <usart_serial_getchar+0x98>)
   80478:	4638      	mov	r0, r7
   8047a:	a901      	add	r1, sp, #4
   8047c:	47b0      	blx	r6
   8047e:	2800      	cmp	r0, #0
   80480:	d1fa      	bne.n	80478 <usart_serial_getchar+0x2c>
		*data = (uint8_t)(val & 0xFF);
   80482:	9b01      	ldr	r3, [sp, #4]
   80484:	702b      	strb	r3, [r5, #0]
   80486:	e019      	b.n	804bc <usart_serial_getchar+0x70>
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80488:	4b17      	ldr	r3, [pc, #92]	; (804e8 <usart_serial_getchar+0x9c>)
   8048a:	4298      	cmp	r0, r3
   8048c:	d109      	bne.n	804a2 <usart_serial_getchar+0x56>
		while (usart_read(p_usart, &val));
   8048e:	461e      	mov	r6, r3
   80490:	4c14      	ldr	r4, [pc, #80]	; (804e4 <usart_serial_getchar+0x98>)
   80492:	4630      	mov	r0, r6
   80494:	a901      	add	r1, sp, #4
   80496:	47a0      	blx	r4
   80498:	2800      	cmp	r0, #0
   8049a:	d1fa      	bne.n	80492 <usart_serial_getchar+0x46>
		*data = (uint8_t)(val & 0xFF);
   8049c:	9b01      	ldr	r3, [sp, #4]
   8049e:	702b      	strb	r3, [r5, #0]
   804a0:	e018      	b.n	804d4 <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   804a2:	4b12      	ldr	r3, [pc, #72]	; (804ec <usart_serial_getchar+0xa0>)
   804a4:	429c      	cmp	r4, r3
   804a6:	d109      	bne.n	804bc <usart_serial_getchar+0x70>
		while (usart_read(p_usart, &val));
   804a8:	461e      	mov	r6, r3
   804aa:	4c0e      	ldr	r4, [pc, #56]	; (804e4 <usart_serial_getchar+0x98>)
   804ac:	4630      	mov	r0, r6
   804ae:	a901      	add	r1, sp, #4
   804b0:	47a0      	blx	r4
   804b2:	2800      	cmp	r0, #0
   804b4:	d1fa      	bne.n	804ac <usart_serial_getchar+0x60>
		*data = (uint8_t)(val & 0xFF);
   804b6:	9b01      	ldr	r3, [sp, #4]
   804b8:	702b      	strb	r3, [r5, #0]
   804ba:	e00b      	b.n	804d4 <usart_serial_getchar+0x88>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   804bc:	4b0c      	ldr	r3, [pc, #48]	; (804f0 <usart_serial_getchar+0xa4>)
   804be:	429c      	cmp	r4, r3
   804c0:	d108      	bne.n	804d4 <usart_serial_getchar+0x88>
		while (usart_read(p_usart, &val));
   804c2:	461e      	mov	r6, r3
   804c4:	4c07      	ldr	r4, [pc, #28]	; (804e4 <usart_serial_getchar+0x98>)
   804c6:	4630      	mov	r0, r6
   804c8:	a901      	add	r1, sp, #4
   804ca:	47a0      	blx	r4
   804cc:	2800      	cmp	r0, #0
   804ce:	d1fa      	bne.n	804c6 <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
   804d0:	9b01      	ldr	r3, [sp, #4]
   804d2:	702b      	strb	r3, [r5, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   804d4:	b003      	add	sp, #12
   804d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   804d8:	400e0800 	.word	0x400e0800
   804dc:	000803a1 	.word	0x000803a1
   804e0:	40098000 	.word	0x40098000
   804e4:	000803c9 	.word	0x000803c9
   804e8:	4009c000 	.word	0x4009c000
   804ec:	400a0000 	.word	0x400a0000
   804f0:	400a4000 	.word	0x400a4000

000804f4 <usart_serial_putchar>:
 *   \retval 1  The character was written.
 *   \retval 0  The function timed out before the USART transmitter became
 * ready to send.
 */
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
   804f4:	b570      	push	{r4, r5, r6, lr}
   804f6:	460c      	mov	r4, r1
#ifdef UART
	if (UART == (Uart*)p_usart) {
   804f8:	4b21      	ldr	r3, [pc, #132]	; (80580 <usart_serial_putchar+0x8c>)
   804fa:	4298      	cmp	r0, r3
   804fc:	d107      	bne.n	8050e <usart_serial_putchar+0x1a>
		while (uart_write((Uart*)p_usart, c)!=0);
   804fe:	461e      	mov	r6, r3
   80500:	4d20      	ldr	r5, [pc, #128]	; (80584 <usart_serial_putchar+0x90>)
   80502:	4630      	mov	r0, r6
   80504:	4621      	mov	r1, r4
   80506:	47a8      	blx	r5
   80508:	2800      	cmp	r0, #0
   8050a:	d1fa      	bne.n	80502 <usart_serial_putchar+0xe>
   8050c:	e02b      	b.n	80566 <usart_serial_putchar+0x72>
		while (usart_write(p_usart, c)!=0);
		return 1;
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   8050e:	4b1e      	ldr	r3, [pc, #120]	; (80588 <usart_serial_putchar+0x94>)
   80510:	4298      	cmp	r0, r3
   80512:	d107      	bne.n	80524 <usart_serial_putchar+0x30>
		while (usart_write(p_usart, c)!=0);
   80514:	461e      	mov	r6, r3
   80516:	4d1d      	ldr	r5, [pc, #116]	; (8058c <usart_serial_putchar+0x98>)
   80518:	4630      	mov	r0, r6
   8051a:	4621      	mov	r1, r4
   8051c:	47a8      	blx	r5
   8051e:	2800      	cmp	r0, #0
   80520:	d1fa      	bne.n	80518 <usart_serial_putchar+0x24>
   80522:	e022      	b.n	8056a <usart_serial_putchar+0x76>
		return 1;
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80524:	4b1a      	ldr	r3, [pc, #104]	; (80590 <usart_serial_putchar+0x9c>)
   80526:	4298      	cmp	r0, r3
   80528:	d107      	bne.n	8053a <usart_serial_putchar+0x46>
		while (usart_write(p_usart, c)!=0);
   8052a:	461e      	mov	r6, r3
   8052c:	4d17      	ldr	r5, [pc, #92]	; (8058c <usart_serial_putchar+0x98>)
   8052e:	4630      	mov	r0, r6
   80530:	4621      	mov	r1, r4
   80532:	47a8      	blx	r5
   80534:	2800      	cmp	r0, #0
   80536:	d1fa      	bne.n	8052e <usart_serial_putchar+0x3a>
   80538:	e019      	b.n	8056e <usart_serial_putchar+0x7a>
		return 1;
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   8053a:	4b16      	ldr	r3, [pc, #88]	; (80594 <usart_serial_putchar+0xa0>)
   8053c:	4298      	cmp	r0, r3
   8053e:	d107      	bne.n	80550 <usart_serial_putchar+0x5c>
		while (usart_write(p_usart, c)!=0);
   80540:	461e      	mov	r6, r3
   80542:	4d12      	ldr	r5, [pc, #72]	; (8058c <usart_serial_putchar+0x98>)
   80544:	4630      	mov	r0, r6
   80546:	4621      	mov	r1, r4
   80548:	47a8      	blx	r5
   8054a:	2800      	cmp	r0, #0
   8054c:	d1fa      	bne.n	80544 <usart_serial_putchar+0x50>
   8054e:	e010      	b.n	80572 <usart_serial_putchar+0x7e>
		return 1;
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80550:	4b11      	ldr	r3, [pc, #68]	; (80598 <usart_serial_putchar+0xa4>)
   80552:	4298      	cmp	r0, r3
   80554:	d10f      	bne.n	80576 <usart_serial_putchar+0x82>
		while (usart_write(p_usart, c)!=0);
   80556:	461e      	mov	r6, r3
   80558:	4d0c      	ldr	r5, [pc, #48]	; (8058c <usart_serial_putchar+0x98>)
   8055a:	4630      	mov	r0, r6
   8055c:	4621      	mov	r1, r4
   8055e:	47a8      	blx	r5
   80560:	2800      	cmp	r0, #0
   80562:	d1fa      	bne.n	8055a <usart_serial_putchar+0x66>
   80564:	e009      	b.n	8057a <usart_serial_putchar+0x86>
static inline int usart_serial_putchar(usart_if p_usart, const uint8_t c)
{
#ifdef UART
	if (UART == (Uart*)p_usart) {
		while (uart_write((Uart*)p_usart, c)!=0);
		return 1;
   80566:	2001      	movs	r0, #1
   80568:	bd70      	pop	{r4, r5, r6, pc}
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   8056a:	2001      	movs	r0, #1
   8056c:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   8056e:	2001      	movs	r0, #1
   80570:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   80572:	2001      	movs	r0, #1
   80574:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
	}
# endif
#endif /* ifdef USART */

	return 0;
   80576:	2000      	movs	r0, #0
   80578:	bd70      	pop	{r4, r5, r6, pc}
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
		while (usart_write(p_usart, c)!=0);
		return 1;
   8057a:	2001      	movs	r0, #1
	}
# endif
#endif /* ifdef USART */

	return 0;
}
   8057c:	bd70      	pop	{r4, r5, r6, pc}
   8057e:	bf00      	nop
   80580:	400e0800 	.word	0x400e0800
   80584:	00080391 	.word	0x00080391
   80588:	40098000 	.word	0x40098000
   8058c:	000803b5 	.word	0x000803b5
   80590:	4009c000 	.word	0x4009c000
   80594:	400a0000 	.word	0x400a0000
   80598:	400a4000 	.word	0x400a4000

0008059c <configureConsole>:
#include "conf_board.h"
#include "consoleFunctions.h"

int configureConsole(void)
/* Enables feedback through the USB-cable back to terminal within Atmel Studio */
{
   8059c:	b530      	push	{r4, r5, lr}
   8059e:	b085      	sub	sp, #20
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   805a0:	2008      	movs	r0, #8
   805a2:	4d13      	ldr	r5, [pc, #76]	; (805f0 <configureConsole+0x54>)
   805a4:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   805a6:	4c13      	ldr	r4, [pc, #76]	; (805f4 <configureConsole+0x58>)
   805a8:	4b13      	ldr	r3, [pc, #76]	; (805f8 <configureConsole+0x5c>)
   805aa:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   805ac:	4a13      	ldr	r2, [pc, #76]	; (805fc <configureConsole+0x60>)
   805ae:	4b14      	ldr	r3, [pc, #80]	; (80600 <configureConsole+0x64>)
   805b0:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   805b2:	4a14      	ldr	r2, [pc, #80]	; (80604 <configureConsole+0x68>)
   805b4:	4b14      	ldr	r3, [pc, #80]	; (80608 <configureConsole+0x6c>)
   805b6:	601a      	str	r2, [r3, #0]
static inline void usart_serial_init(usart_if p_usart,
		usart_serial_options_t *opt)
{
#if ((!SAM4L) && (!SAMG55))
	sam_uart_opt_t uart_settings;
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   805b8:	4b14      	ldr	r3, [pc, #80]	; (8060c <configureConsole+0x70>)
   805ba:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   805bc:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   805c0:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   805c2:	f44f 6300 	mov.w	r3, #2048	; 0x800
   805c6:	9303      	str	r3, [sp, #12]
   805c8:	2008      	movs	r0, #8
   805ca:	47a8      	blx	r5
	
#ifdef UART
	if (UART == (Uart*)p_usart) {
		sysclk_enable_peripheral_clock(ID_UART);
		/* Configure UART */
		uart_init((Uart*)p_usart, &uart_settings);
   805cc:	4620      	mov	r0, r4
   805ce:	a901      	add	r1, sp, #4
   805d0:	4b0f      	ldr	r3, [pc, #60]	; (80610 <configureConsole+0x74>)
   805d2:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   805d4:	4d0f      	ldr	r5, [pc, #60]	; (80614 <configureConsole+0x78>)
   805d6:	682b      	ldr	r3, [r5, #0]
   805d8:	6898      	ldr	r0, [r3, #8]
   805da:	2100      	movs	r1, #0
   805dc:	4c0e      	ldr	r4, [pc, #56]	; (80618 <configureConsole+0x7c>)
   805de:	47a0      	blx	r4
	setbuf(stdin, NULL);
   805e0:	682b      	ldr	r3, [r5, #0]
   805e2:	6858      	ldr	r0, [r3, #4]
   805e4:	2100      	movs	r1, #0
   805e6:	47a0      	blx	r4
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	
	/* printf("Console ready\n"); */
	return 0;
   805e8:	2000      	movs	r0, #0
   805ea:	b005      	add	sp, #20
   805ec:	bd30      	pop	{r4, r5, pc}
   805ee:	bf00      	nop
   805f0:	00080af5 	.word	0x00080af5
   805f4:	400e0800 	.word	0x400e0800
   805f8:	20070b14 	.word	0x20070b14
   805fc:	000804f5 	.word	0x000804f5
   80600:	20070b10 	.word	0x20070b10
   80604:	0008044d 	.word	0x0008044d
   80608:	20070b0c 	.word	0x20070b0c
   8060c:	0501bd00 	.word	0x0501bd00
   80610:	00080359 	.word	0x00080359
   80614:	20070568 	.word	0x20070568
   80618:	00080d81 	.word	0x00080d81

0008061c <pin12_edge_handler>:
	NVIC_EnableIRQ(PIOB_IRQn);
	

}

void pin12_edge_handler(const uint32_t id, const uint32_t index){
   8061c:	b508      	push	{r3, lr}
	if (pio_get(PIOC, PIO_TYPE_PIO_INPUT, PIO_PC12)){
   8061e:	4806      	ldr	r0, [pc, #24]	; (80638 <pin12_edge_handler+0x1c>)
   80620:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   80624:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   80628:	4b04      	ldr	r3, [pc, #16]	; (8063c <pin12_edge_handler+0x20>)
   8062a:	4798      	blx	r3
   8062c:	b110      	cbz	r0, 80634 <pin12_edge_handler+0x18>
		printf("pin51");
   8062e:	4804      	ldr	r0, [pc, #16]	; (80640 <pin12_edge_handler+0x24>)
   80630:	4b04      	ldr	r3, [pc, #16]	; (80644 <pin12_edge_handler+0x28>)
   80632:	4798      	blx	r3
   80634:	bd08      	pop	{r3, pc}
   80636:	bf00      	nop
   80638:	400e1200 	.word	0x400e1200
   8063c:	000807a9 	.word	0x000807a9
   80640:	00083c10 	.word	0x00083c10
   80644:	00080cc5 	.word	0x00080cc5

00080648 <pin14_edge_handler>:
	}
	
	
}
void pin14_edge_handler(const uint32_t id, const uint32_t index){
   80648:	b508      	push	{r3, lr}
	if (pio_get(PIOB, PIO_TYPE_PIO_INPUT, PIO_PB14)){
   8064a:	4806      	ldr	r0, [pc, #24]	; (80664 <pin14_edge_handler+0x1c>)
   8064c:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
   80650:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   80654:	4b04      	ldr	r3, [pc, #16]	; (80668 <pin14_edge_handler+0x20>)
   80656:	4798      	blx	r3
   80658:	b110      	cbz	r0, 80660 <pin14_edge_handler+0x18>
			printf("pin 53");
   8065a:	4804      	ldr	r0, [pc, #16]	; (8066c <pin14_edge_handler+0x24>)
   8065c:	4b04      	ldr	r3, [pc, #16]	; (80670 <pin14_edge_handler+0x28>)
   8065e:	4798      	blx	r3
   80660:	bd08      	pop	{r3, pc}
   80662:	bf00      	nop
   80664:	400e1000 	.word	0x400e1000
   80668:	000807a9 	.word	0x000807a9
   8066c:	00083c18 	.word	0x00083c18
   80670:	00080cc5 	.word	0x00080cc5

00080674 <configInterrupts>:
#include "consoleFunctions.h"




void configInterrupts(void){
   80674:	b570      	push	{r4, r5, r6, lr}
   80676:	b082      	sub	sp, #8
	printf("config");
   80678:	481d      	ldr	r0, [pc, #116]	; (806f0 <configInterrupts+0x7c>)
   8067a:	4b1e      	ldr	r3, [pc, #120]	; (806f4 <configInterrupts+0x80>)
   8067c:	4798      	blx	r3
	pmc_set_writeprotect(0);
   8067e:	2000      	movs	r0, #0
   80680:	4b1d      	ldr	r3, [pc, #116]	; (806f8 <configInterrupts+0x84>)
   80682:	4798      	blx	r3
	//Enable the module clock to the PIOB peripheral
	pmc_enable_periph_clk(ID_PIOB);
   80684:	200c      	movs	r0, #12
   80686:	4c1d      	ldr	r4, [pc, #116]	; (806fc <configInterrupts+0x88>)
   80688:	47a0      	blx	r4
	//Enable the module clock to the PIOC peripheral
	pmc_enable_periph_clk(ID_PIOC);
   8068a:	200d      	movs	r0, #13
   8068c:	47a0      	blx	r4
	
		//test
		
		
	//Set pin 12 direction on PIOC as input, with pullup
	pio_set_input(PIOC,PIO_PC12,PIO_PULLUP);
   8068e:	4d1c      	ldr	r5, [pc, #112]	; (80700 <configInterrupts+0x8c>)
   80690:	4628      	mov	r0, r5
   80692:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   80696:	2201      	movs	r2, #1
   80698:	4e1a      	ldr	r6, [pc, #104]	; (80704 <configInterrupts+0x90>)
   8069a:	47b0      	blx	r6
	//Set pin 14 direction on PIOB as input, with pullup
	pio_set_input(PIOB,PIO_PB14,PIO_PULLUP);
   8069c:	4c1a      	ldr	r4, [pc, #104]	; (80708 <configInterrupts+0x94>)
   8069e:	4620      	mov	r0, r4
   806a0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
   806a4:	2201      	movs	r2, #1
   806a6:	47b0      	blx	r6
	//Configure the input pin 12 interrupt mode and handler
	pio_handler_set(PIOC, ID_PIOC, PIO_PC12, PIO_IT_EDGE, pin12_edge_handler);
   806a8:	4b18      	ldr	r3, [pc, #96]	; (8070c <configInterrupts+0x98>)
   806aa:	9300      	str	r3, [sp, #0]
   806ac:	4628      	mov	r0, r5
   806ae:	210d      	movs	r1, #13
   806b0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   806b4:	2340      	movs	r3, #64	; 0x40
   806b6:	4e16      	ldr	r6, [pc, #88]	; (80710 <configInterrupts+0x9c>)
   806b8:	47b0      	blx	r6
	//Configure the input pin 14 interrupt mode and handler
	pio_handler_set(PIOB, ID_PIOB, PIO_PB14, PIO_IT_EDGE, pin14_edge_handler);
   806ba:	4b16      	ldr	r3, [pc, #88]	; (80714 <configInterrupts+0xa0>)
   806bc:	9300      	str	r3, [sp, #0]
   806be:	4620      	mov	r0, r4
   806c0:	210c      	movs	r1, #12
   806c2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   806c6:	2340      	movs	r3, #64	; 0x40
   806c8:	47b0      	blx	r6
	//Enable the interrupt for the configured input pin 12
	pio_enable_interrupt(PIOC,PIO_PC12);
   806ca:	4628      	mov	r0, r5
   806cc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   806d0:	4d11      	ldr	r5, [pc, #68]	; (80718 <configInterrupts+0xa4>)
   806d2:	47a8      	blx	r5
	//Enable the interrupt for the configured input pin 12
	pio_enable_interrupt(PIOB,PIO_PB14);
   806d4:	4620      	mov	r0, r4
   806d6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
   806da:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   806dc:	4b0f      	ldr	r3, [pc, #60]	; (8071c <configInterrupts+0xa8>)
   806de:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   806e2:	601a      	str	r2, [r3, #0]
   806e4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
   806e8:	601a      	str	r2, [r3, #0]
	NVIC_EnableIRQ(PIOC_IRQn);
	//Enable interrupt handling from the PIOB module:
	NVIC_EnableIRQ(PIOB_IRQn);
	

}
   806ea:	b002      	add	sp, #8
   806ec:	bd70      	pop	{r4, r5, r6, pc}
   806ee:	bf00      	nop
   806f0:	00083c20 	.word	0x00083c20
   806f4:	00080cc5 	.word	0x00080cc5
   806f8:	00080b4d 	.word	0x00080b4d
   806fc:	00080af5 	.word	0x00080af5
   80700:	400e1200 	.word	0x400e1200
   80704:	00080801 	.word	0x00080801
   80708:	400e1000 	.word	0x400e1000
   8070c:	0008061d 	.word	0x0008061d
   80710:	00080a69 	.word	0x00080a69
   80714:	00080649 	.word	0x00080649
   80718:	0008088d 	.word	0x0008088d
   8071c:	e000e100 	.word	0xe000e100

00080720 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80720:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80722:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80726:	4b17      	ldr	r3, [pc, #92]	; (80784 <board_init+0x64>)
   80728:	605a      	str	r2, [r3, #4]
   8072a:	200b      	movs	r0, #11
   8072c:	4c16      	ldr	r4, [pc, #88]	; (80788 <board_init+0x68>)
   8072e:	47a0      	blx	r4
   80730:	200c      	movs	r0, #12
   80732:	47a0      	blx	r4
   80734:	200d      	movs	r0, #13
   80736:	47a0      	blx	r4
   80738:	200e      	movs	r0, #14
   8073a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8073c:	203b      	movs	r0, #59	; 0x3b
   8073e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80742:	4c12      	ldr	r4, [pc, #72]	; (8078c <board_init+0x6c>)
   80744:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80746:	2055      	movs	r0, #85	; 0x55
   80748:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8074c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8074e:	2056      	movs	r0, #86	; 0x56
   80750:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80754:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80756:	2068      	movs	r0, #104	; 0x68
   80758:	490d      	ldr	r1, [pc, #52]	; (80790 <board_init+0x70>)
   8075a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   8075c:	205c      	movs	r0, #92	; 0x5c
   8075e:	490d      	ldr	r1, [pc, #52]	; (80794 <board_init+0x74>)
   80760:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80762:	480d      	ldr	r0, [pc, #52]	; (80798 <board_init+0x78>)
   80764:	f44f 7140 	mov.w	r1, #768	; 0x300
   80768:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8076c:	4b0b      	ldr	r3, [pc, #44]	; (8079c <board_init+0x7c>)
   8076e:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   80770:	202b      	movs	r0, #43	; 0x2b
   80772:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80776:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80778:	202a      	movs	r0, #42	; 0x2a
   8077a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8077e:	47a0      	blx	r4
   80780:	bd10      	pop	{r4, pc}
   80782:	bf00      	nop
   80784:	400e1a50 	.word	0x400e1a50
   80788:	00080af5 	.word	0x00080af5
   8078c:	0008089d 	.word	0x0008089d
   80790:	28000079 	.word	0x28000079
   80794:	28000001 	.word	0x28000001
   80798:	400e0e00 	.word	0x400e0e00
   8079c:	00080971 	.word	0x00080971

000807a0 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
   807a0:	6301      	str	r1, [r0, #48]	; 0x30
   807a2:	4770      	bx	lr

000807a4 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
   807a4:	6341      	str	r1, [r0, #52]	; 0x34
   807a6:	4770      	bx	lr

000807a8 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
   807a8:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
   807ac:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
		ul_reg = p_pio->PIO_ODSR;
   807b0:	bf0c      	ite	eq
   807b2:	6b83      	ldreq	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
   807b4:	6bc3      	ldrne	r3, [r0, #60]	; 0x3c
	}

	if ((ul_reg & ul_mask) == 0) {
   807b6:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
   807b8:	bf0c      	ite	eq
   807ba:	2000      	moveq	r0, #0
   807bc:	2001      	movne	r0, #1
   807be:	4770      	bx	lr

000807c0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   807c0:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   807c2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   807c6:	d016      	beq.n	807f6 <pio_set_peripheral+0x36>
   807c8:	d804      	bhi.n	807d4 <pio_set_peripheral+0x14>
   807ca:	b1c1      	cbz	r1, 807fe <pio_set_peripheral+0x3e>
   807cc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   807d0:	d00a      	beq.n	807e8 <pio_set_peripheral+0x28>
   807d2:	e013      	b.n	807fc <pio_set_peripheral+0x3c>
   807d4:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   807d8:	d011      	beq.n	807fe <pio_set_peripheral+0x3e>
   807da:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   807de:	d00e      	beq.n	807fe <pio_set_peripheral+0x3e>
   807e0:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   807e4:	d10a      	bne.n	807fc <pio_set_peripheral+0x3c>
   807e6:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   807e8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   807ea:	6f01      	ldr	r1, [r0, #112]	; 0x70
   807ec:	400b      	ands	r3, r1
   807ee:	ea23 0302 	bic.w	r3, r3, r2
   807f2:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   807f4:	e002      	b.n	807fc <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   807f6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   807f8:	4313      	orrs	r3, r2
   807fa:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   807fc:	6042      	str	r2, [r0, #4]
   807fe:	4770      	bx	lr

00080800 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80800:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80802:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80806:	bf14      	ite	ne
   80808:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   8080a:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8080c:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80810:	bf14      	ite	ne
   80812:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80814:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80816:	f012 0f02 	tst.w	r2, #2
   8081a:	d002      	beq.n	80822 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   8081c:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80820:	e004      	b.n	8082c <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80822:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80826:	bf18      	it	ne
   80828:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   8082c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   8082e:	6001      	str	r1, [r0, #0]
   80830:	4770      	bx	lr
   80832:	bf00      	nop

00080834 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80834:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80836:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80838:	9c01      	ldr	r4, [sp, #4]
   8083a:	b10c      	cbz	r4, 80840 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   8083c:	6641      	str	r1, [r0, #100]	; 0x64
   8083e:	e000      	b.n	80842 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80840:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80842:	b10b      	cbz	r3, 80848 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80844:	6501      	str	r1, [r0, #80]	; 0x50
   80846:	e000      	b.n	8084a <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80848:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   8084a:	b10a      	cbz	r2, 80850 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   8084c:	6301      	str	r1, [r0, #48]	; 0x30
   8084e:	e000      	b.n	80852 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80850:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80852:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80854:	6001      	str	r1, [r0, #0]
}
   80856:	f85d 4b04 	ldr.w	r4, [sp], #4
   8085a:	4770      	bx	lr

0008085c <pio_configure_interrupt>:
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
   8085c:	f012 0f10 	tst.w	r2, #16
   80860:	d010      	beq.n	80884 <pio_configure_interrupt+0x28>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
   80862:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
   80866:	f012 0f20 	tst.w	r2, #32
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
   8086a:	bf14      	ite	ne
   8086c:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
   80870:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
   80874:	f012 0f40 	tst.w	r2, #64	; 0x40
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
   80878:	bf14      	ite	ne
   8087a:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
		} else {
			/* Level select */
			p_pio->PIO_LSR = ul_mask;
   8087e:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
   80882:	4770      	bx	lr
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
   80884:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
   80888:	4770      	bx	lr
   8088a:	bf00      	nop

0008088c <pio_enable_interrupt>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_ISR;
   8088c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
	p_pio->PIO_IER = ul_mask;
   8088e:	6401      	str	r1, [r0, #64]	; 0x40
   80890:	4770      	bx	lr
   80892:	bf00      	nop

00080894 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80894:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80896:	4770      	bx	lr

00080898 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80898:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8089a:	4770      	bx	lr

0008089c <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   8089c:	b570      	push	{r4, r5, r6, lr}
   8089e:	b082      	sub	sp, #8
   808a0:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   808a2:	0944      	lsrs	r4, r0, #5
   808a4:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   808a8:	f204 7407 	addw	r4, r4, #1799	; 0x707
   808ac:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   808ae:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   808b2:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   808b6:	d030      	beq.n	8091a <pio_configure_pin+0x7e>
   808b8:	d806      	bhi.n	808c8 <pio_configure_pin+0x2c>
   808ba:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   808be:	d00a      	beq.n	808d6 <pio_configure_pin+0x3a>
   808c0:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   808c4:	d018      	beq.n	808f8 <pio_configure_pin+0x5c>
   808c6:	e049      	b.n	8095c <pio_configure_pin+0xc0>
   808c8:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   808cc:	d030      	beq.n	80930 <pio_configure_pin+0x94>
   808ce:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   808d2:	d02d      	beq.n	80930 <pio_configure_pin+0x94>
   808d4:	e042      	b.n	8095c <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   808d6:	f000 001f 	and.w	r0, r0, #31
   808da:	2401      	movs	r4, #1
   808dc:	4084      	lsls	r4, r0
   808de:	4630      	mov	r0, r6
   808e0:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   808e4:	4622      	mov	r2, r4
   808e6:	4b1f      	ldr	r3, [pc, #124]	; (80964 <pio_configure_pin+0xc8>)
   808e8:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   808ea:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   808ee:	bf14      	ite	ne
   808f0:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   808f2:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   808f4:	2001      	movs	r0, #1
   808f6:	e032      	b.n	8095e <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   808f8:	f000 001f 	and.w	r0, r0, #31
   808fc:	2401      	movs	r4, #1
   808fe:	4084      	lsls	r4, r0
   80900:	4630      	mov	r0, r6
   80902:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80906:	4622      	mov	r2, r4
   80908:	4b16      	ldr	r3, [pc, #88]	; (80964 <pio_configure_pin+0xc8>)
   8090a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   8090c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80910:	bf14      	ite	ne
   80912:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80914:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80916:	2001      	movs	r0, #1
   80918:	e021      	b.n	8095e <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   8091a:	f000 011f 	and.w	r1, r0, #31
   8091e:	2401      	movs	r4, #1
   80920:	4630      	mov	r0, r6
   80922:	fa04 f101 	lsl.w	r1, r4, r1
   80926:	462a      	mov	r2, r5
   80928:	4b0f      	ldr	r3, [pc, #60]	; (80968 <pio_configure_pin+0xcc>)
   8092a:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   8092c:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   8092e:	e016      	b.n	8095e <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80930:	f000 011f 	and.w	r1, r0, #31
   80934:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80936:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   8093a:	ea05 0304 	and.w	r3, r5, r4
   8093e:	9300      	str	r3, [sp, #0]
   80940:	4630      	mov	r0, r6
   80942:	fa04 f101 	lsl.w	r1, r4, r1
   80946:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8094a:	bf14      	ite	ne
   8094c:	2200      	movne	r2, #0
   8094e:	2201      	moveq	r2, #1
   80950:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80954:	4d05      	ldr	r5, [pc, #20]	; (8096c <pio_configure_pin+0xd0>)
   80956:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80958:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   8095a:	e000      	b.n	8095e <pio_configure_pin+0xc2>

	default:
		return 0;
   8095c:	2000      	movs	r0, #0
	}

	return 1;
}
   8095e:	b002      	add	sp, #8
   80960:	bd70      	pop	{r4, r5, r6, pc}
   80962:	bf00      	nop
   80964:	000807c1 	.word	0x000807c1
   80968:	00080801 	.word	0x00080801
   8096c:	00080835 	.word	0x00080835

00080970 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80970:	b5f0      	push	{r4, r5, r6, r7, lr}
   80972:	b083      	sub	sp, #12
   80974:	4607      	mov	r7, r0
   80976:	460e      	mov	r6, r1
   80978:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   8097a:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   8097e:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80982:	d026      	beq.n	809d2 <pio_configure_pin_group+0x62>
   80984:	d806      	bhi.n	80994 <pio_configure_pin_group+0x24>
   80986:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   8098a:	d00a      	beq.n	809a2 <pio_configure_pin_group+0x32>
   8098c:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80990:	d013      	beq.n	809ba <pio_configure_pin_group+0x4a>
   80992:	e034      	b.n	809fe <pio_configure_pin_group+0x8e>
   80994:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80998:	d01f      	beq.n	809da <pio_configure_pin_group+0x6a>
   8099a:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   8099e:	d01c      	beq.n	809da <pio_configure_pin_group+0x6a>
   809a0:	e02d      	b.n	809fe <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   809a2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809a6:	4632      	mov	r2, r6
   809a8:	4b16      	ldr	r3, [pc, #88]	; (80a04 <pio_configure_pin_group+0x94>)
   809aa:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809ac:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809b0:	bf14      	ite	ne
   809b2:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809b4:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809b6:	2001      	movs	r0, #1
   809b8:	e022      	b.n	80a00 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   809ba:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   809be:	4632      	mov	r2, r6
   809c0:	4b10      	ldr	r3, [pc, #64]	; (80a04 <pio_configure_pin_group+0x94>)
   809c2:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809c4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809c8:	bf14      	ite	ne
   809ca:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809cc:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809ce:	2001      	movs	r0, #1
   809d0:	e016      	b.n	80a00 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   809d2:	4b0d      	ldr	r3, [pc, #52]	; (80a08 <pio_configure_pin_group+0x98>)
   809d4:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   809d6:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   809d8:	e012      	b.n	80a00 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   809da:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   809de:	f005 0301 	and.w	r3, r5, #1
   809e2:	9300      	str	r3, [sp, #0]
   809e4:	4638      	mov	r0, r7
   809e6:	4631      	mov	r1, r6
   809e8:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   809ec:	bf14      	ite	ne
   809ee:	2200      	movne	r2, #0
   809f0:	2201      	moveq	r2, #1
   809f2:	f3c5 0380 	ubfx	r3, r5, #2, #1
   809f6:	4c05      	ldr	r4, [pc, #20]	; (80a0c <pio_configure_pin_group+0x9c>)
   809f8:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   809fa:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   809fc:	e000      	b.n	80a00 <pio_configure_pin_group+0x90>

	default:
		return 0;
   809fe:	2000      	movs	r0, #0
	}

	return 1;
}
   80a00:	b003      	add	sp, #12
   80a02:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80a04:	000807c1 	.word	0x000807c1
   80a08:	00080801 	.word	0x00080801
   80a0c:	00080835 	.word	0x00080835

00080a10 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80a10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80a14:	4604      	mov	r4, r0
   80a16:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80a18:	4b10      	ldr	r3, [pc, #64]	; (80a5c <pio_handler_process+0x4c>)
   80a1a:	4798      	blx	r3
   80a1c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80a1e:	4620      	mov	r0, r4
   80a20:	4b0f      	ldr	r3, [pc, #60]	; (80a60 <pio_handler_process+0x50>)
   80a22:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80a24:	4005      	ands	r5, r0
   80a26:	d017      	beq.n	80a58 <pio_handler_process+0x48>
   80a28:	4f0e      	ldr	r7, [pc, #56]	; (80a64 <pio_handler_process+0x54>)
   80a2a:	f107 040c 	add.w	r4, r7, #12
   80a2e:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80a30:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80a34:	42b3      	cmp	r3, r6
   80a36:	d10a      	bne.n	80a4e <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80a38:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80a3c:	4229      	tst	r1, r5
   80a3e:	d006      	beq.n	80a4e <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80a40:	6823      	ldr	r3, [r4, #0]
   80a42:	4630      	mov	r0, r6
   80a44:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80a46:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80a4a:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80a4e:	42bc      	cmp	r4, r7
   80a50:	d002      	beq.n	80a58 <pio_handler_process+0x48>
   80a52:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80a54:	2d00      	cmp	r5, #0
   80a56:	d1eb      	bne.n	80a30 <pio_handler_process+0x20>
   80a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80a5c:	00080895 	.word	0x00080895
   80a60:	00080899 	.word	0x00080899
   80a64:	20070a64 	.word	0x20070a64

00080a68 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
   80a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
   80a6a:	4c0b      	ldr	r4, [pc, #44]	; (80a98 <pio_handler_set+0x30>)
   80a6c:	6824      	ldr	r4, [r4, #0]
   80a6e:	2c06      	cmp	r4, #6
   80a70:	d810      	bhi.n	80a94 <pio_handler_set+0x2c>
		return 1;

	/* Define new source */
	pSource = &(gs_interrupt_sources[gs_ul_nb_sources]);
   80a72:	4f0a      	ldr	r7, [pc, #40]	; (80a9c <pio_handler_set+0x34>)
   80a74:	0126      	lsls	r6, r4, #4
   80a76:	19bd      	adds	r5, r7, r6
	pSource->id = ul_id;
   80a78:	51b9      	str	r1, [r7, r6]
	pSource->mask = ul_mask;
   80a7a:	606a      	str	r2, [r5, #4]
	pSource->attr = ul_attr;
   80a7c:	60ab      	str	r3, [r5, #8]
	pSource->handler = p_handler;
   80a7e:	9906      	ldr	r1, [sp, #24]
   80a80:	60e9      	str	r1, [r5, #12]
	gs_ul_nb_sources++;
   80a82:	3401      	adds	r4, #1
   80a84:	4904      	ldr	r1, [pc, #16]	; (80a98 <pio_handler_set+0x30>)
   80a86:	600c      	str	r4, [r1, #0]

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
   80a88:	4611      	mov	r1, r2
   80a8a:	461a      	mov	r2, r3
   80a8c:	4b04      	ldr	r3, [pc, #16]	; (80aa0 <pio_handler_set+0x38>)
   80a8e:	4798      	blx	r3

	return 0;
   80a90:	2000      	movs	r0, #0
   80a92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
		return 1;
   80a94:	2001      	movs	r0, #1

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);

	return 0;
}
   80a96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80a98:	20070a60 	.word	0x20070a60
   80a9c:	20070a64 	.word	0x20070a64
   80aa0:	0008085d 	.word	0x0008085d

00080aa4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80aa4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80aa6:	4802      	ldr	r0, [pc, #8]	; (80ab0 <PIOA_Handler+0xc>)
   80aa8:	210b      	movs	r1, #11
   80aaa:	4b02      	ldr	r3, [pc, #8]	; (80ab4 <PIOA_Handler+0x10>)
   80aac:	4798      	blx	r3
   80aae:	bd08      	pop	{r3, pc}
   80ab0:	400e0e00 	.word	0x400e0e00
   80ab4:	00080a11 	.word	0x00080a11

00080ab8 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80ab8:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80aba:	4802      	ldr	r0, [pc, #8]	; (80ac4 <PIOB_Handler+0xc>)
   80abc:	210c      	movs	r1, #12
   80abe:	4b02      	ldr	r3, [pc, #8]	; (80ac8 <PIOB_Handler+0x10>)
   80ac0:	4798      	blx	r3
   80ac2:	bd08      	pop	{r3, pc}
   80ac4:	400e1000 	.word	0x400e1000
   80ac8:	00080a11 	.word	0x00080a11

00080acc <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80acc:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80ace:	4802      	ldr	r0, [pc, #8]	; (80ad8 <PIOC_Handler+0xc>)
   80ad0:	210d      	movs	r1, #13
   80ad2:	4b02      	ldr	r3, [pc, #8]	; (80adc <PIOC_Handler+0x10>)
   80ad4:	4798      	blx	r3
   80ad6:	bd08      	pop	{r3, pc}
   80ad8:	400e1200 	.word	0x400e1200
   80adc:	00080a11 	.word	0x00080a11

00080ae0 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80ae0:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80ae2:	4802      	ldr	r0, [pc, #8]	; (80aec <PIOD_Handler+0xc>)
   80ae4:	210e      	movs	r1, #14
   80ae6:	4b02      	ldr	r3, [pc, #8]	; (80af0 <PIOD_Handler+0x10>)
   80ae8:	4798      	blx	r3
   80aea:	bd08      	pop	{r3, pc}
   80aec:	400e1400 	.word	0x400e1400
   80af0:	00080a11 	.word	0x00080a11

00080af4 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80af4:	282c      	cmp	r0, #44	; 0x2c
   80af6:	d820      	bhi.n	80b3a <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80af8:	281f      	cmp	r0, #31
   80afa:	d80d      	bhi.n	80b18 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80afc:	4b12      	ldr	r3, [pc, #72]	; (80b48 <pmc_enable_periph_clk+0x54>)
   80afe:	699a      	ldr	r2, [r3, #24]
   80b00:	2301      	movs	r3, #1
   80b02:	4083      	lsls	r3, r0
   80b04:	401a      	ands	r2, r3
   80b06:	4293      	cmp	r3, r2
   80b08:	d019      	beq.n	80b3e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80b0a:	2301      	movs	r3, #1
   80b0c:	fa03 f000 	lsl.w	r0, r3, r0
   80b10:	4b0d      	ldr	r3, [pc, #52]	; (80b48 <pmc_enable_periph_clk+0x54>)
   80b12:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80b14:	2000      	movs	r0, #0
   80b16:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80b18:	4b0b      	ldr	r3, [pc, #44]	; (80b48 <pmc_enable_periph_clk+0x54>)
   80b1a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
   80b1e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80b20:	2301      	movs	r3, #1
   80b22:	4083      	lsls	r3, r0
   80b24:	401a      	ands	r2, r3
   80b26:	4293      	cmp	r3, r2
   80b28:	d00b      	beq.n	80b42 <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80b2a:	2301      	movs	r3, #1
   80b2c:	fa03 f000 	lsl.w	r0, r3, r0
   80b30:	4b05      	ldr	r3, [pc, #20]	; (80b48 <pmc_enable_periph_clk+0x54>)
   80b32:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80b36:	2000      	movs	r0, #0
   80b38:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80b3a:	2001      	movs	r0, #1
   80b3c:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80b3e:	2000      	movs	r0, #0
   80b40:	4770      	bx	lr
   80b42:	2000      	movs	r0, #0
}
   80b44:	4770      	bx	lr
   80b46:	bf00      	nop
   80b48:	400e0600 	.word	0x400e0600

00080b4c <pmc_set_writeprotect>:
 *
 * \param ul_enable 1 to enable, 0 to disable.
 */
void pmc_set_writeprotect(uint32_t ul_enable)
{
	if (ul_enable) {
   80b4c:	b120      	cbz	r0, 80b58 <pmc_set_writeprotect+0xc>
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD | PMC_WPMR_WPEN;
   80b4e:	4a05      	ldr	r2, [pc, #20]	; (80b64 <pmc_set_writeprotect+0x18>)
   80b50:	4b05      	ldr	r3, [pc, #20]	; (80b68 <pmc_set_writeprotect+0x1c>)
   80b52:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80b56:	4770      	bx	lr
	} else {
		PMC->PMC_WPMR = PMC_WPMR_WPKEY_PASSWD;
   80b58:	4a04      	ldr	r2, [pc, #16]	; (80b6c <pmc_set_writeprotect+0x20>)
   80b5a:	4b03      	ldr	r3, [pc, #12]	; (80b68 <pmc_set_writeprotect+0x1c>)
   80b5c:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
   80b60:	4770      	bx	lr
   80b62:	bf00      	nop
   80b64:	504d4301 	.word	0x504d4301
   80b68:	400e0600 	.word	0x400e0600
   80b6c:	504d4300 	.word	0x504d4300

00080b70 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80b70:	e7fe      	b.n	80b70 <Dummy_Handler>
   80b72:	bf00      	nop

00080b74 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80b74:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80b76:	4b1e      	ldr	r3, [pc, #120]	; (80bf0 <Reset_Handler+0x7c>)
   80b78:	4a1e      	ldr	r2, [pc, #120]	; (80bf4 <Reset_Handler+0x80>)
   80b7a:	429a      	cmp	r2, r3
   80b7c:	d003      	beq.n	80b86 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80b7e:	4b1e      	ldr	r3, [pc, #120]	; (80bf8 <Reset_Handler+0x84>)
   80b80:	4a1b      	ldr	r2, [pc, #108]	; (80bf0 <Reset_Handler+0x7c>)
   80b82:	429a      	cmp	r2, r3
   80b84:	d304      	bcc.n	80b90 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80b86:	4b1d      	ldr	r3, [pc, #116]	; (80bfc <Reset_Handler+0x88>)
   80b88:	4a1d      	ldr	r2, [pc, #116]	; (80c00 <Reset_Handler+0x8c>)
   80b8a:	429a      	cmp	r2, r3
   80b8c:	d30f      	bcc.n	80bae <Reset_Handler+0x3a>
   80b8e:	e01a      	b.n	80bc6 <Reset_Handler+0x52>
   80b90:	4b1c      	ldr	r3, [pc, #112]	; (80c04 <Reset_Handler+0x90>)
   80b92:	4c1d      	ldr	r4, [pc, #116]	; (80c08 <Reset_Handler+0x94>)
   80b94:	1ae4      	subs	r4, r4, r3
   80b96:	f024 0403 	bic.w	r4, r4, #3
   80b9a:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80b9c:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80b9e:	4814      	ldr	r0, [pc, #80]	; (80bf0 <Reset_Handler+0x7c>)
   80ba0:	4914      	ldr	r1, [pc, #80]	; (80bf4 <Reset_Handler+0x80>)
   80ba2:	585a      	ldr	r2, [r3, r1]
   80ba4:	501a      	str	r2, [r3, r0]
   80ba6:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80ba8:	42a3      	cmp	r3, r4
   80baa:	d1fa      	bne.n	80ba2 <Reset_Handler+0x2e>
   80bac:	e7eb      	b.n	80b86 <Reset_Handler+0x12>
   80bae:	4b17      	ldr	r3, [pc, #92]	; (80c0c <Reset_Handler+0x98>)
   80bb0:	4917      	ldr	r1, [pc, #92]	; (80c10 <Reset_Handler+0x9c>)
   80bb2:	1ac9      	subs	r1, r1, r3
   80bb4:	f021 0103 	bic.w	r1, r1, #3
   80bb8:	1d1a      	adds	r2, r3, #4
   80bba:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80bbc:	2200      	movs	r2, #0
   80bbe:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80bc2:	428b      	cmp	r3, r1
   80bc4:	d1fb      	bne.n	80bbe <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80bc6:	4a13      	ldr	r2, [pc, #76]	; (80c14 <Reset_Handler+0xa0>)
   80bc8:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80bcc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80bd0:	4911      	ldr	r1, [pc, #68]	; (80c18 <Reset_Handler+0xa4>)
   80bd2:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80bd4:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80bd8:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80bdc:	d203      	bcs.n	80be6 <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80bde:	688a      	ldr	r2, [r1, #8]
   80be0:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80be4:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80be6:	4b0d      	ldr	r3, [pc, #52]	; (80c1c <Reset_Handler+0xa8>)
   80be8:	4798      	blx	r3

	/* Branch to main function */
	main();
   80bea:	4b0d      	ldr	r3, [pc, #52]	; (80c20 <Reset_Handler+0xac>)
   80bec:	4798      	blx	r3
   80bee:	e7fe      	b.n	80bee <Reset_Handler+0x7a>
   80bf0:	20070000 	.word	0x20070000
   80bf4:	00083cac 	.word	0x00083cac
   80bf8:	200709a4 	.word	0x200709a4
   80bfc:	20070b1c 	.word	0x20070b1c
   80c00:	200709a4 	.word	0x200709a4
   80c04:	20070004 	.word	0x20070004
   80c08:	200709a7 	.word	0x200709a7
   80c0c:	200709a0 	.word	0x200709a0
   80c10:	20070b17 	.word	0x20070b17
   80c14:	00080000 	.word	0x00080000
   80c18:	e000ed00 	.word	0xe000ed00
   80c1c:	00080c75 	.word	0x00080c75
   80c20:	00080149 	.word	0x00080149

00080c24 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80c24:	4b09      	ldr	r3, [pc, #36]	; (80c4c <_sbrk+0x28>)
   80c26:	681b      	ldr	r3, [r3, #0]
   80c28:	b913      	cbnz	r3, 80c30 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80c2a:	4a09      	ldr	r2, [pc, #36]	; (80c50 <_sbrk+0x2c>)
   80c2c:	4b07      	ldr	r3, [pc, #28]	; (80c4c <_sbrk+0x28>)
   80c2e:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80c30:	4b06      	ldr	r3, [pc, #24]	; (80c4c <_sbrk+0x28>)
   80c32:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80c34:	181a      	adds	r2, r3, r0
   80c36:	4907      	ldr	r1, [pc, #28]	; (80c54 <_sbrk+0x30>)
   80c38:	4291      	cmp	r1, r2
   80c3a:	db04      	blt.n	80c46 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80c3c:	4610      	mov	r0, r2
   80c3e:	4a03      	ldr	r2, [pc, #12]	; (80c4c <_sbrk+0x28>)
   80c40:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80c42:	4618      	mov	r0, r3
   80c44:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80c46:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80c4a:	4770      	bx	lr
   80c4c:	20070ad4 	.word	0x20070ad4
   80c50:	20072b20 	.word	0x20072b20
   80c54:	20087ffc 	.word	0x20087ffc

00080c58 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   80c58:	f04f 30ff 	mov.w	r0, #4294967295
   80c5c:	4770      	bx	lr
   80c5e:	bf00      	nop

00080c60 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   80c60:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80c64:	604b      	str	r3, [r1, #4]

	return 0;
}
   80c66:	2000      	movs	r0, #0
   80c68:	4770      	bx	lr
   80c6a:	bf00      	nop

00080c6c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   80c6c:	2001      	movs	r0, #1
   80c6e:	4770      	bx	lr

00080c70 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   80c70:	2000      	movs	r0, #0
   80c72:	4770      	bx	lr

00080c74 <__libc_init_array>:
   80c74:	b570      	push	{r4, r5, r6, lr}
   80c76:	4e0f      	ldr	r6, [pc, #60]	; (80cb4 <__libc_init_array+0x40>)
   80c78:	4d0f      	ldr	r5, [pc, #60]	; (80cb8 <__libc_init_array+0x44>)
   80c7a:	1b76      	subs	r6, r6, r5
   80c7c:	10b6      	asrs	r6, r6, #2
   80c7e:	d007      	beq.n	80c90 <__libc_init_array+0x1c>
   80c80:	3d04      	subs	r5, #4
   80c82:	2400      	movs	r4, #0
   80c84:	3401      	adds	r4, #1
   80c86:	f855 3f04 	ldr.w	r3, [r5, #4]!
   80c8a:	4798      	blx	r3
   80c8c:	42a6      	cmp	r6, r4
   80c8e:	d1f9      	bne.n	80c84 <__libc_init_array+0x10>
   80c90:	4e0a      	ldr	r6, [pc, #40]	; (80cbc <__libc_init_array+0x48>)
   80c92:	4d0b      	ldr	r5, [pc, #44]	; (80cc0 <__libc_init_array+0x4c>)
   80c94:	f002 fff4 	bl	83c80 <_init>
   80c98:	1b76      	subs	r6, r6, r5
   80c9a:	10b6      	asrs	r6, r6, #2
   80c9c:	d008      	beq.n	80cb0 <__libc_init_array+0x3c>
   80c9e:	3d04      	subs	r5, #4
   80ca0:	2400      	movs	r4, #0
   80ca2:	3401      	adds	r4, #1
   80ca4:	f855 3f04 	ldr.w	r3, [r5, #4]!
   80ca8:	4798      	blx	r3
   80caa:	42a6      	cmp	r6, r4
   80cac:	d1f9      	bne.n	80ca2 <__libc_init_array+0x2e>
   80cae:	bd70      	pop	{r4, r5, r6, pc}
   80cb0:	bd70      	pop	{r4, r5, r6, pc}
   80cb2:	bf00      	nop
   80cb4:	00083c8c 	.word	0x00083c8c
   80cb8:	00083c8c 	.word	0x00083c8c
   80cbc:	00083c94 	.word	0x00083c94
   80cc0:	00083c8c 	.word	0x00083c8c

00080cc4 <iprintf>:
   80cc4:	b40f      	push	{r0, r1, r2, r3}
   80cc6:	b510      	push	{r4, lr}
   80cc8:	4b07      	ldr	r3, [pc, #28]	; (80ce8 <iprintf+0x24>)
   80cca:	b082      	sub	sp, #8
   80ccc:	ac04      	add	r4, sp, #16
   80cce:	f854 2b04 	ldr.w	r2, [r4], #4
   80cd2:	6818      	ldr	r0, [r3, #0]
   80cd4:	4623      	mov	r3, r4
   80cd6:	6881      	ldr	r1, [r0, #8]
   80cd8:	9401      	str	r4, [sp, #4]
   80cda:	f000 f945 	bl	80f68 <_vfiprintf_r>
   80cde:	b002      	add	sp, #8
   80ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80ce4:	b004      	add	sp, #16
   80ce6:	4770      	bx	lr
   80ce8:	20070568 	.word	0x20070568

00080cec <memset>:
   80cec:	b4f0      	push	{r4, r5, r6, r7}
   80cee:	0784      	lsls	r4, r0, #30
   80cf0:	d043      	beq.n	80d7a <memset+0x8e>
   80cf2:	1e54      	subs	r4, r2, #1
   80cf4:	2a00      	cmp	r2, #0
   80cf6:	d03e      	beq.n	80d76 <memset+0x8a>
   80cf8:	b2cd      	uxtb	r5, r1
   80cfa:	4603      	mov	r3, r0
   80cfc:	e003      	b.n	80d06 <memset+0x1a>
   80cfe:	1e62      	subs	r2, r4, #1
   80d00:	2c00      	cmp	r4, #0
   80d02:	d038      	beq.n	80d76 <memset+0x8a>
   80d04:	4614      	mov	r4, r2
   80d06:	f803 5b01 	strb.w	r5, [r3], #1
   80d0a:	079a      	lsls	r2, r3, #30
   80d0c:	d1f7      	bne.n	80cfe <memset+0x12>
   80d0e:	2c03      	cmp	r4, #3
   80d10:	d92a      	bls.n	80d68 <memset+0x7c>
   80d12:	b2cd      	uxtb	r5, r1
   80d14:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   80d18:	2c0f      	cmp	r4, #15
   80d1a:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   80d1e:	d915      	bls.n	80d4c <memset+0x60>
   80d20:	f1a4 0710 	sub.w	r7, r4, #16
   80d24:	093f      	lsrs	r7, r7, #4
   80d26:	f103 0610 	add.w	r6, r3, #16
   80d2a:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   80d2e:	461a      	mov	r2, r3
   80d30:	6015      	str	r5, [r2, #0]
   80d32:	6055      	str	r5, [r2, #4]
   80d34:	6095      	str	r5, [r2, #8]
   80d36:	60d5      	str	r5, [r2, #12]
   80d38:	3210      	adds	r2, #16
   80d3a:	42b2      	cmp	r2, r6
   80d3c:	d1f8      	bne.n	80d30 <memset+0x44>
   80d3e:	f004 040f 	and.w	r4, r4, #15
   80d42:	3701      	adds	r7, #1
   80d44:	2c03      	cmp	r4, #3
   80d46:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   80d4a:	d90d      	bls.n	80d68 <memset+0x7c>
   80d4c:	461e      	mov	r6, r3
   80d4e:	4622      	mov	r2, r4
   80d50:	3a04      	subs	r2, #4
   80d52:	2a03      	cmp	r2, #3
   80d54:	f846 5b04 	str.w	r5, [r6], #4
   80d58:	d8fa      	bhi.n	80d50 <memset+0x64>
   80d5a:	1f22      	subs	r2, r4, #4
   80d5c:	f022 0203 	bic.w	r2, r2, #3
   80d60:	3204      	adds	r2, #4
   80d62:	4413      	add	r3, r2
   80d64:	f004 0403 	and.w	r4, r4, #3
   80d68:	b12c      	cbz	r4, 80d76 <memset+0x8a>
   80d6a:	b2c9      	uxtb	r1, r1
   80d6c:	441c      	add	r4, r3
   80d6e:	f803 1b01 	strb.w	r1, [r3], #1
   80d72:	42a3      	cmp	r3, r4
   80d74:	d1fb      	bne.n	80d6e <memset+0x82>
   80d76:	bcf0      	pop	{r4, r5, r6, r7}
   80d78:	4770      	bx	lr
   80d7a:	4614      	mov	r4, r2
   80d7c:	4603      	mov	r3, r0
   80d7e:	e7c6      	b.n	80d0e <memset+0x22>

00080d80 <setbuf>:
   80d80:	2900      	cmp	r1, #0
   80d82:	bf0c      	ite	eq
   80d84:	2202      	moveq	r2, #2
   80d86:	2200      	movne	r2, #0
   80d88:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80d8c:	f000 b800 	b.w	80d90 <setvbuf>

00080d90 <setvbuf>:
   80d90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80d94:	4d3c      	ldr	r5, [pc, #240]	; (80e88 <setvbuf+0xf8>)
   80d96:	4604      	mov	r4, r0
   80d98:	682d      	ldr	r5, [r5, #0]
   80d9a:	4688      	mov	r8, r1
   80d9c:	4616      	mov	r6, r2
   80d9e:	461f      	mov	r7, r3
   80da0:	b115      	cbz	r5, 80da8 <setvbuf+0x18>
   80da2:	6bab      	ldr	r3, [r5, #56]	; 0x38
   80da4:	2b00      	cmp	r3, #0
   80da6:	d04f      	beq.n	80e48 <setvbuf+0xb8>
   80da8:	2e02      	cmp	r6, #2
   80daa:	d830      	bhi.n	80e0e <setvbuf+0x7e>
   80dac:	2f00      	cmp	r7, #0
   80dae:	db2e      	blt.n	80e0e <setvbuf+0x7e>
   80db0:	4628      	mov	r0, r5
   80db2:	4621      	mov	r1, r4
   80db4:	f001 f856 	bl	81e64 <_fflush_r>
   80db8:	89a3      	ldrh	r3, [r4, #12]
   80dba:	2200      	movs	r2, #0
   80dbc:	6062      	str	r2, [r4, #4]
   80dbe:	61a2      	str	r2, [r4, #24]
   80dc0:	061a      	lsls	r2, r3, #24
   80dc2:	d428      	bmi.n	80e16 <setvbuf+0x86>
   80dc4:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   80dc8:	b29b      	uxth	r3, r3
   80dca:	2e02      	cmp	r6, #2
   80dcc:	81a3      	strh	r3, [r4, #12]
   80dce:	d02d      	beq.n	80e2c <setvbuf+0x9c>
   80dd0:	f1b8 0f00 	cmp.w	r8, #0
   80dd4:	d03c      	beq.n	80e50 <setvbuf+0xc0>
   80dd6:	2e01      	cmp	r6, #1
   80dd8:	d013      	beq.n	80e02 <setvbuf+0x72>
   80dda:	b29b      	uxth	r3, r3
   80ddc:	f003 0008 	and.w	r0, r3, #8
   80de0:	4a2a      	ldr	r2, [pc, #168]	; (80e8c <setvbuf+0xfc>)
   80de2:	b280      	uxth	r0, r0
   80de4:	63ea      	str	r2, [r5, #60]	; 0x3c
   80de6:	f8c4 8000 	str.w	r8, [r4]
   80dea:	f8c4 8010 	str.w	r8, [r4, #16]
   80dee:	6167      	str	r7, [r4, #20]
   80df0:	b178      	cbz	r0, 80e12 <setvbuf+0x82>
   80df2:	f013 0f03 	tst.w	r3, #3
   80df6:	bf18      	it	ne
   80df8:	2700      	movne	r7, #0
   80dfa:	60a7      	str	r7, [r4, #8]
   80dfc:	2000      	movs	r0, #0
   80dfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80e02:	f043 0301 	orr.w	r3, r3, #1
   80e06:	427a      	negs	r2, r7
   80e08:	81a3      	strh	r3, [r4, #12]
   80e0a:	61a2      	str	r2, [r4, #24]
   80e0c:	e7e5      	b.n	80dda <setvbuf+0x4a>
   80e0e:	f04f 30ff 	mov.w	r0, #4294967295
   80e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80e16:	4628      	mov	r0, r5
   80e18:	6921      	ldr	r1, [r4, #16]
   80e1a:	f001 f983 	bl	82124 <_free_r>
   80e1e:	89a3      	ldrh	r3, [r4, #12]
   80e20:	2e02      	cmp	r6, #2
   80e22:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   80e26:	b29b      	uxth	r3, r3
   80e28:	81a3      	strh	r3, [r4, #12]
   80e2a:	d1d1      	bne.n	80dd0 <setvbuf+0x40>
   80e2c:	2000      	movs	r0, #0
   80e2e:	f104 0243 	add.w	r2, r4, #67	; 0x43
   80e32:	f043 0302 	orr.w	r3, r3, #2
   80e36:	2500      	movs	r5, #0
   80e38:	2101      	movs	r1, #1
   80e3a:	81a3      	strh	r3, [r4, #12]
   80e3c:	60a5      	str	r5, [r4, #8]
   80e3e:	6022      	str	r2, [r4, #0]
   80e40:	6122      	str	r2, [r4, #16]
   80e42:	6161      	str	r1, [r4, #20]
   80e44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80e48:	4628      	mov	r0, r5
   80e4a:	f001 f827 	bl	81e9c <__sinit>
   80e4e:	e7ab      	b.n	80da8 <setvbuf+0x18>
   80e50:	2f00      	cmp	r7, #0
   80e52:	bf08      	it	eq
   80e54:	f44f 6780 	moveq.w	r7, #1024	; 0x400
   80e58:	4638      	mov	r0, r7
   80e5a:	f001 fc59 	bl	82710 <malloc>
   80e5e:	4680      	mov	r8, r0
   80e60:	b128      	cbz	r0, 80e6e <setvbuf+0xde>
   80e62:	89a3      	ldrh	r3, [r4, #12]
   80e64:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   80e68:	b29b      	uxth	r3, r3
   80e6a:	81a3      	strh	r3, [r4, #12]
   80e6c:	e7b3      	b.n	80dd6 <setvbuf+0x46>
   80e6e:	f44f 6080 	mov.w	r0, #1024	; 0x400
   80e72:	f001 fc4d 	bl	82710 <malloc>
   80e76:	4680      	mov	r8, r0
   80e78:	b918      	cbnz	r0, 80e82 <setvbuf+0xf2>
   80e7a:	89a3      	ldrh	r3, [r4, #12]
   80e7c:	f04f 30ff 	mov.w	r0, #4294967295
   80e80:	e7d5      	b.n	80e2e <setvbuf+0x9e>
   80e82:	f44f 6780 	mov.w	r7, #1024	; 0x400
   80e86:	e7ec      	b.n	80e62 <setvbuf+0xd2>
   80e88:	20070568 	.word	0x20070568
   80e8c:	00081e91 	.word	0x00081e91

00080e90 <strlen>:
   80e90:	f020 0103 	bic.w	r1, r0, #3
   80e94:	f010 0003 	ands.w	r0, r0, #3
   80e98:	f1c0 0000 	rsb	r0, r0, #0
   80e9c:	f851 3b04 	ldr.w	r3, [r1], #4
   80ea0:	f100 0c04 	add.w	ip, r0, #4
   80ea4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   80ea8:	f06f 0200 	mvn.w	r2, #0
   80eac:	bf1c      	itt	ne
   80eae:	fa22 f20c 	lsrne.w	r2, r2, ip
   80eb2:	4313      	orrne	r3, r2
   80eb4:	f04f 0c01 	mov.w	ip, #1
   80eb8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   80ebc:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   80ec0:	eba3 020c 	sub.w	r2, r3, ip
   80ec4:	ea22 0203 	bic.w	r2, r2, r3
   80ec8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   80ecc:	bf04      	itt	eq
   80ece:	f851 3b04 	ldreq.w	r3, [r1], #4
   80ed2:	3004      	addeq	r0, #4
   80ed4:	d0f4      	beq.n	80ec0 <strlen+0x30>
   80ed6:	f013 0fff 	tst.w	r3, #255	; 0xff
   80eda:	bf1f      	itttt	ne
   80edc:	3001      	addne	r0, #1
   80ede:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   80ee2:	3001      	addne	r0, #1
   80ee4:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   80ee8:	bf18      	it	ne
   80eea:	3001      	addne	r0, #1
   80eec:	4770      	bx	lr
   80eee:	bf00      	nop

00080ef0 <__sprint_r.part.0>:
   80ef0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   80ef2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   80ef6:	049c      	lsls	r4, r3, #18
   80ef8:	460e      	mov	r6, r1
   80efa:	4680      	mov	r8, r0
   80efc:	4691      	mov	r9, r2
   80efe:	d52a      	bpl.n	80f56 <__sprint_r.part.0+0x66>
   80f00:	6893      	ldr	r3, [r2, #8]
   80f02:	6812      	ldr	r2, [r2, #0]
   80f04:	f102 0a08 	add.w	sl, r2, #8
   80f08:	b31b      	cbz	r3, 80f52 <__sprint_r.part.0+0x62>
   80f0a:	e91a 00a0 	ldmdb	sl, {r5, r7}
   80f0e:	08bf      	lsrs	r7, r7, #2
   80f10:	d017      	beq.n	80f42 <__sprint_r.part.0+0x52>
   80f12:	3d04      	subs	r5, #4
   80f14:	2400      	movs	r4, #0
   80f16:	e001      	b.n	80f1c <__sprint_r.part.0+0x2c>
   80f18:	42a7      	cmp	r7, r4
   80f1a:	d010      	beq.n	80f3e <__sprint_r.part.0+0x4e>
   80f1c:	4640      	mov	r0, r8
   80f1e:	f855 1f04 	ldr.w	r1, [r5, #4]!
   80f22:	4632      	mov	r2, r6
   80f24:	f001 f850 	bl	81fc8 <_fputwc_r>
   80f28:	1c43      	adds	r3, r0, #1
   80f2a:	f104 0401 	add.w	r4, r4, #1
   80f2e:	d1f3      	bne.n	80f18 <__sprint_r.part.0+0x28>
   80f30:	2300      	movs	r3, #0
   80f32:	f8c9 3008 	str.w	r3, [r9, #8]
   80f36:	f8c9 3004 	str.w	r3, [r9, #4]
   80f3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   80f3e:	f8d9 3008 	ldr.w	r3, [r9, #8]
   80f42:	eba3 0387 	sub.w	r3, r3, r7, lsl #2
   80f46:	f8c9 3008 	str.w	r3, [r9, #8]
   80f4a:	f10a 0a08 	add.w	sl, sl, #8
   80f4e:	2b00      	cmp	r3, #0
   80f50:	d1db      	bne.n	80f0a <__sprint_r.part.0+0x1a>
   80f52:	2000      	movs	r0, #0
   80f54:	e7ec      	b.n	80f30 <__sprint_r.part.0+0x40>
   80f56:	f001 f9b1 	bl	822bc <__sfvwrite_r>
   80f5a:	2300      	movs	r3, #0
   80f5c:	f8c9 3008 	str.w	r3, [r9, #8]
   80f60:	f8c9 3004 	str.w	r3, [r9, #4]
   80f64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00080f68 <_vfiprintf_r>:
   80f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80f6c:	b0b1      	sub	sp, #196	; 0xc4
   80f6e:	461c      	mov	r4, r3
   80f70:	9102      	str	r1, [sp, #8]
   80f72:	4690      	mov	r8, r2
   80f74:	9308      	str	r3, [sp, #32]
   80f76:	9006      	str	r0, [sp, #24]
   80f78:	b118      	cbz	r0, 80f82 <_vfiprintf_r+0x1a>
   80f7a:	6b83      	ldr	r3, [r0, #56]	; 0x38
   80f7c:	2b00      	cmp	r3, #0
   80f7e:	f000 80e8 	beq.w	81152 <_vfiprintf_r+0x1ea>
   80f82:	9d02      	ldr	r5, [sp, #8]
   80f84:	89ab      	ldrh	r3, [r5, #12]
   80f86:	b29a      	uxth	r2, r3
   80f88:	0490      	lsls	r0, r2, #18
   80f8a:	d407      	bmi.n	80f9c <_vfiprintf_r+0x34>
   80f8c:	6e6a      	ldr	r2, [r5, #100]	; 0x64
   80f8e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   80f92:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
   80f96:	81ab      	strh	r3, [r5, #12]
   80f98:	b29a      	uxth	r2, r3
   80f9a:	6669      	str	r1, [r5, #100]	; 0x64
   80f9c:	0711      	lsls	r1, r2, #28
   80f9e:	f140 80b7 	bpl.w	81110 <_vfiprintf_r+0x1a8>
   80fa2:	f8dd b008 	ldr.w	fp, [sp, #8]
   80fa6:	f8db 3010 	ldr.w	r3, [fp, #16]
   80faa:	2b00      	cmp	r3, #0
   80fac:	f000 80b0 	beq.w	81110 <_vfiprintf_r+0x1a8>
   80fb0:	f002 021a 	and.w	r2, r2, #26
   80fb4:	2a0a      	cmp	r2, #10
   80fb6:	f000 80b7 	beq.w	81128 <_vfiprintf_r+0x1c0>
   80fba:	2300      	movs	r3, #0
   80fbc:	f10d 0980 	add.w	r9, sp, #128	; 0x80
   80fc0:	930a      	str	r3, [sp, #40]	; 0x28
   80fc2:	9315      	str	r3, [sp, #84]	; 0x54
   80fc4:	9314      	str	r3, [sp, #80]	; 0x50
   80fc6:	9309      	str	r3, [sp, #36]	; 0x24
   80fc8:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   80fcc:	464e      	mov	r6, r9
   80fce:	f898 3000 	ldrb.w	r3, [r8]
   80fd2:	2b00      	cmp	r3, #0
   80fd4:	f000 84c8 	beq.w	81968 <_vfiprintf_r+0xa00>
   80fd8:	2b25      	cmp	r3, #37	; 0x25
   80fda:	f000 84c5 	beq.w	81968 <_vfiprintf_r+0xa00>
   80fde:	f108 0201 	add.w	r2, r8, #1
   80fe2:	e001      	b.n	80fe8 <_vfiprintf_r+0x80>
   80fe4:	2b25      	cmp	r3, #37	; 0x25
   80fe6:	d004      	beq.n	80ff2 <_vfiprintf_r+0x8a>
   80fe8:	7813      	ldrb	r3, [r2, #0]
   80fea:	4614      	mov	r4, r2
   80fec:	3201      	adds	r2, #1
   80fee:	2b00      	cmp	r3, #0
   80ff0:	d1f8      	bne.n	80fe4 <_vfiprintf_r+0x7c>
   80ff2:	ebc8 0504 	rsb	r5, r8, r4
   80ff6:	b195      	cbz	r5, 8101e <_vfiprintf_r+0xb6>
   80ff8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   80ffa:	9a15      	ldr	r2, [sp, #84]	; 0x54
   80ffc:	3301      	adds	r3, #1
   80ffe:	442a      	add	r2, r5
   81000:	2b07      	cmp	r3, #7
   81002:	f8c6 8000 	str.w	r8, [r6]
   81006:	6075      	str	r5, [r6, #4]
   81008:	9215      	str	r2, [sp, #84]	; 0x54
   8100a:	9314      	str	r3, [sp, #80]	; 0x50
   8100c:	dd7b      	ble.n	81106 <_vfiprintf_r+0x19e>
   8100e:	2a00      	cmp	r2, #0
   81010:	f040 84d5 	bne.w	819be <_vfiprintf_r+0xa56>
   81014:	9809      	ldr	r0, [sp, #36]	; 0x24
   81016:	9214      	str	r2, [sp, #80]	; 0x50
   81018:	4428      	add	r0, r5
   8101a:	464e      	mov	r6, r9
   8101c:	9009      	str	r0, [sp, #36]	; 0x24
   8101e:	7823      	ldrb	r3, [r4, #0]
   81020:	2b00      	cmp	r3, #0
   81022:	f000 83ed 	beq.w	81800 <_vfiprintf_r+0x898>
   81026:	2100      	movs	r1, #0
   81028:	f04f 0200 	mov.w	r2, #0
   8102c:	f04f 3cff 	mov.w	ip, #4294967295
   81030:	7863      	ldrb	r3, [r4, #1]
   81032:	f88d 2047 	strb.w	r2, [sp, #71]	; 0x47
   81036:	9104      	str	r1, [sp, #16]
   81038:	468a      	mov	sl, r1
   8103a:	f104 0801 	add.w	r8, r4, #1
   8103e:	4608      	mov	r0, r1
   81040:	4665      	mov	r5, ip
   81042:	f108 0801 	add.w	r8, r8, #1
   81046:	f1a3 0220 	sub.w	r2, r3, #32
   8104a:	2a58      	cmp	r2, #88	; 0x58
   8104c:	f200 82d9 	bhi.w	81602 <_vfiprintf_r+0x69a>
   81050:	e8df f012 	tbh	[pc, r2, lsl #1]
   81054:	02d702cb 	.word	0x02d702cb
   81058:	02d202d7 	.word	0x02d202d7
   8105c:	02d702d7 	.word	0x02d702d7
   81060:	02d702d7 	.word	0x02d702d7
   81064:	02d702d7 	.word	0x02d702d7
   81068:	028f0282 	.word	0x028f0282
   8106c:	008402d7 	.word	0x008402d7
   81070:	02d70293 	.word	0x02d70293
   81074:	0196012b 	.word	0x0196012b
   81078:	01960196 	.word	0x01960196
   8107c:	01960196 	.word	0x01960196
   81080:	01960196 	.word	0x01960196
   81084:	01960196 	.word	0x01960196
   81088:	02d702d7 	.word	0x02d702d7
   8108c:	02d702d7 	.word	0x02d702d7
   81090:	02d702d7 	.word	0x02d702d7
   81094:	02d702d7 	.word	0x02d702d7
   81098:	02d702d7 	.word	0x02d702d7
   8109c:	02d70130 	.word	0x02d70130
   810a0:	02d702d7 	.word	0x02d702d7
   810a4:	02d702d7 	.word	0x02d702d7
   810a8:	02d702d7 	.word	0x02d702d7
   810ac:	02d702d7 	.word	0x02d702d7
   810b0:	017b02d7 	.word	0x017b02d7
   810b4:	02d702d7 	.word	0x02d702d7
   810b8:	02d702d7 	.word	0x02d702d7
   810bc:	01a402d7 	.word	0x01a402d7
   810c0:	02d702d7 	.word	0x02d702d7
   810c4:	02d701bf 	.word	0x02d701bf
   810c8:	02d702d7 	.word	0x02d702d7
   810cc:	02d702d7 	.word	0x02d702d7
   810d0:	02d702d7 	.word	0x02d702d7
   810d4:	02d702d7 	.word	0x02d702d7
   810d8:	01e402d7 	.word	0x01e402d7
   810dc:	02d701fa 	.word	0x02d701fa
   810e0:	02d702d7 	.word	0x02d702d7
   810e4:	01fa0216 	.word	0x01fa0216
   810e8:	02d702d7 	.word	0x02d702d7
   810ec:	02d7021b 	.word	0x02d7021b
   810f0:	00890228 	.word	0x00890228
   810f4:	027d0266 	.word	0x027d0266
   810f8:	023a02d7 	.word	0x023a02d7
   810fc:	011902d7 	.word	0x011902d7
   81100:	02d702d7 	.word	0x02d702d7
   81104:	02af      	.short	0x02af
   81106:	3608      	adds	r6, #8
   81108:	9809      	ldr	r0, [sp, #36]	; 0x24
   8110a:	4428      	add	r0, r5
   8110c:	9009      	str	r0, [sp, #36]	; 0x24
   8110e:	e786      	b.n	8101e <_vfiprintf_r+0xb6>
   81110:	9806      	ldr	r0, [sp, #24]
   81112:	9902      	ldr	r1, [sp, #8]
   81114:	f000 fd90 	bl	81c38 <__swsetup_r>
   81118:	b9b0      	cbnz	r0, 81148 <_vfiprintf_r+0x1e0>
   8111a:	9d02      	ldr	r5, [sp, #8]
   8111c:	89aa      	ldrh	r2, [r5, #12]
   8111e:	f002 021a 	and.w	r2, r2, #26
   81122:	2a0a      	cmp	r2, #10
   81124:	f47f af49 	bne.w	80fba <_vfiprintf_r+0x52>
   81128:	f8dd b008 	ldr.w	fp, [sp, #8]
   8112c:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   81130:	2b00      	cmp	r3, #0
   81132:	f6ff af42 	blt.w	80fba <_vfiprintf_r+0x52>
   81136:	9806      	ldr	r0, [sp, #24]
   81138:	4659      	mov	r1, fp
   8113a:	4642      	mov	r2, r8
   8113c:	4623      	mov	r3, r4
   8113e:	f000 fd3d 	bl	81bbc <__sbprintf>
   81142:	b031      	add	sp, #196	; 0xc4
   81144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81148:	f04f 30ff 	mov.w	r0, #4294967295
   8114c:	b031      	add	sp, #196	; 0xc4
   8114e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81152:	f000 fea3 	bl	81e9c <__sinit>
   81156:	e714      	b.n	80f82 <_vfiprintf_r+0x1a>
   81158:	4240      	negs	r0, r0
   8115a:	9308      	str	r3, [sp, #32]
   8115c:	f04a 0a04 	orr.w	sl, sl, #4
   81160:	f898 3000 	ldrb.w	r3, [r8]
   81164:	e76d      	b.n	81042 <_vfiprintf_r+0xda>
   81166:	f01a 0320 	ands.w	r3, sl, #32
   8116a:	9004      	str	r0, [sp, #16]
   8116c:	46ac      	mov	ip, r5
   8116e:	f000 80f4 	beq.w	8135a <_vfiprintf_r+0x3f2>
   81172:	f8dd b020 	ldr.w	fp, [sp, #32]
   81176:	f10b 0307 	add.w	r3, fp, #7
   8117a:	f023 0307 	bic.w	r3, r3, #7
   8117e:	f103 0408 	add.w	r4, r3, #8
   81182:	9408      	str	r4, [sp, #32]
   81184:	e9d3 4500 	ldrd	r4, r5, [r3]
   81188:	2300      	movs	r3, #0
   8118a:	f04f 0000 	mov.w	r0, #0
   8118e:	2100      	movs	r1, #0
   81190:	f88d 0047 	strb.w	r0, [sp, #71]	; 0x47
   81194:	f8cd c014 	str.w	ip, [sp, #20]
   81198:	9107      	str	r1, [sp, #28]
   8119a:	f1bc 0f00 	cmp.w	ip, #0
   8119e:	bfa8      	it	ge
   811a0:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   811a4:	ea54 0205 	orrs.w	r2, r4, r5
   811a8:	f040 80ad 	bne.w	81306 <_vfiprintf_r+0x39e>
   811ac:	f1bc 0f00 	cmp.w	ip, #0
   811b0:	f040 80a9 	bne.w	81306 <_vfiprintf_r+0x39e>
   811b4:	2b00      	cmp	r3, #0
   811b6:	f040 83c0 	bne.w	8193a <_vfiprintf_r+0x9d2>
   811ba:	f01a 0f01 	tst.w	sl, #1
   811be:	f000 83bc 	beq.w	8193a <_vfiprintf_r+0x9d2>
   811c2:	2330      	movs	r3, #48	; 0x30
   811c4:	af30      	add	r7, sp, #192	; 0xc0
   811c6:	f807 3d41 	strb.w	r3, [r7, #-65]!
   811ca:	ebc7 0409 	rsb	r4, r7, r9
   811ce:	9405      	str	r4, [sp, #20]
   811d0:	f8dd b014 	ldr.w	fp, [sp, #20]
   811d4:	9c07      	ldr	r4, [sp, #28]
   811d6:	45e3      	cmp	fp, ip
   811d8:	bfb8      	it	lt
   811da:	46e3      	movlt	fp, ip
   811dc:	f8cd b00c 	str.w	fp, [sp, #12]
   811e0:	b11c      	cbz	r4, 811ea <_vfiprintf_r+0x282>
   811e2:	f10b 0b01 	add.w	fp, fp, #1
   811e6:	f8cd b00c 	str.w	fp, [sp, #12]
   811ea:	f01a 0502 	ands.w	r5, sl, #2
   811ee:	9507      	str	r5, [sp, #28]
   811f0:	d005      	beq.n	811fe <_vfiprintf_r+0x296>
   811f2:	f8dd b00c 	ldr.w	fp, [sp, #12]
   811f6:	f10b 0b02 	add.w	fp, fp, #2
   811fa:	f8cd b00c 	str.w	fp, [sp, #12]
   811fe:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
   81202:	930b      	str	r3, [sp, #44]	; 0x2c
   81204:	f040 821b 	bne.w	8163e <_vfiprintf_r+0x6d6>
   81208:	9d04      	ldr	r5, [sp, #16]
   8120a:	f8dd b00c 	ldr.w	fp, [sp, #12]
   8120e:	ebcb 0405 	rsb	r4, fp, r5
   81212:	2c00      	cmp	r4, #0
   81214:	f340 8213 	ble.w	8163e <_vfiprintf_r+0x6d6>
   81218:	2c10      	cmp	r4, #16
   8121a:	f340 8489 	ble.w	81b30 <_vfiprintf_r+0xbc8>
   8121e:	4dbe      	ldr	r5, [pc, #760]	; (81518 <_vfiprintf_r+0x5b0>)
   81220:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81222:	462b      	mov	r3, r5
   81224:	9814      	ldr	r0, [sp, #80]	; 0x50
   81226:	4625      	mov	r5, r4
   81228:	f04f 0b10 	mov.w	fp, #16
   8122c:	4664      	mov	r4, ip
   8122e:	46b4      	mov	ip, r6
   81230:	461e      	mov	r6, r3
   81232:	e006      	b.n	81242 <_vfiprintf_r+0x2da>
   81234:	1c83      	adds	r3, r0, #2
   81236:	f10c 0c08 	add.w	ip, ip, #8
   8123a:	4608      	mov	r0, r1
   8123c:	3d10      	subs	r5, #16
   8123e:	2d10      	cmp	r5, #16
   81240:	dd11      	ble.n	81266 <_vfiprintf_r+0x2fe>
   81242:	1c41      	adds	r1, r0, #1
   81244:	3210      	adds	r2, #16
   81246:	2907      	cmp	r1, #7
   81248:	9215      	str	r2, [sp, #84]	; 0x54
   8124a:	e88c 0840 	stmia.w	ip, {r6, fp}
   8124e:	9114      	str	r1, [sp, #80]	; 0x50
   81250:	ddf0      	ble.n	81234 <_vfiprintf_r+0x2cc>
   81252:	2a00      	cmp	r2, #0
   81254:	f040 81e6 	bne.w	81624 <_vfiprintf_r+0x6bc>
   81258:	3d10      	subs	r5, #16
   8125a:	2d10      	cmp	r5, #16
   8125c:	f04f 0301 	mov.w	r3, #1
   81260:	4610      	mov	r0, r2
   81262:	46cc      	mov	ip, r9
   81264:	dced      	bgt.n	81242 <_vfiprintf_r+0x2da>
   81266:	4631      	mov	r1, r6
   81268:	4666      	mov	r6, ip
   8126a:	46a4      	mov	ip, r4
   8126c:	462c      	mov	r4, r5
   8126e:	460d      	mov	r5, r1
   81270:	4422      	add	r2, r4
   81272:	2b07      	cmp	r3, #7
   81274:	9215      	str	r2, [sp, #84]	; 0x54
   81276:	6035      	str	r5, [r6, #0]
   81278:	6074      	str	r4, [r6, #4]
   8127a:	9314      	str	r3, [sp, #80]	; 0x50
   8127c:	f300 836d 	bgt.w	8195a <_vfiprintf_r+0x9f2>
   81280:	3608      	adds	r6, #8
   81282:	1c59      	adds	r1, r3, #1
   81284:	e1de      	b.n	81644 <_vfiprintf_r+0x6dc>
   81286:	f01a 0f20 	tst.w	sl, #32
   8128a:	9004      	str	r0, [sp, #16]
   8128c:	46ac      	mov	ip, r5
   8128e:	f000 808d 	beq.w	813ac <_vfiprintf_r+0x444>
   81292:	9d08      	ldr	r5, [sp, #32]
   81294:	1deb      	adds	r3, r5, #7
   81296:	f023 0307 	bic.w	r3, r3, #7
   8129a:	f103 0b08 	add.w	fp, r3, #8
   8129e:	e9d3 4500 	ldrd	r4, r5, [r3]
   812a2:	f8cd b020 	str.w	fp, [sp, #32]
   812a6:	2301      	movs	r3, #1
   812a8:	e76f      	b.n	8118a <_vfiprintf_r+0x222>
   812aa:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
   812ae:	f898 3000 	ldrb.w	r3, [r8]
   812b2:	e6c6      	b.n	81042 <_vfiprintf_r+0xda>
   812b4:	f04a 0a10 	orr.w	sl, sl, #16
   812b8:	f01a 0f20 	tst.w	sl, #32
   812bc:	9004      	str	r0, [sp, #16]
   812be:	46ac      	mov	ip, r5
   812c0:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   812c4:	f000 80c8 	beq.w	81458 <_vfiprintf_r+0x4f0>
   812c8:	9c08      	ldr	r4, [sp, #32]
   812ca:	1de1      	adds	r1, r4, #7
   812cc:	f021 0107 	bic.w	r1, r1, #7
   812d0:	e9d1 2300 	ldrd	r2, r3, [r1]
   812d4:	3108      	adds	r1, #8
   812d6:	9108      	str	r1, [sp, #32]
   812d8:	4614      	mov	r4, r2
   812da:	461d      	mov	r5, r3
   812dc:	2a00      	cmp	r2, #0
   812de:	f173 0b00 	sbcs.w	fp, r3, #0
   812e2:	f2c0 83ce 	blt.w	81a82 <_vfiprintf_r+0xb1a>
   812e6:	f1bc 0f00 	cmp.w	ip, #0
   812ea:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   812ee:	bfa8      	it	ge
   812f0:	f02a 0a80 	bicge.w	sl, sl, #128	; 0x80
   812f4:	ea54 0205 	orrs.w	r2, r4, r5
   812f8:	9007      	str	r0, [sp, #28]
   812fa:	f8cd c014 	str.w	ip, [sp, #20]
   812fe:	f04f 0301 	mov.w	r3, #1
   81302:	f43f af53 	beq.w	811ac <_vfiprintf_r+0x244>
   81306:	2b01      	cmp	r3, #1
   81308:	f000 8319 	beq.w	8193e <_vfiprintf_r+0x9d6>
   8130c:	2b02      	cmp	r3, #2
   8130e:	f10d 037f 	add.w	r3, sp, #127	; 0x7f
   81312:	f040 824c 	bne.w	817ae <_vfiprintf_r+0x846>
   81316:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   8131a:	4619      	mov	r1, r3
   8131c:	f004 000f 	and.w	r0, r4, #15
   81320:	0922      	lsrs	r2, r4, #4
   81322:	f81b 0000 	ldrb.w	r0, [fp, r0]
   81326:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   8132a:	092b      	lsrs	r3, r5, #4
   8132c:	7008      	strb	r0, [r1, #0]
   8132e:	ea52 0003 	orrs.w	r0, r2, r3
   81332:	460f      	mov	r7, r1
   81334:	4614      	mov	r4, r2
   81336:	461d      	mov	r5, r3
   81338:	f101 31ff 	add.w	r1, r1, #4294967295
   8133c:	d1ee      	bne.n	8131c <_vfiprintf_r+0x3b4>
   8133e:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   81342:	ebc7 0309 	rsb	r3, r7, r9
   81346:	9305      	str	r3, [sp, #20]
   81348:	e742      	b.n	811d0 <_vfiprintf_r+0x268>
   8134a:	f04a 0a10 	orr.w	sl, sl, #16
   8134e:	f01a 0320 	ands.w	r3, sl, #32
   81352:	9004      	str	r0, [sp, #16]
   81354:	46ac      	mov	ip, r5
   81356:	f47f af0c 	bne.w	81172 <_vfiprintf_r+0x20a>
   8135a:	f01a 0210 	ands.w	r2, sl, #16
   8135e:	f040 8311 	bne.w	81984 <_vfiprintf_r+0xa1c>
   81362:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
   81366:	f000 830d 	beq.w	81984 <_vfiprintf_r+0xa1c>
   8136a:	f8dd b020 	ldr.w	fp, [sp, #32]
   8136e:	4613      	mov	r3, r2
   81370:	f8bb 4000 	ldrh.w	r4, [fp]
   81374:	f10b 0b04 	add.w	fp, fp, #4
   81378:	2500      	movs	r5, #0
   8137a:	f8cd b020 	str.w	fp, [sp, #32]
   8137e:	e704      	b.n	8118a <_vfiprintf_r+0x222>
   81380:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   81384:	2000      	movs	r0, #0
   81386:	f818 3b01 	ldrb.w	r3, [r8], #1
   8138a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   8138e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
   81392:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   81396:	2a09      	cmp	r2, #9
   81398:	d9f5      	bls.n	81386 <_vfiprintf_r+0x41e>
   8139a:	e654      	b.n	81046 <_vfiprintf_r+0xde>
   8139c:	f04a 0a10 	orr.w	sl, sl, #16
   813a0:	f01a 0f20 	tst.w	sl, #32
   813a4:	9004      	str	r0, [sp, #16]
   813a6:	46ac      	mov	ip, r5
   813a8:	f47f af73 	bne.w	81292 <_vfiprintf_r+0x32a>
   813ac:	f01a 0f10 	tst.w	sl, #16
   813b0:	f040 82ef 	bne.w	81992 <_vfiprintf_r+0xa2a>
   813b4:	f01a 0f40 	tst.w	sl, #64	; 0x40
   813b8:	f000 82eb 	beq.w	81992 <_vfiprintf_r+0xa2a>
   813bc:	f8dd b020 	ldr.w	fp, [sp, #32]
   813c0:	2500      	movs	r5, #0
   813c2:	f8bb 4000 	ldrh.w	r4, [fp]
   813c6:	f10b 0b04 	add.w	fp, fp, #4
   813ca:	2301      	movs	r3, #1
   813cc:	f8cd b020 	str.w	fp, [sp, #32]
   813d0:	e6db      	b.n	8118a <_vfiprintf_r+0x222>
   813d2:	46ac      	mov	ip, r5
   813d4:	4d51      	ldr	r5, [pc, #324]	; (8151c <_vfiprintf_r+0x5b4>)
   813d6:	f01a 0f20 	tst.w	sl, #32
   813da:	9004      	str	r0, [sp, #16]
   813dc:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   813e0:	950a      	str	r5, [sp, #40]	; 0x28
   813e2:	f000 80f0 	beq.w	815c6 <_vfiprintf_r+0x65e>
   813e6:	9d08      	ldr	r5, [sp, #32]
   813e8:	1dea      	adds	r2, r5, #7
   813ea:	f022 0207 	bic.w	r2, r2, #7
   813ee:	f102 0b08 	add.w	fp, r2, #8
   813f2:	f8cd b020 	str.w	fp, [sp, #32]
   813f6:	e9d2 4500 	ldrd	r4, r5, [r2]
   813fa:	f01a 0f01 	tst.w	sl, #1
   813fe:	f000 82aa 	beq.w	81956 <_vfiprintf_r+0x9ee>
   81402:	ea54 0b05 	orrs.w	fp, r4, r5
   81406:	f000 82a6 	beq.w	81956 <_vfiprintf_r+0x9ee>
   8140a:	2230      	movs	r2, #48	; 0x30
   8140c:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   81410:	f04a 0a02 	orr.w	sl, sl, #2
   81414:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   81418:	2302      	movs	r3, #2
   8141a:	e6b6      	b.n	8118a <_vfiprintf_r+0x222>
   8141c:	9b08      	ldr	r3, [sp, #32]
   8141e:	f8dd b020 	ldr.w	fp, [sp, #32]
   81422:	681b      	ldr	r3, [r3, #0]
   81424:	2401      	movs	r4, #1
   81426:	f04f 0500 	mov.w	r5, #0
   8142a:	f10b 0b04 	add.w	fp, fp, #4
   8142e:	9004      	str	r0, [sp, #16]
   81430:	9403      	str	r4, [sp, #12]
   81432:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   81436:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   8143a:	f8cd b020 	str.w	fp, [sp, #32]
   8143e:	9405      	str	r4, [sp, #20]
   81440:	af16      	add	r7, sp, #88	; 0x58
   81442:	f04f 0c00 	mov.w	ip, #0
   81446:	e6d0      	b.n	811ea <_vfiprintf_r+0x282>
   81448:	f01a 0f20 	tst.w	sl, #32
   8144c:	9004      	str	r0, [sp, #16]
   8144e:	46ac      	mov	ip, r5
   81450:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   81454:	f47f af38 	bne.w	812c8 <_vfiprintf_r+0x360>
   81458:	f01a 0f10 	tst.w	sl, #16
   8145c:	f040 82a7 	bne.w	819ae <_vfiprintf_r+0xa46>
   81460:	f01a 0f40 	tst.w	sl, #64	; 0x40
   81464:	f000 82a3 	beq.w	819ae <_vfiprintf_r+0xa46>
   81468:	f8dd b020 	ldr.w	fp, [sp, #32]
   8146c:	f9bb 4000 	ldrsh.w	r4, [fp]
   81470:	f10b 0b04 	add.w	fp, fp, #4
   81474:	17e5      	asrs	r5, r4, #31
   81476:	4622      	mov	r2, r4
   81478:	462b      	mov	r3, r5
   8147a:	f8cd b020 	str.w	fp, [sp, #32]
   8147e:	e72d      	b.n	812dc <_vfiprintf_r+0x374>
   81480:	f04a 0a40 	orr.w	sl, sl, #64	; 0x40
   81484:	f898 3000 	ldrb.w	r3, [r8]
   81488:	e5db      	b.n	81042 <_vfiprintf_r+0xda>
   8148a:	f898 3000 	ldrb.w	r3, [r8]
   8148e:	4642      	mov	r2, r8
   81490:	2b6c      	cmp	r3, #108	; 0x6c
   81492:	bf03      	ittte	eq
   81494:	f108 0801 	addeq.w	r8, r8, #1
   81498:	f04a 0a20 	orreq.w	sl, sl, #32
   8149c:	7853      	ldrbeq	r3, [r2, #1]
   8149e:	f04a 0a10 	orrne.w	sl, sl, #16
   814a2:	e5ce      	b.n	81042 <_vfiprintf_r+0xda>
   814a4:	f01a 0f20 	tst.w	sl, #32
   814a8:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   814ac:	f000 82f7 	beq.w	81a9e <_vfiprintf_r+0xb36>
   814b0:	9c08      	ldr	r4, [sp, #32]
   814b2:	6821      	ldr	r1, [r4, #0]
   814b4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   814b6:	17e5      	asrs	r5, r4, #31
   814b8:	462b      	mov	r3, r5
   814ba:	9d08      	ldr	r5, [sp, #32]
   814bc:	4622      	mov	r2, r4
   814be:	3504      	adds	r5, #4
   814c0:	9508      	str	r5, [sp, #32]
   814c2:	e9c1 2300 	strd	r2, r3, [r1]
   814c6:	e582      	b.n	80fce <_vfiprintf_r+0x66>
   814c8:	9c08      	ldr	r4, [sp, #32]
   814ca:	46ac      	mov	ip, r5
   814cc:	6827      	ldr	r7, [r4, #0]
   814ce:	f04f 0500 	mov.w	r5, #0
   814d2:	9004      	str	r0, [sp, #16]
   814d4:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
   814d8:	3404      	adds	r4, #4
   814da:	2f00      	cmp	r7, #0
   814dc:	f000 8332 	beq.w	81b44 <_vfiprintf_r+0xbdc>
   814e0:	f1bc 0f00 	cmp.w	ip, #0
   814e4:	4638      	mov	r0, r7
   814e6:	f2c0 8307 	blt.w	81af8 <_vfiprintf_r+0xb90>
   814ea:	4662      	mov	r2, ip
   814ec:	2100      	movs	r1, #0
   814ee:	f8cd c004 	str.w	ip, [sp, #4]
   814f2:	f001 fbb1 	bl	82c58 <memchr>
   814f6:	f8dd c004 	ldr.w	ip, [sp, #4]
   814fa:	2800      	cmp	r0, #0
   814fc:	f000 833a 	beq.w	81b74 <_vfiprintf_r+0xc0c>
   81500:	1bc0      	subs	r0, r0, r7
   81502:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   81506:	4560      	cmp	r0, ip
   81508:	bfa8      	it	ge
   8150a:	4660      	movge	r0, ip
   8150c:	9005      	str	r0, [sp, #20]
   8150e:	9408      	str	r4, [sp, #32]
   81510:	9507      	str	r5, [sp, #28]
   81512:	f04f 0c00 	mov.w	ip, #0
   81516:	e65b      	b.n	811d0 <_vfiprintf_r+0x268>
   81518:	00083c70 	.word	0x00083c70
   8151c:	00083c30 	.word	0x00083c30
   81520:	9b08      	ldr	r3, [sp, #32]
   81522:	f8dd b020 	ldr.w	fp, [sp, #32]
   81526:	9004      	str	r0, [sp, #16]
   81528:	48b2      	ldr	r0, [pc, #712]	; (817f4 <_vfiprintf_r+0x88c>)
   8152a:	681c      	ldr	r4, [r3, #0]
   8152c:	2230      	movs	r2, #48	; 0x30
   8152e:	2378      	movs	r3, #120	; 0x78
   81530:	f10b 0b04 	add.w	fp, fp, #4
   81534:	46ac      	mov	ip, r5
   81536:	f88d 3049 	strb.w	r3, [sp, #73]	; 0x49
   8153a:	f04a 0a02 	orr.w	sl, sl, #2
   8153e:	f8cd b020 	str.w	fp, [sp, #32]
   81542:	2500      	movs	r5, #0
   81544:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   81548:	900a      	str	r0, [sp, #40]	; 0x28
   8154a:	2302      	movs	r3, #2
   8154c:	e61d      	b.n	8118a <_vfiprintf_r+0x222>
   8154e:	f04a 0a20 	orr.w	sl, sl, #32
   81552:	f898 3000 	ldrb.w	r3, [r8]
   81556:	e574      	b.n	81042 <_vfiprintf_r+0xda>
   81558:	f8dd b020 	ldr.w	fp, [sp, #32]
   8155c:	f8db 0000 	ldr.w	r0, [fp]
   81560:	f10b 0304 	add.w	r3, fp, #4
   81564:	2800      	cmp	r0, #0
   81566:	f6ff adf7 	blt.w	81158 <_vfiprintf_r+0x1f0>
   8156a:	9308      	str	r3, [sp, #32]
   8156c:	f898 3000 	ldrb.w	r3, [r8]
   81570:	e567      	b.n	81042 <_vfiprintf_r+0xda>
   81572:	f898 3000 	ldrb.w	r3, [r8]
   81576:	212b      	movs	r1, #43	; 0x2b
   81578:	e563      	b.n	81042 <_vfiprintf_r+0xda>
   8157a:	f898 3000 	ldrb.w	r3, [r8]
   8157e:	f108 0401 	add.w	r4, r8, #1
   81582:	2b2a      	cmp	r3, #42	; 0x2a
   81584:	f000 8305 	beq.w	81b92 <_vfiprintf_r+0xc2a>
   81588:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8158c:	2a09      	cmp	r2, #9
   8158e:	bf98      	it	ls
   81590:	2500      	movls	r5, #0
   81592:	f200 82fa 	bhi.w	81b8a <_vfiprintf_r+0xc22>
   81596:	f814 3b01 	ldrb.w	r3, [r4], #1
   8159a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   8159e:	eb02 0545 	add.w	r5, r2, r5, lsl #1
   815a2:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   815a6:	2a09      	cmp	r2, #9
   815a8:	d9f5      	bls.n	81596 <_vfiprintf_r+0x62e>
   815aa:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
   815ae:	46a0      	mov	r8, r4
   815b0:	e549      	b.n	81046 <_vfiprintf_r+0xde>
   815b2:	4c90      	ldr	r4, [pc, #576]	; (817f4 <_vfiprintf_r+0x88c>)
   815b4:	f01a 0f20 	tst.w	sl, #32
   815b8:	9004      	str	r0, [sp, #16]
   815ba:	46ac      	mov	ip, r5
   815bc:	940a      	str	r4, [sp, #40]	; 0x28
   815be:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   815c2:	f47f af10 	bne.w	813e6 <_vfiprintf_r+0x47e>
   815c6:	f01a 0f10 	tst.w	sl, #16
   815ca:	f040 81ea 	bne.w	819a2 <_vfiprintf_r+0xa3a>
   815ce:	f01a 0f40 	tst.w	sl, #64	; 0x40
   815d2:	f000 81e6 	beq.w	819a2 <_vfiprintf_r+0xa3a>
   815d6:	f8dd b020 	ldr.w	fp, [sp, #32]
   815da:	2500      	movs	r5, #0
   815dc:	f8bb 4000 	ldrh.w	r4, [fp]
   815e0:	f10b 0b04 	add.w	fp, fp, #4
   815e4:	f8cd b020 	str.w	fp, [sp, #32]
   815e8:	e707      	b.n	813fa <_vfiprintf_r+0x492>
   815ea:	f898 3000 	ldrb.w	r3, [r8]
   815ee:	2900      	cmp	r1, #0
   815f0:	f47f ad27 	bne.w	81042 <_vfiprintf_r+0xda>
   815f4:	2120      	movs	r1, #32
   815f6:	e524      	b.n	81042 <_vfiprintf_r+0xda>
   815f8:	f04a 0a01 	orr.w	sl, sl, #1
   815fc:	f898 3000 	ldrb.w	r3, [r8]
   81600:	e51f      	b.n	81042 <_vfiprintf_r+0xda>
   81602:	9004      	str	r0, [sp, #16]
   81604:	f88d 1047 	strb.w	r1, [sp, #71]	; 0x47
   81608:	2b00      	cmp	r3, #0
   8160a:	f000 80f9 	beq.w	81800 <_vfiprintf_r+0x898>
   8160e:	2501      	movs	r5, #1
   81610:	f04f 0b00 	mov.w	fp, #0
   81614:	9503      	str	r5, [sp, #12]
   81616:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
   8161a:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   8161e:	9505      	str	r5, [sp, #20]
   81620:	af16      	add	r7, sp, #88	; 0x58
   81622:	e70e      	b.n	81442 <_vfiprintf_r+0x4da>
   81624:	9806      	ldr	r0, [sp, #24]
   81626:	9902      	ldr	r1, [sp, #8]
   81628:	aa13      	add	r2, sp, #76	; 0x4c
   8162a:	f7ff fc61 	bl	80ef0 <__sprint_r.part.0>
   8162e:	2800      	cmp	r0, #0
   81630:	f040 80ed 	bne.w	8180e <_vfiprintf_r+0x8a6>
   81634:	9814      	ldr	r0, [sp, #80]	; 0x50
   81636:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81638:	1c43      	adds	r3, r0, #1
   8163a:	46cc      	mov	ip, r9
   8163c:	e5fe      	b.n	8123c <_vfiprintf_r+0x2d4>
   8163e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81640:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81642:	1c59      	adds	r1, r3, #1
   81644:	f89d 0047 	ldrb.w	r0, [sp, #71]	; 0x47
   81648:	b168      	cbz	r0, 81666 <_vfiprintf_r+0x6fe>
   8164a:	3201      	adds	r2, #1
   8164c:	f10d 0047 	add.w	r0, sp, #71	; 0x47
   81650:	2301      	movs	r3, #1
   81652:	2907      	cmp	r1, #7
   81654:	9215      	str	r2, [sp, #84]	; 0x54
   81656:	9114      	str	r1, [sp, #80]	; 0x50
   81658:	e886 0009 	stmia.w	r6, {r0, r3}
   8165c:	f300 8160 	bgt.w	81920 <_vfiprintf_r+0x9b8>
   81660:	460b      	mov	r3, r1
   81662:	3608      	adds	r6, #8
   81664:	3101      	adds	r1, #1
   81666:	9c07      	ldr	r4, [sp, #28]
   81668:	b164      	cbz	r4, 81684 <_vfiprintf_r+0x71c>
   8166a:	3202      	adds	r2, #2
   8166c:	a812      	add	r0, sp, #72	; 0x48
   8166e:	2302      	movs	r3, #2
   81670:	2907      	cmp	r1, #7
   81672:	9215      	str	r2, [sp, #84]	; 0x54
   81674:	9114      	str	r1, [sp, #80]	; 0x50
   81676:	e886 0009 	stmia.w	r6, {r0, r3}
   8167a:	f300 8157 	bgt.w	8192c <_vfiprintf_r+0x9c4>
   8167e:	460b      	mov	r3, r1
   81680:	3608      	adds	r6, #8
   81682:	3101      	adds	r1, #1
   81684:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81686:	2d80      	cmp	r5, #128	; 0x80
   81688:	f000 8101 	beq.w	8188e <_vfiprintf_r+0x926>
   8168c:	9d05      	ldr	r5, [sp, #20]
   8168e:	ebc5 040c 	rsb	r4, r5, ip
   81692:	2c00      	cmp	r4, #0
   81694:	dd2f      	ble.n	816f6 <_vfiprintf_r+0x78e>
   81696:	2c10      	cmp	r4, #16
   81698:	4d57      	ldr	r5, [pc, #348]	; (817f8 <_vfiprintf_r+0x890>)
   8169a:	dd22      	ble.n	816e2 <_vfiprintf_r+0x77a>
   8169c:	4630      	mov	r0, r6
   8169e:	f04f 0b10 	mov.w	fp, #16
   816a2:	462e      	mov	r6, r5
   816a4:	4625      	mov	r5, r4
   816a6:	9c06      	ldr	r4, [sp, #24]
   816a8:	e006      	b.n	816b8 <_vfiprintf_r+0x750>
   816aa:	f103 0c02 	add.w	ip, r3, #2
   816ae:	3008      	adds	r0, #8
   816b0:	460b      	mov	r3, r1
   816b2:	3d10      	subs	r5, #16
   816b4:	2d10      	cmp	r5, #16
   816b6:	dd10      	ble.n	816da <_vfiprintf_r+0x772>
   816b8:	1c59      	adds	r1, r3, #1
   816ba:	3210      	adds	r2, #16
   816bc:	2907      	cmp	r1, #7
   816be:	9215      	str	r2, [sp, #84]	; 0x54
   816c0:	e880 0840 	stmia.w	r0, {r6, fp}
   816c4:	9114      	str	r1, [sp, #80]	; 0x50
   816c6:	ddf0      	ble.n	816aa <_vfiprintf_r+0x742>
   816c8:	2a00      	cmp	r2, #0
   816ca:	d163      	bne.n	81794 <_vfiprintf_r+0x82c>
   816cc:	3d10      	subs	r5, #16
   816ce:	2d10      	cmp	r5, #16
   816d0:	f04f 0c01 	mov.w	ip, #1
   816d4:	4613      	mov	r3, r2
   816d6:	4648      	mov	r0, r9
   816d8:	dcee      	bgt.n	816b8 <_vfiprintf_r+0x750>
   816da:	462c      	mov	r4, r5
   816dc:	4661      	mov	r1, ip
   816de:	4635      	mov	r5, r6
   816e0:	4606      	mov	r6, r0
   816e2:	4422      	add	r2, r4
   816e4:	2907      	cmp	r1, #7
   816e6:	9215      	str	r2, [sp, #84]	; 0x54
   816e8:	6035      	str	r5, [r6, #0]
   816ea:	6074      	str	r4, [r6, #4]
   816ec:	9114      	str	r1, [sp, #80]	; 0x50
   816ee:	f300 80c1 	bgt.w	81874 <_vfiprintf_r+0x90c>
   816f2:	3608      	adds	r6, #8
   816f4:	3101      	adds	r1, #1
   816f6:	9d05      	ldr	r5, [sp, #20]
   816f8:	2907      	cmp	r1, #7
   816fa:	442a      	add	r2, r5
   816fc:	9215      	str	r2, [sp, #84]	; 0x54
   816fe:	6037      	str	r7, [r6, #0]
   81700:	6075      	str	r5, [r6, #4]
   81702:	9114      	str	r1, [sp, #80]	; 0x50
   81704:	f340 80c1 	ble.w	8188a <_vfiprintf_r+0x922>
   81708:	2a00      	cmp	r2, #0
   8170a:	f040 8130 	bne.w	8196e <_vfiprintf_r+0xa06>
   8170e:	9214      	str	r2, [sp, #80]	; 0x50
   81710:	464e      	mov	r6, r9
   81712:	f01a 0f04 	tst.w	sl, #4
   81716:	f000 808b 	beq.w	81830 <_vfiprintf_r+0x8c8>
   8171a:	9d04      	ldr	r5, [sp, #16]
   8171c:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81720:	ebcb 0405 	rsb	r4, fp, r5
   81724:	2c00      	cmp	r4, #0
   81726:	f340 8083 	ble.w	81830 <_vfiprintf_r+0x8c8>
   8172a:	2c10      	cmp	r4, #16
   8172c:	f340 821e 	ble.w	81b6c <_vfiprintf_r+0xc04>
   81730:	9914      	ldr	r1, [sp, #80]	; 0x50
   81732:	4d32      	ldr	r5, [pc, #200]	; (817fc <_vfiprintf_r+0x894>)
   81734:	2710      	movs	r7, #16
   81736:	f8dd a018 	ldr.w	sl, [sp, #24]
   8173a:	f8dd b008 	ldr.w	fp, [sp, #8]
   8173e:	e005      	b.n	8174c <_vfiprintf_r+0x7e4>
   81740:	1c88      	adds	r0, r1, #2
   81742:	3608      	adds	r6, #8
   81744:	4619      	mov	r1, r3
   81746:	3c10      	subs	r4, #16
   81748:	2c10      	cmp	r4, #16
   8174a:	dd10      	ble.n	8176e <_vfiprintf_r+0x806>
   8174c:	1c4b      	adds	r3, r1, #1
   8174e:	3210      	adds	r2, #16
   81750:	2b07      	cmp	r3, #7
   81752:	9215      	str	r2, [sp, #84]	; 0x54
   81754:	e886 00a0 	stmia.w	r6, {r5, r7}
   81758:	9314      	str	r3, [sp, #80]	; 0x50
   8175a:	ddf1      	ble.n	81740 <_vfiprintf_r+0x7d8>
   8175c:	2a00      	cmp	r2, #0
   8175e:	d17d      	bne.n	8185c <_vfiprintf_r+0x8f4>
   81760:	3c10      	subs	r4, #16
   81762:	2c10      	cmp	r4, #16
   81764:	f04f 0001 	mov.w	r0, #1
   81768:	4611      	mov	r1, r2
   8176a:	464e      	mov	r6, r9
   8176c:	dcee      	bgt.n	8174c <_vfiprintf_r+0x7e4>
   8176e:	4422      	add	r2, r4
   81770:	2807      	cmp	r0, #7
   81772:	9215      	str	r2, [sp, #84]	; 0x54
   81774:	6035      	str	r5, [r6, #0]
   81776:	6074      	str	r4, [r6, #4]
   81778:	9014      	str	r0, [sp, #80]	; 0x50
   8177a:	dd59      	ble.n	81830 <_vfiprintf_r+0x8c8>
   8177c:	2a00      	cmp	r2, #0
   8177e:	d14f      	bne.n	81820 <_vfiprintf_r+0x8b8>
   81780:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81782:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81786:	9d04      	ldr	r5, [sp, #16]
   81788:	45ab      	cmp	fp, r5
   8178a:	bfac      	ite	ge
   8178c:	445c      	addge	r4, fp
   8178e:	1964      	addlt	r4, r4, r5
   81790:	9409      	str	r4, [sp, #36]	; 0x24
   81792:	e05e      	b.n	81852 <_vfiprintf_r+0x8ea>
   81794:	4620      	mov	r0, r4
   81796:	9902      	ldr	r1, [sp, #8]
   81798:	aa13      	add	r2, sp, #76	; 0x4c
   8179a:	f7ff fba9 	bl	80ef0 <__sprint_r.part.0>
   8179e:	2800      	cmp	r0, #0
   817a0:	d135      	bne.n	8180e <_vfiprintf_r+0x8a6>
   817a2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   817a4:	9a15      	ldr	r2, [sp, #84]	; 0x54
   817a6:	f103 0c01 	add.w	ip, r3, #1
   817aa:	4648      	mov	r0, r9
   817ac:	e781      	b.n	816b2 <_vfiprintf_r+0x74a>
   817ae:	08e0      	lsrs	r0, r4, #3
   817b0:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   817b4:	f004 0207 	and.w	r2, r4, #7
   817b8:	08e9      	lsrs	r1, r5, #3
   817ba:	3230      	adds	r2, #48	; 0x30
   817bc:	ea50 0b01 	orrs.w	fp, r0, r1
   817c0:	461f      	mov	r7, r3
   817c2:	701a      	strb	r2, [r3, #0]
   817c4:	4604      	mov	r4, r0
   817c6:	460d      	mov	r5, r1
   817c8:	f103 33ff 	add.w	r3, r3, #4294967295
   817cc:	d1ef      	bne.n	817ae <_vfiprintf_r+0x846>
   817ce:	f01a 0f01 	tst.w	sl, #1
   817d2:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   817d6:	4639      	mov	r1, r7
   817d8:	f000 80b9 	beq.w	8194e <_vfiprintf_r+0x9e6>
   817dc:	2a30      	cmp	r2, #48	; 0x30
   817de:	f43f acf4 	beq.w	811ca <_vfiprintf_r+0x262>
   817e2:	461f      	mov	r7, r3
   817e4:	ebc7 0509 	rsb	r5, r7, r9
   817e8:	2330      	movs	r3, #48	; 0x30
   817ea:	9505      	str	r5, [sp, #20]
   817ec:	f801 3c01 	strb.w	r3, [r1, #-1]
   817f0:	e4ee      	b.n	811d0 <_vfiprintf_r+0x268>
   817f2:	bf00      	nop
   817f4:	00083c44 	.word	0x00083c44
   817f8:	00083c60 	.word	0x00083c60
   817fc:	00083c70 	.word	0x00083c70
   81800:	9b15      	ldr	r3, [sp, #84]	; 0x54
   81802:	b123      	cbz	r3, 8180e <_vfiprintf_r+0x8a6>
   81804:	9806      	ldr	r0, [sp, #24]
   81806:	9902      	ldr	r1, [sp, #8]
   81808:	aa13      	add	r2, sp, #76	; 0x4c
   8180a:	f7ff fb71 	bl	80ef0 <__sprint_r.part.0>
   8180e:	9c02      	ldr	r4, [sp, #8]
   81810:	89a3      	ldrh	r3, [r4, #12]
   81812:	065b      	lsls	r3, r3, #25
   81814:	f53f ac98 	bmi.w	81148 <_vfiprintf_r+0x1e0>
   81818:	9809      	ldr	r0, [sp, #36]	; 0x24
   8181a:	b031      	add	sp, #196	; 0xc4
   8181c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81820:	9806      	ldr	r0, [sp, #24]
   81822:	9902      	ldr	r1, [sp, #8]
   81824:	aa13      	add	r2, sp, #76	; 0x4c
   81826:	f7ff fb63 	bl	80ef0 <__sprint_r.part.0>
   8182a:	2800      	cmp	r0, #0
   8182c:	d1ef      	bne.n	8180e <_vfiprintf_r+0x8a6>
   8182e:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81830:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81832:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81836:	9d04      	ldr	r5, [sp, #16]
   81838:	45ab      	cmp	fp, r5
   8183a:	bfac      	ite	ge
   8183c:	445c      	addge	r4, fp
   8183e:	1964      	addlt	r4, r4, r5
   81840:	9409      	str	r4, [sp, #36]	; 0x24
   81842:	b132      	cbz	r2, 81852 <_vfiprintf_r+0x8ea>
   81844:	9806      	ldr	r0, [sp, #24]
   81846:	9902      	ldr	r1, [sp, #8]
   81848:	aa13      	add	r2, sp, #76	; 0x4c
   8184a:	f7ff fb51 	bl	80ef0 <__sprint_r.part.0>
   8184e:	2800      	cmp	r0, #0
   81850:	d1dd      	bne.n	8180e <_vfiprintf_r+0x8a6>
   81852:	2000      	movs	r0, #0
   81854:	9014      	str	r0, [sp, #80]	; 0x50
   81856:	464e      	mov	r6, r9
   81858:	f7ff bbb9 	b.w	80fce <_vfiprintf_r+0x66>
   8185c:	4650      	mov	r0, sl
   8185e:	4659      	mov	r1, fp
   81860:	aa13      	add	r2, sp, #76	; 0x4c
   81862:	f7ff fb45 	bl	80ef0 <__sprint_r.part.0>
   81866:	2800      	cmp	r0, #0
   81868:	d1d1      	bne.n	8180e <_vfiprintf_r+0x8a6>
   8186a:	9914      	ldr	r1, [sp, #80]	; 0x50
   8186c:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8186e:	1c48      	adds	r0, r1, #1
   81870:	464e      	mov	r6, r9
   81872:	e768      	b.n	81746 <_vfiprintf_r+0x7de>
   81874:	2a00      	cmp	r2, #0
   81876:	f040 80f7 	bne.w	81a68 <_vfiprintf_r+0xb00>
   8187a:	9c05      	ldr	r4, [sp, #20]
   8187c:	2301      	movs	r3, #1
   8187e:	9720      	str	r7, [sp, #128]	; 0x80
   81880:	9421      	str	r4, [sp, #132]	; 0x84
   81882:	9415      	str	r4, [sp, #84]	; 0x54
   81884:	4622      	mov	r2, r4
   81886:	9314      	str	r3, [sp, #80]	; 0x50
   81888:	464e      	mov	r6, r9
   8188a:	3608      	adds	r6, #8
   8188c:	e741      	b.n	81712 <_vfiprintf_r+0x7aa>
   8188e:	9d04      	ldr	r5, [sp, #16]
   81890:	f8dd b00c 	ldr.w	fp, [sp, #12]
   81894:	ebcb 0405 	rsb	r4, fp, r5
   81898:	2c00      	cmp	r4, #0
   8189a:	f77f aef7 	ble.w	8168c <_vfiprintf_r+0x724>
   8189e:	2c10      	cmp	r4, #16
   818a0:	4da6      	ldr	r5, [pc, #664]	; (81b3c <_vfiprintf_r+0xbd4>)
   818a2:	f340 8170 	ble.w	81b86 <_vfiprintf_r+0xc1e>
   818a6:	4629      	mov	r1, r5
   818a8:	f04f 0b10 	mov.w	fp, #16
   818ac:	4625      	mov	r5, r4
   818ae:	4664      	mov	r4, ip
   818b0:	46b4      	mov	ip, r6
   818b2:	460e      	mov	r6, r1
   818b4:	e006      	b.n	818c4 <_vfiprintf_r+0x95c>
   818b6:	1c98      	adds	r0, r3, #2
   818b8:	f10c 0c08 	add.w	ip, ip, #8
   818bc:	460b      	mov	r3, r1
   818be:	3d10      	subs	r5, #16
   818c0:	2d10      	cmp	r5, #16
   818c2:	dd0f      	ble.n	818e4 <_vfiprintf_r+0x97c>
   818c4:	1c59      	adds	r1, r3, #1
   818c6:	3210      	adds	r2, #16
   818c8:	2907      	cmp	r1, #7
   818ca:	9215      	str	r2, [sp, #84]	; 0x54
   818cc:	e88c 0840 	stmia.w	ip, {r6, fp}
   818d0:	9114      	str	r1, [sp, #80]	; 0x50
   818d2:	ddf0      	ble.n	818b6 <_vfiprintf_r+0x94e>
   818d4:	b9ba      	cbnz	r2, 81906 <_vfiprintf_r+0x99e>
   818d6:	3d10      	subs	r5, #16
   818d8:	2d10      	cmp	r5, #16
   818da:	f04f 0001 	mov.w	r0, #1
   818de:	4613      	mov	r3, r2
   818e0:	46cc      	mov	ip, r9
   818e2:	dcef      	bgt.n	818c4 <_vfiprintf_r+0x95c>
   818e4:	4633      	mov	r3, r6
   818e6:	4666      	mov	r6, ip
   818e8:	46a4      	mov	ip, r4
   818ea:	462c      	mov	r4, r5
   818ec:	461d      	mov	r5, r3
   818ee:	4422      	add	r2, r4
   818f0:	2807      	cmp	r0, #7
   818f2:	9215      	str	r2, [sp, #84]	; 0x54
   818f4:	6035      	str	r5, [r6, #0]
   818f6:	6074      	str	r4, [r6, #4]
   818f8:	9014      	str	r0, [sp, #80]	; 0x50
   818fa:	f300 80af 	bgt.w	81a5c <_vfiprintf_r+0xaf4>
   818fe:	3608      	adds	r6, #8
   81900:	1c41      	adds	r1, r0, #1
   81902:	4603      	mov	r3, r0
   81904:	e6c2      	b.n	8168c <_vfiprintf_r+0x724>
   81906:	9806      	ldr	r0, [sp, #24]
   81908:	9902      	ldr	r1, [sp, #8]
   8190a:	aa13      	add	r2, sp, #76	; 0x4c
   8190c:	f7ff faf0 	bl	80ef0 <__sprint_r.part.0>
   81910:	2800      	cmp	r0, #0
   81912:	f47f af7c 	bne.w	8180e <_vfiprintf_r+0x8a6>
   81916:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81918:	9a15      	ldr	r2, [sp, #84]	; 0x54
   8191a:	1c58      	adds	r0, r3, #1
   8191c:	46cc      	mov	ip, r9
   8191e:	e7ce      	b.n	818be <_vfiprintf_r+0x956>
   81920:	2a00      	cmp	r2, #0
   81922:	d179      	bne.n	81a18 <_vfiprintf_r+0xab0>
   81924:	4619      	mov	r1, r3
   81926:	464e      	mov	r6, r9
   81928:	4613      	mov	r3, r2
   8192a:	e69c      	b.n	81666 <_vfiprintf_r+0x6fe>
   8192c:	2a00      	cmp	r2, #0
   8192e:	f040 8084 	bne.w	81a3a <_vfiprintf_r+0xad2>
   81932:	2101      	movs	r1, #1
   81934:	4613      	mov	r3, r2
   81936:	464e      	mov	r6, r9
   81938:	e6a4      	b.n	81684 <_vfiprintf_r+0x71c>
   8193a:	464f      	mov	r7, r9
   8193c:	e448      	b.n	811d0 <_vfiprintf_r+0x268>
   8193e:	2d00      	cmp	r5, #0
   81940:	bf08      	it	eq
   81942:	2c0a      	cmpeq	r4, #10
   81944:	d246      	bcs.n	819d4 <_vfiprintf_r+0xa6c>
   81946:	3430      	adds	r4, #48	; 0x30
   81948:	af30      	add	r7, sp, #192	; 0xc0
   8194a:	f807 4d41 	strb.w	r4, [r7, #-65]!
   8194e:	ebc7 0309 	rsb	r3, r7, r9
   81952:	9305      	str	r3, [sp, #20]
   81954:	e43c      	b.n	811d0 <_vfiprintf_r+0x268>
   81956:	2302      	movs	r3, #2
   81958:	e417      	b.n	8118a <_vfiprintf_r+0x222>
   8195a:	2a00      	cmp	r2, #0
   8195c:	f040 80af 	bne.w	81abe <_vfiprintf_r+0xb56>
   81960:	4613      	mov	r3, r2
   81962:	2101      	movs	r1, #1
   81964:	464e      	mov	r6, r9
   81966:	e66d      	b.n	81644 <_vfiprintf_r+0x6dc>
   81968:	4644      	mov	r4, r8
   8196a:	f7ff bb58 	b.w	8101e <_vfiprintf_r+0xb6>
   8196e:	9806      	ldr	r0, [sp, #24]
   81970:	9902      	ldr	r1, [sp, #8]
   81972:	aa13      	add	r2, sp, #76	; 0x4c
   81974:	f7ff fabc 	bl	80ef0 <__sprint_r.part.0>
   81978:	2800      	cmp	r0, #0
   8197a:	f47f af48 	bne.w	8180e <_vfiprintf_r+0x8a6>
   8197e:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81980:	464e      	mov	r6, r9
   81982:	e6c6      	b.n	81712 <_vfiprintf_r+0x7aa>
   81984:	9d08      	ldr	r5, [sp, #32]
   81986:	682c      	ldr	r4, [r5, #0]
   81988:	3504      	adds	r5, #4
   8198a:	9508      	str	r5, [sp, #32]
   8198c:	2500      	movs	r5, #0
   8198e:	f7ff bbfc 	b.w	8118a <_vfiprintf_r+0x222>
   81992:	9d08      	ldr	r5, [sp, #32]
   81994:	2301      	movs	r3, #1
   81996:	682c      	ldr	r4, [r5, #0]
   81998:	3504      	adds	r5, #4
   8199a:	9508      	str	r5, [sp, #32]
   8199c:	2500      	movs	r5, #0
   8199e:	f7ff bbf4 	b.w	8118a <_vfiprintf_r+0x222>
   819a2:	9d08      	ldr	r5, [sp, #32]
   819a4:	682c      	ldr	r4, [r5, #0]
   819a6:	3504      	adds	r5, #4
   819a8:	9508      	str	r5, [sp, #32]
   819aa:	2500      	movs	r5, #0
   819ac:	e525      	b.n	813fa <_vfiprintf_r+0x492>
   819ae:	9d08      	ldr	r5, [sp, #32]
   819b0:	682c      	ldr	r4, [r5, #0]
   819b2:	3504      	adds	r5, #4
   819b4:	9508      	str	r5, [sp, #32]
   819b6:	17e5      	asrs	r5, r4, #31
   819b8:	4622      	mov	r2, r4
   819ba:	462b      	mov	r3, r5
   819bc:	e48e      	b.n	812dc <_vfiprintf_r+0x374>
   819be:	9806      	ldr	r0, [sp, #24]
   819c0:	9902      	ldr	r1, [sp, #8]
   819c2:	aa13      	add	r2, sp, #76	; 0x4c
   819c4:	f7ff fa94 	bl	80ef0 <__sprint_r.part.0>
   819c8:	2800      	cmp	r0, #0
   819ca:	f47f af20 	bne.w	8180e <_vfiprintf_r+0x8a6>
   819ce:	464e      	mov	r6, r9
   819d0:	f7ff bb9a 	b.w	81108 <_vfiprintf_r+0x1a0>
   819d4:	f10d 0b7f 	add.w	fp, sp, #127	; 0x7f
   819d8:	9603      	str	r6, [sp, #12]
   819da:	465e      	mov	r6, fp
   819dc:	46e3      	mov	fp, ip
   819de:	4620      	mov	r0, r4
   819e0:	4629      	mov	r1, r5
   819e2:	220a      	movs	r2, #10
   819e4:	2300      	movs	r3, #0
   819e6:	f001 fe2f 	bl	83648 <__aeabi_uldivmod>
   819ea:	3230      	adds	r2, #48	; 0x30
   819ec:	7032      	strb	r2, [r6, #0]
   819ee:	4620      	mov	r0, r4
   819f0:	4629      	mov	r1, r5
   819f2:	220a      	movs	r2, #10
   819f4:	2300      	movs	r3, #0
   819f6:	f001 fe27 	bl	83648 <__aeabi_uldivmod>
   819fa:	4604      	mov	r4, r0
   819fc:	460d      	mov	r5, r1
   819fe:	ea54 0005 	orrs.w	r0, r4, r5
   81a02:	4637      	mov	r7, r6
   81a04:	f106 36ff 	add.w	r6, r6, #4294967295
   81a08:	d1e9      	bne.n	819de <_vfiprintf_r+0xa76>
   81a0a:	ebc7 0309 	rsb	r3, r7, r9
   81a0e:	46dc      	mov	ip, fp
   81a10:	9e03      	ldr	r6, [sp, #12]
   81a12:	9305      	str	r3, [sp, #20]
   81a14:	f7ff bbdc 	b.w	811d0 <_vfiprintf_r+0x268>
   81a18:	9806      	ldr	r0, [sp, #24]
   81a1a:	9902      	ldr	r1, [sp, #8]
   81a1c:	aa13      	add	r2, sp, #76	; 0x4c
   81a1e:	f8cd c004 	str.w	ip, [sp, #4]
   81a22:	f7ff fa65 	bl	80ef0 <__sprint_r.part.0>
   81a26:	f8dd c004 	ldr.w	ip, [sp, #4]
   81a2a:	2800      	cmp	r0, #0
   81a2c:	f47f aeef 	bne.w	8180e <_vfiprintf_r+0x8a6>
   81a30:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81a32:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81a34:	1c59      	adds	r1, r3, #1
   81a36:	464e      	mov	r6, r9
   81a38:	e615      	b.n	81666 <_vfiprintf_r+0x6fe>
   81a3a:	9806      	ldr	r0, [sp, #24]
   81a3c:	9902      	ldr	r1, [sp, #8]
   81a3e:	aa13      	add	r2, sp, #76	; 0x4c
   81a40:	f8cd c004 	str.w	ip, [sp, #4]
   81a44:	f7ff fa54 	bl	80ef0 <__sprint_r.part.0>
   81a48:	f8dd c004 	ldr.w	ip, [sp, #4]
   81a4c:	2800      	cmp	r0, #0
   81a4e:	f47f aede 	bne.w	8180e <_vfiprintf_r+0x8a6>
   81a52:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81a54:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81a56:	1c59      	adds	r1, r3, #1
   81a58:	464e      	mov	r6, r9
   81a5a:	e613      	b.n	81684 <_vfiprintf_r+0x71c>
   81a5c:	2a00      	cmp	r2, #0
   81a5e:	d156      	bne.n	81b0e <_vfiprintf_r+0xba6>
   81a60:	2101      	movs	r1, #1
   81a62:	4613      	mov	r3, r2
   81a64:	464e      	mov	r6, r9
   81a66:	e611      	b.n	8168c <_vfiprintf_r+0x724>
   81a68:	9806      	ldr	r0, [sp, #24]
   81a6a:	9902      	ldr	r1, [sp, #8]
   81a6c:	aa13      	add	r2, sp, #76	; 0x4c
   81a6e:	f7ff fa3f 	bl	80ef0 <__sprint_r.part.0>
   81a72:	2800      	cmp	r0, #0
   81a74:	f47f aecb 	bne.w	8180e <_vfiprintf_r+0x8a6>
   81a78:	9914      	ldr	r1, [sp, #80]	; 0x50
   81a7a:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81a7c:	3101      	adds	r1, #1
   81a7e:	464e      	mov	r6, r9
   81a80:	e639      	b.n	816f6 <_vfiprintf_r+0x78e>
   81a82:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   81a86:	4264      	negs	r4, r4
   81a88:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   81a8c:	f88d b047 	strb.w	fp, [sp, #71]	; 0x47
   81a90:	f8cd b01c 	str.w	fp, [sp, #28]
   81a94:	f8cd c014 	str.w	ip, [sp, #20]
   81a98:	2301      	movs	r3, #1
   81a9a:	f7ff bb7e 	b.w	8119a <_vfiprintf_r+0x232>
   81a9e:	f01a 0f10 	tst.w	sl, #16
   81aa2:	d11d      	bne.n	81ae0 <_vfiprintf_r+0xb78>
   81aa4:	f01a 0f40 	tst.w	sl, #64	; 0x40
   81aa8:	d058      	beq.n	81b5c <_vfiprintf_r+0xbf4>
   81aaa:	9d08      	ldr	r5, [sp, #32]
   81aac:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   81ab0:	682b      	ldr	r3, [r5, #0]
   81ab2:	3504      	adds	r5, #4
   81ab4:	9508      	str	r5, [sp, #32]
   81ab6:	f8a3 b000 	strh.w	fp, [r3]
   81aba:	f7ff ba88 	b.w	80fce <_vfiprintf_r+0x66>
   81abe:	9806      	ldr	r0, [sp, #24]
   81ac0:	9902      	ldr	r1, [sp, #8]
   81ac2:	aa13      	add	r2, sp, #76	; 0x4c
   81ac4:	f8cd c004 	str.w	ip, [sp, #4]
   81ac8:	f7ff fa12 	bl	80ef0 <__sprint_r.part.0>
   81acc:	f8dd c004 	ldr.w	ip, [sp, #4]
   81ad0:	2800      	cmp	r0, #0
   81ad2:	f47f ae9c 	bne.w	8180e <_vfiprintf_r+0x8a6>
   81ad6:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81ad8:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81ada:	1c59      	adds	r1, r3, #1
   81adc:	464e      	mov	r6, r9
   81ade:	e5b1      	b.n	81644 <_vfiprintf_r+0x6dc>
   81ae0:	f8dd b020 	ldr.w	fp, [sp, #32]
   81ae4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81ae6:	f8db 3000 	ldr.w	r3, [fp]
   81aea:	f10b 0b04 	add.w	fp, fp, #4
   81aee:	f8cd b020 	str.w	fp, [sp, #32]
   81af2:	601c      	str	r4, [r3, #0]
   81af4:	f7ff ba6b 	b.w	80fce <_vfiprintf_r+0x66>
   81af8:	9408      	str	r4, [sp, #32]
   81afa:	f7ff f9c9 	bl	80e90 <strlen>
   81afe:	f89d 4047 	ldrb.w	r4, [sp, #71]	; 0x47
   81b02:	9005      	str	r0, [sp, #20]
   81b04:	9407      	str	r4, [sp, #28]
   81b06:	f04f 0c00 	mov.w	ip, #0
   81b0a:	f7ff bb61 	b.w	811d0 <_vfiprintf_r+0x268>
   81b0e:	9806      	ldr	r0, [sp, #24]
   81b10:	9902      	ldr	r1, [sp, #8]
   81b12:	aa13      	add	r2, sp, #76	; 0x4c
   81b14:	f8cd c004 	str.w	ip, [sp, #4]
   81b18:	f7ff f9ea 	bl	80ef0 <__sprint_r.part.0>
   81b1c:	f8dd c004 	ldr.w	ip, [sp, #4]
   81b20:	2800      	cmp	r0, #0
   81b22:	f47f ae74 	bne.w	8180e <_vfiprintf_r+0x8a6>
   81b26:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81b28:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81b2a:	1c59      	adds	r1, r3, #1
   81b2c:	464e      	mov	r6, r9
   81b2e:	e5ad      	b.n	8168c <_vfiprintf_r+0x724>
   81b30:	9b14      	ldr	r3, [sp, #80]	; 0x50
   81b32:	9a15      	ldr	r2, [sp, #84]	; 0x54
   81b34:	3301      	adds	r3, #1
   81b36:	4d02      	ldr	r5, [pc, #8]	; (81b40 <_vfiprintf_r+0xbd8>)
   81b38:	f7ff bb9a 	b.w	81270 <_vfiprintf_r+0x308>
   81b3c:	00083c60 	.word	0x00083c60
   81b40:	00083c70 	.word	0x00083c70
   81b44:	f1bc 0f06 	cmp.w	ip, #6
   81b48:	bf34      	ite	cc
   81b4a:	4663      	movcc	r3, ip
   81b4c:	2306      	movcs	r3, #6
   81b4e:	9408      	str	r4, [sp, #32]
   81b50:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
   81b54:	9305      	str	r3, [sp, #20]
   81b56:	9403      	str	r4, [sp, #12]
   81b58:	4f16      	ldr	r7, [pc, #88]	; (81bb4 <_vfiprintf_r+0xc4c>)
   81b5a:	e472      	b.n	81442 <_vfiprintf_r+0x4da>
   81b5c:	9c08      	ldr	r4, [sp, #32]
   81b5e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81b60:	6823      	ldr	r3, [r4, #0]
   81b62:	3404      	adds	r4, #4
   81b64:	9408      	str	r4, [sp, #32]
   81b66:	601d      	str	r5, [r3, #0]
   81b68:	f7ff ba31 	b.w	80fce <_vfiprintf_r+0x66>
   81b6c:	9814      	ldr	r0, [sp, #80]	; 0x50
   81b6e:	4d12      	ldr	r5, [pc, #72]	; (81bb8 <_vfiprintf_r+0xc50>)
   81b70:	3001      	adds	r0, #1
   81b72:	e5fc      	b.n	8176e <_vfiprintf_r+0x806>
   81b74:	f89d 5047 	ldrb.w	r5, [sp, #71]	; 0x47
   81b78:	f8cd c014 	str.w	ip, [sp, #20]
   81b7c:	9507      	str	r5, [sp, #28]
   81b7e:	9408      	str	r4, [sp, #32]
   81b80:	4684      	mov	ip, r0
   81b82:	f7ff bb25 	b.w	811d0 <_vfiprintf_r+0x268>
   81b86:	4608      	mov	r0, r1
   81b88:	e6b1      	b.n	818ee <_vfiprintf_r+0x986>
   81b8a:	46a0      	mov	r8, r4
   81b8c:	2500      	movs	r5, #0
   81b8e:	f7ff ba5a 	b.w	81046 <_vfiprintf_r+0xde>
   81b92:	f8dd b020 	ldr.w	fp, [sp, #32]
   81b96:	f898 3001 	ldrb.w	r3, [r8, #1]
   81b9a:	f8db 5000 	ldr.w	r5, [fp]
   81b9e:	f10b 0204 	add.w	r2, fp, #4
   81ba2:	2d00      	cmp	r5, #0
   81ba4:	9208      	str	r2, [sp, #32]
   81ba6:	46a0      	mov	r8, r4
   81ba8:	f6bf aa4b 	bge.w	81042 <_vfiprintf_r+0xda>
   81bac:	f04f 35ff 	mov.w	r5, #4294967295
   81bb0:	f7ff ba47 	b.w	81042 <_vfiprintf_r+0xda>
   81bb4:	00083c58 	.word	0x00083c58
   81bb8:	00083c70 	.word	0x00083c70

00081bbc <__sbprintf>:
   81bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   81bc0:	6e4f      	ldr	r7, [r1, #100]	; 0x64
   81bc2:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   81bc6:	4688      	mov	r8, r1
   81bc8:	9719      	str	r7, [sp, #100]	; 0x64
   81bca:	f8d8 701c 	ldr.w	r7, [r8, #28]
   81bce:	f8b1 a00c 	ldrh.w	sl, [r1, #12]
   81bd2:	f8b1 900e 	ldrh.w	r9, [r1, #14]
   81bd6:	9707      	str	r7, [sp, #28]
   81bd8:	f8d8 7024 	ldr.w	r7, [r8, #36]	; 0x24
   81bdc:	ac1a      	add	r4, sp, #104	; 0x68
   81bde:	f44f 6580 	mov.w	r5, #1024	; 0x400
   81be2:	f02a 0a02 	bic.w	sl, sl, #2
   81be6:	2600      	movs	r6, #0
   81be8:	4669      	mov	r1, sp
   81bea:	9400      	str	r4, [sp, #0]
   81bec:	9404      	str	r4, [sp, #16]
   81bee:	9502      	str	r5, [sp, #8]
   81bf0:	9505      	str	r5, [sp, #20]
   81bf2:	f8ad a00c 	strh.w	sl, [sp, #12]
   81bf6:	f8ad 900e 	strh.w	r9, [sp, #14]
   81bfa:	9709      	str	r7, [sp, #36]	; 0x24
   81bfc:	9606      	str	r6, [sp, #24]
   81bfe:	4605      	mov	r5, r0
   81c00:	f7ff f9b2 	bl	80f68 <_vfiprintf_r>
   81c04:	1e04      	subs	r4, r0, #0
   81c06:	db07      	blt.n	81c18 <__sbprintf+0x5c>
   81c08:	4628      	mov	r0, r5
   81c0a:	4669      	mov	r1, sp
   81c0c:	f000 f92a 	bl	81e64 <_fflush_r>
   81c10:	42b0      	cmp	r0, r6
   81c12:	bf18      	it	ne
   81c14:	f04f 34ff 	movne.w	r4, #4294967295
   81c18:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   81c1c:	065b      	lsls	r3, r3, #25
   81c1e:	d505      	bpl.n	81c2c <__sbprintf+0x70>
   81c20:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   81c24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81c28:	f8a8 300c 	strh.w	r3, [r8, #12]
   81c2c:	4620      	mov	r0, r4
   81c2e:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   81c32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   81c36:	bf00      	nop

00081c38 <__swsetup_r>:
   81c38:	4b2f      	ldr	r3, [pc, #188]	; (81cf8 <__swsetup_r+0xc0>)
   81c3a:	b570      	push	{r4, r5, r6, lr}
   81c3c:	4606      	mov	r6, r0
   81c3e:	6818      	ldr	r0, [r3, #0]
   81c40:	460c      	mov	r4, r1
   81c42:	b110      	cbz	r0, 81c4a <__swsetup_r+0x12>
   81c44:	6b82      	ldr	r2, [r0, #56]	; 0x38
   81c46:	2a00      	cmp	r2, #0
   81c48:	d036      	beq.n	81cb8 <__swsetup_r+0x80>
   81c4a:	89a5      	ldrh	r5, [r4, #12]
   81c4c:	b2ab      	uxth	r3, r5
   81c4e:	0719      	lsls	r1, r3, #28
   81c50:	d50c      	bpl.n	81c6c <__swsetup_r+0x34>
   81c52:	6922      	ldr	r2, [r4, #16]
   81c54:	b1aa      	cbz	r2, 81c82 <__swsetup_r+0x4a>
   81c56:	f013 0101 	ands.w	r1, r3, #1
   81c5a:	d01e      	beq.n	81c9a <__swsetup_r+0x62>
   81c5c:	6963      	ldr	r3, [r4, #20]
   81c5e:	2100      	movs	r1, #0
   81c60:	425b      	negs	r3, r3
   81c62:	61a3      	str	r3, [r4, #24]
   81c64:	60a1      	str	r1, [r4, #8]
   81c66:	b1f2      	cbz	r2, 81ca6 <__swsetup_r+0x6e>
   81c68:	2000      	movs	r0, #0
   81c6a:	bd70      	pop	{r4, r5, r6, pc}
   81c6c:	06da      	lsls	r2, r3, #27
   81c6e:	d53a      	bpl.n	81ce6 <__swsetup_r+0xae>
   81c70:	075b      	lsls	r3, r3, #29
   81c72:	d424      	bmi.n	81cbe <__swsetup_r+0x86>
   81c74:	6922      	ldr	r2, [r4, #16]
   81c76:	f045 0308 	orr.w	r3, r5, #8
   81c7a:	81a3      	strh	r3, [r4, #12]
   81c7c:	b29b      	uxth	r3, r3
   81c7e:	2a00      	cmp	r2, #0
   81c80:	d1e9      	bne.n	81c56 <__swsetup_r+0x1e>
   81c82:	f403 7120 	and.w	r1, r3, #640	; 0x280
   81c86:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   81c8a:	d0e4      	beq.n	81c56 <__swsetup_r+0x1e>
   81c8c:	4630      	mov	r0, r6
   81c8e:	4621      	mov	r1, r4
   81c90:	f000 fcce 	bl	82630 <__smakebuf_r>
   81c94:	89a3      	ldrh	r3, [r4, #12]
   81c96:	6922      	ldr	r2, [r4, #16]
   81c98:	e7dd      	b.n	81c56 <__swsetup_r+0x1e>
   81c9a:	0798      	lsls	r0, r3, #30
   81c9c:	bf58      	it	pl
   81c9e:	6961      	ldrpl	r1, [r4, #20]
   81ca0:	60a1      	str	r1, [r4, #8]
   81ca2:	2a00      	cmp	r2, #0
   81ca4:	d1e0      	bne.n	81c68 <__swsetup_r+0x30>
   81ca6:	89a3      	ldrh	r3, [r4, #12]
   81ca8:	061a      	lsls	r2, r3, #24
   81caa:	d5dd      	bpl.n	81c68 <__swsetup_r+0x30>
   81cac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81cb0:	81a3      	strh	r3, [r4, #12]
   81cb2:	f04f 30ff 	mov.w	r0, #4294967295
   81cb6:	bd70      	pop	{r4, r5, r6, pc}
   81cb8:	f000 f8f0 	bl	81e9c <__sinit>
   81cbc:	e7c5      	b.n	81c4a <__swsetup_r+0x12>
   81cbe:	6b21      	ldr	r1, [r4, #48]	; 0x30
   81cc0:	b149      	cbz	r1, 81cd6 <__swsetup_r+0x9e>
   81cc2:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81cc6:	4299      	cmp	r1, r3
   81cc8:	d003      	beq.n	81cd2 <__swsetup_r+0x9a>
   81cca:	4630      	mov	r0, r6
   81ccc:	f000 fa2a 	bl	82124 <_free_r>
   81cd0:	89a5      	ldrh	r5, [r4, #12]
   81cd2:	2300      	movs	r3, #0
   81cd4:	6323      	str	r3, [r4, #48]	; 0x30
   81cd6:	6922      	ldr	r2, [r4, #16]
   81cd8:	f025 0524 	bic.w	r5, r5, #36	; 0x24
   81cdc:	2100      	movs	r1, #0
   81cde:	b2ad      	uxth	r5, r5
   81ce0:	6022      	str	r2, [r4, #0]
   81ce2:	6061      	str	r1, [r4, #4]
   81ce4:	e7c7      	b.n	81c76 <__swsetup_r+0x3e>
   81ce6:	f045 0540 	orr.w	r5, r5, #64	; 0x40
   81cea:	2309      	movs	r3, #9
   81cec:	6033      	str	r3, [r6, #0]
   81cee:	f04f 30ff 	mov.w	r0, #4294967295
   81cf2:	81a5      	strh	r5, [r4, #12]
   81cf4:	bd70      	pop	{r4, r5, r6, pc}
   81cf6:	bf00      	nop
   81cf8:	20070568 	.word	0x20070568

00081cfc <register_fini>:
   81cfc:	4b02      	ldr	r3, [pc, #8]	; (81d08 <register_fini+0xc>)
   81cfe:	b113      	cbz	r3, 81d06 <register_fini+0xa>
   81d00:	4802      	ldr	r0, [pc, #8]	; (81d0c <register_fini+0x10>)
   81d02:	f000 b805 	b.w	81d10 <atexit>
   81d06:	4770      	bx	lr
   81d08:	00000000 	.word	0x00000000
   81d0c:	00081f99 	.word	0x00081f99

00081d10 <atexit>:
   81d10:	4601      	mov	r1, r0
   81d12:	2000      	movs	r0, #0
   81d14:	4602      	mov	r2, r0
   81d16:	4603      	mov	r3, r0
   81d18:	f001 bb9a 	b.w	83450 <__register_exitproc>

00081d1c <__sflush_r>:
   81d1c:	898b      	ldrh	r3, [r1, #12]
   81d1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81d22:	b29a      	uxth	r2, r3
   81d24:	460d      	mov	r5, r1
   81d26:	0711      	lsls	r1, r2, #28
   81d28:	4680      	mov	r8, r0
   81d2a:	d43c      	bmi.n	81da6 <__sflush_r+0x8a>
   81d2c:	686a      	ldr	r2, [r5, #4]
   81d2e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   81d32:	2a00      	cmp	r2, #0
   81d34:	81ab      	strh	r3, [r5, #12]
   81d36:	dd59      	ble.n	81dec <__sflush_r+0xd0>
   81d38:	6aac      	ldr	r4, [r5, #40]	; 0x28
   81d3a:	2c00      	cmp	r4, #0
   81d3c:	d04b      	beq.n	81dd6 <__sflush_r+0xba>
   81d3e:	b29b      	uxth	r3, r3
   81d40:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
   81d44:	2100      	movs	r1, #0
   81d46:	b292      	uxth	r2, r2
   81d48:	f8d8 6000 	ldr.w	r6, [r8]
   81d4c:	f8c8 1000 	str.w	r1, [r8]
   81d50:	2a00      	cmp	r2, #0
   81d52:	d04f      	beq.n	81df4 <__sflush_r+0xd8>
   81d54:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   81d56:	075f      	lsls	r7, r3, #29
   81d58:	d505      	bpl.n	81d66 <__sflush_r+0x4a>
   81d5a:	6869      	ldr	r1, [r5, #4]
   81d5c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   81d5e:	1a52      	subs	r2, r2, r1
   81d60:	b10b      	cbz	r3, 81d66 <__sflush_r+0x4a>
   81d62:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   81d64:	1ad2      	subs	r2, r2, r3
   81d66:	4640      	mov	r0, r8
   81d68:	69e9      	ldr	r1, [r5, #28]
   81d6a:	2300      	movs	r3, #0
   81d6c:	47a0      	blx	r4
   81d6e:	1c44      	adds	r4, r0, #1
   81d70:	d04a      	beq.n	81e08 <__sflush_r+0xec>
   81d72:	89ab      	ldrh	r3, [r5, #12]
   81d74:	692a      	ldr	r2, [r5, #16]
   81d76:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   81d7a:	b29b      	uxth	r3, r3
   81d7c:	2100      	movs	r1, #0
   81d7e:	602a      	str	r2, [r5, #0]
   81d80:	04da      	lsls	r2, r3, #19
   81d82:	81ab      	strh	r3, [r5, #12]
   81d84:	6069      	str	r1, [r5, #4]
   81d86:	d44c      	bmi.n	81e22 <__sflush_r+0x106>
   81d88:	6b29      	ldr	r1, [r5, #48]	; 0x30
   81d8a:	f8c8 6000 	str.w	r6, [r8]
   81d8e:	b311      	cbz	r1, 81dd6 <__sflush_r+0xba>
   81d90:	f105 0340 	add.w	r3, r5, #64	; 0x40
   81d94:	4299      	cmp	r1, r3
   81d96:	d002      	beq.n	81d9e <__sflush_r+0x82>
   81d98:	4640      	mov	r0, r8
   81d9a:	f000 f9c3 	bl	82124 <_free_r>
   81d9e:	2000      	movs	r0, #0
   81da0:	6328      	str	r0, [r5, #48]	; 0x30
   81da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81da6:	692e      	ldr	r6, [r5, #16]
   81da8:	b1ae      	cbz	r6, 81dd6 <__sflush_r+0xba>
   81daa:	0791      	lsls	r1, r2, #30
   81dac:	682c      	ldr	r4, [r5, #0]
   81dae:	bf0c      	ite	eq
   81db0:	696b      	ldreq	r3, [r5, #20]
   81db2:	2300      	movne	r3, #0
   81db4:	602e      	str	r6, [r5, #0]
   81db6:	1ba4      	subs	r4, r4, r6
   81db8:	60ab      	str	r3, [r5, #8]
   81dba:	e00a      	b.n	81dd2 <__sflush_r+0xb6>
   81dbc:	4632      	mov	r2, r6
   81dbe:	4623      	mov	r3, r4
   81dc0:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   81dc2:	4640      	mov	r0, r8
   81dc4:	69e9      	ldr	r1, [r5, #28]
   81dc6:	47b8      	blx	r7
   81dc8:	2800      	cmp	r0, #0
   81dca:	ebc0 0404 	rsb	r4, r0, r4
   81dce:	4406      	add	r6, r0
   81dd0:	dd04      	ble.n	81ddc <__sflush_r+0xc0>
   81dd2:	2c00      	cmp	r4, #0
   81dd4:	dcf2      	bgt.n	81dbc <__sflush_r+0xa0>
   81dd6:	2000      	movs	r0, #0
   81dd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81ddc:	89ab      	ldrh	r3, [r5, #12]
   81dde:	f04f 30ff 	mov.w	r0, #4294967295
   81de2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81de6:	81ab      	strh	r3, [r5, #12]
   81de8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81dec:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   81dee:	2a00      	cmp	r2, #0
   81df0:	dca2      	bgt.n	81d38 <__sflush_r+0x1c>
   81df2:	e7f0      	b.n	81dd6 <__sflush_r+0xba>
   81df4:	2301      	movs	r3, #1
   81df6:	4640      	mov	r0, r8
   81df8:	69e9      	ldr	r1, [r5, #28]
   81dfa:	47a0      	blx	r4
   81dfc:	1c43      	adds	r3, r0, #1
   81dfe:	4602      	mov	r2, r0
   81e00:	d01e      	beq.n	81e40 <__sflush_r+0x124>
   81e02:	89ab      	ldrh	r3, [r5, #12]
   81e04:	6aac      	ldr	r4, [r5, #40]	; 0x28
   81e06:	e7a6      	b.n	81d56 <__sflush_r+0x3a>
   81e08:	f8d8 3000 	ldr.w	r3, [r8]
   81e0c:	b95b      	cbnz	r3, 81e26 <__sflush_r+0x10a>
   81e0e:	89aa      	ldrh	r2, [r5, #12]
   81e10:	6929      	ldr	r1, [r5, #16]
   81e12:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   81e16:	b292      	uxth	r2, r2
   81e18:	606b      	str	r3, [r5, #4]
   81e1a:	04d3      	lsls	r3, r2, #19
   81e1c:	81aa      	strh	r2, [r5, #12]
   81e1e:	6029      	str	r1, [r5, #0]
   81e20:	d5b2      	bpl.n	81d88 <__sflush_r+0x6c>
   81e22:	6528      	str	r0, [r5, #80]	; 0x50
   81e24:	e7b0      	b.n	81d88 <__sflush_r+0x6c>
   81e26:	2b1d      	cmp	r3, #29
   81e28:	d001      	beq.n	81e2e <__sflush_r+0x112>
   81e2a:	2b16      	cmp	r3, #22
   81e2c:	d113      	bne.n	81e56 <__sflush_r+0x13a>
   81e2e:	89a9      	ldrh	r1, [r5, #12]
   81e30:	692b      	ldr	r3, [r5, #16]
   81e32:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
   81e36:	2200      	movs	r2, #0
   81e38:	81a9      	strh	r1, [r5, #12]
   81e3a:	602b      	str	r3, [r5, #0]
   81e3c:	606a      	str	r2, [r5, #4]
   81e3e:	e7a3      	b.n	81d88 <__sflush_r+0x6c>
   81e40:	f8d8 3000 	ldr.w	r3, [r8]
   81e44:	2b00      	cmp	r3, #0
   81e46:	d0dc      	beq.n	81e02 <__sflush_r+0xe6>
   81e48:	2b1d      	cmp	r3, #29
   81e4a:	d001      	beq.n	81e50 <__sflush_r+0x134>
   81e4c:	2b16      	cmp	r3, #22
   81e4e:	d1c5      	bne.n	81ddc <__sflush_r+0xc0>
   81e50:	f8c8 6000 	str.w	r6, [r8]
   81e54:	e7bf      	b.n	81dd6 <__sflush_r+0xba>
   81e56:	89ab      	ldrh	r3, [r5, #12]
   81e58:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81e5c:	81ab      	strh	r3, [r5, #12]
   81e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81e62:	bf00      	nop

00081e64 <_fflush_r>:
   81e64:	b510      	push	{r4, lr}
   81e66:	4604      	mov	r4, r0
   81e68:	b082      	sub	sp, #8
   81e6a:	b108      	cbz	r0, 81e70 <_fflush_r+0xc>
   81e6c:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81e6e:	b153      	cbz	r3, 81e86 <_fflush_r+0x22>
   81e70:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
   81e74:	b908      	cbnz	r0, 81e7a <_fflush_r+0x16>
   81e76:	b002      	add	sp, #8
   81e78:	bd10      	pop	{r4, pc}
   81e7a:	4620      	mov	r0, r4
   81e7c:	b002      	add	sp, #8
   81e7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81e82:	f7ff bf4b 	b.w	81d1c <__sflush_r>
   81e86:	9101      	str	r1, [sp, #4]
   81e88:	f000 f808 	bl	81e9c <__sinit>
   81e8c:	9901      	ldr	r1, [sp, #4]
   81e8e:	e7ef      	b.n	81e70 <_fflush_r+0xc>

00081e90 <_cleanup_r>:
   81e90:	4901      	ldr	r1, [pc, #4]	; (81e98 <_cleanup_r+0x8>)
   81e92:	f000 bb9f 	b.w	825d4 <_fwalk>
   81e96:	bf00      	nop
   81e98:	0008359d 	.word	0x0008359d

00081e9c <__sinit>:
   81e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81ea0:	6b84      	ldr	r4, [r0, #56]	; 0x38
   81ea2:	b083      	sub	sp, #12
   81ea4:	4607      	mov	r7, r0
   81ea6:	2c00      	cmp	r4, #0
   81ea8:	d165      	bne.n	81f76 <__sinit+0xda>
   81eaa:	687d      	ldr	r5, [r7, #4]
   81eac:	4833      	ldr	r0, [pc, #204]	; (81f7c <__sinit+0xe0>)
   81eae:	2304      	movs	r3, #4
   81eb0:	2103      	movs	r1, #3
   81eb2:	f507 723b 	add.w	r2, r7, #748	; 0x2ec
   81eb6:	63f8      	str	r0, [r7, #60]	; 0x3c
   81eb8:	f8c7 12e4 	str.w	r1, [r7, #740]	; 0x2e4
   81ebc:	f8c7 22e8 	str.w	r2, [r7, #744]	; 0x2e8
   81ec0:	f8c7 42e0 	str.w	r4, [r7, #736]	; 0x2e0
   81ec4:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   81ec8:	81ab      	strh	r3, [r5, #12]
   81eca:	602c      	str	r4, [r5, #0]
   81ecc:	606c      	str	r4, [r5, #4]
   81ece:	60ac      	str	r4, [r5, #8]
   81ed0:	666c      	str	r4, [r5, #100]	; 0x64
   81ed2:	81ec      	strh	r4, [r5, #14]
   81ed4:	612c      	str	r4, [r5, #16]
   81ed6:	616c      	str	r4, [r5, #20]
   81ed8:	61ac      	str	r4, [r5, #24]
   81eda:	4621      	mov	r1, r4
   81edc:	2208      	movs	r2, #8
   81ede:	f7fe ff05 	bl	80cec <memset>
   81ee2:	f8df b09c 	ldr.w	fp, [pc, #156]	; 81f80 <__sinit+0xe4>
   81ee6:	68be      	ldr	r6, [r7, #8]
   81ee8:	f8df a098 	ldr.w	sl, [pc, #152]	; 81f84 <__sinit+0xe8>
   81eec:	f8df 9098 	ldr.w	r9, [pc, #152]	; 81f88 <__sinit+0xec>
   81ef0:	f8df 8098 	ldr.w	r8, [pc, #152]	; 81f8c <__sinit+0xf0>
   81ef4:	2301      	movs	r3, #1
   81ef6:	2209      	movs	r2, #9
   81ef8:	61ed      	str	r5, [r5, #28]
   81efa:	f8c5 b020 	str.w	fp, [r5, #32]
   81efe:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   81f02:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   81f06:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   81f0a:	4621      	mov	r1, r4
   81f0c:	81f3      	strh	r3, [r6, #14]
   81f0e:	81b2      	strh	r2, [r6, #12]
   81f10:	6034      	str	r4, [r6, #0]
   81f12:	6074      	str	r4, [r6, #4]
   81f14:	60b4      	str	r4, [r6, #8]
   81f16:	6674      	str	r4, [r6, #100]	; 0x64
   81f18:	6134      	str	r4, [r6, #16]
   81f1a:	6174      	str	r4, [r6, #20]
   81f1c:	61b4      	str	r4, [r6, #24]
   81f1e:	2208      	movs	r2, #8
   81f20:	f106 005c 	add.w	r0, r6, #92	; 0x5c
   81f24:	9301      	str	r3, [sp, #4]
   81f26:	f7fe fee1 	bl	80cec <memset>
   81f2a:	68fd      	ldr	r5, [r7, #12]
   81f2c:	2012      	movs	r0, #18
   81f2e:	2202      	movs	r2, #2
   81f30:	61f6      	str	r6, [r6, #28]
   81f32:	f8c6 b020 	str.w	fp, [r6, #32]
   81f36:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
   81f3a:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
   81f3e:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
   81f42:	4621      	mov	r1, r4
   81f44:	81a8      	strh	r0, [r5, #12]
   81f46:	81ea      	strh	r2, [r5, #14]
   81f48:	602c      	str	r4, [r5, #0]
   81f4a:	606c      	str	r4, [r5, #4]
   81f4c:	60ac      	str	r4, [r5, #8]
   81f4e:	666c      	str	r4, [r5, #100]	; 0x64
   81f50:	612c      	str	r4, [r5, #16]
   81f52:	616c      	str	r4, [r5, #20]
   81f54:	61ac      	str	r4, [r5, #24]
   81f56:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   81f5a:	2208      	movs	r2, #8
   81f5c:	f7fe fec6 	bl	80cec <memset>
   81f60:	9b01      	ldr	r3, [sp, #4]
   81f62:	61ed      	str	r5, [r5, #28]
   81f64:	f8c5 b020 	str.w	fp, [r5, #32]
   81f68:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
   81f6c:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
   81f70:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
   81f74:	63bb      	str	r3, [r7, #56]	; 0x38
   81f76:	b003      	add	sp, #12
   81f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81f7c:	00081e91 	.word	0x00081e91
   81f80:	00083291 	.word	0x00083291
   81f84:	000832b5 	.word	0x000832b5
   81f88:	000832ed 	.word	0x000832ed
   81f8c:	0008330d 	.word	0x0008330d

00081f90 <__sfp_lock_acquire>:
   81f90:	4770      	bx	lr
   81f92:	bf00      	nop

00081f94 <__sfp_lock_release>:
   81f94:	4770      	bx	lr
   81f96:	bf00      	nop

00081f98 <__libc_fini_array>:
   81f98:	b538      	push	{r3, r4, r5, lr}
   81f9a:	4d09      	ldr	r5, [pc, #36]	; (81fc0 <__libc_fini_array+0x28>)
   81f9c:	4c09      	ldr	r4, [pc, #36]	; (81fc4 <__libc_fini_array+0x2c>)
   81f9e:	1b64      	subs	r4, r4, r5
   81fa0:	10a4      	asrs	r4, r4, #2
   81fa2:	bf18      	it	ne
   81fa4:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   81fa8:	d005      	beq.n	81fb6 <__libc_fini_array+0x1e>
   81faa:	3c01      	subs	r4, #1
   81fac:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   81fb0:	4798      	blx	r3
   81fb2:	2c00      	cmp	r4, #0
   81fb4:	d1f9      	bne.n	81faa <__libc_fini_array+0x12>
   81fb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   81fba:	f001 be6b 	b.w	83c94 <_fini>
   81fbe:	bf00      	nop
   81fc0:	00083ca0 	.word	0x00083ca0
   81fc4:	00083ca4 	.word	0x00083ca4

00081fc8 <_fputwc_r>:
   81fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81fcc:	8993      	ldrh	r3, [r2, #12]
   81fce:	460f      	mov	r7, r1
   81fd0:	0499      	lsls	r1, r3, #18
   81fd2:	b082      	sub	sp, #8
   81fd4:	4614      	mov	r4, r2
   81fd6:	4680      	mov	r8, r0
   81fd8:	d406      	bmi.n	81fe8 <_fputwc_r+0x20>
   81fda:	6e52      	ldr	r2, [r2, #100]	; 0x64
   81fdc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   81fe0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   81fe4:	81a3      	strh	r3, [r4, #12]
   81fe6:	6662      	str	r2, [r4, #100]	; 0x64
   81fe8:	f000 fb1c 	bl	82624 <__locale_mb_cur_max>
   81fec:	2801      	cmp	r0, #1
   81fee:	d03e      	beq.n	8206e <_fputwc_r+0xa6>
   81ff0:	463a      	mov	r2, r7
   81ff2:	4640      	mov	r0, r8
   81ff4:	a901      	add	r1, sp, #4
   81ff6:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   81ffa:	f001 f9df 	bl	833bc <_wcrtomb_r>
   81ffe:	1c42      	adds	r2, r0, #1
   82000:	4606      	mov	r6, r0
   82002:	d02d      	beq.n	82060 <_fputwc_r+0x98>
   82004:	2800      	cmp	r0, #0
   82006:	d03a      	beq.n	8207e <_fputwc_r+0xb6>
   82008:	f89d 1004 	ldrb.w	r1, [sp, #4]
   8200c:	2500      	movs	r5, #0
   8200e:	e009      	b.n	82024 <_fputwc_r+0x5c>
   82010:	6823      	ldr	r3, [r4, #0]
   82012:	7019      	strb	r1, [r3, #0]
   82014:	6823      	ldr	r3, [r4, #0]
   82016:	3301      	adds	r3, #1
   82018:	6023      	str	r3, [r4, #0]
   8201a:	3501      	adds	r5, #1
   8201c:	42b5      	cmp	r5, r6
   8201e:	d22e      	bcs.n	8207e <_fputwc_r+0xb6>
   82020:	ab01      	add	r3, sp, #4
   82022:	5ce9      	ldrb	r1, [r5, r3]
   82024:	68a3      	ldr	r3, [r4, #8]
   82026:	3b01      	subs	r3, #1
   82028:	2b00      	cmp	r3, #0
   8202a:	60a3      	str	r3, [r4, #8]
   8202c:	daf0      	bge.n	82010 <_fputwc_r+0x48>
   8202e:	69a2      	ldr	r2, [r4, #24]
   82030:	4293      	cmp	r3, r2
   82032:	db06      	blt.n	82042 <_fputwc_r+0x7a>
   82034:	6823      	ldr	r3, [r4, #0]
   82036:	7019      	strb	r1, [r3, #0]
   82038:	6823      	ldr	r3, [r4, #0]
   8203a:	7819      	ldrb	r1, [r3, #0]
   8203c:	3301      	adds	r3, #1
   8203e:	290a      	cmp	r1, #10
   82040:	d1ea      	bne.n	82018 <_fputwc_r+0x50>
   82042:	4640      	mov	r0, r8
   82044:	4622      	mov	r2, r4
   82046:	f001 f965 	bl	83314 <__swbuf_r>
   8204a:	f1b0 33ff 	subs.w	r3, r0, #4294967295
   8204e:	4258      	negs	r0, r3
   82050:	4158      	adcs	r0, r3
   82052:	2800      	cmp	r0, #0
   82054:	d0e1      	beq.n	8201a <_fputwc_r+0x52>
   82056:	f04f 30ff 	mov.w	r0, #4294967295
   8205a:	b002      	add	sp, #8
   8205c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82060:	89a3      	ldrh	r3, [r4, #12]
   82062:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82066:	81a3      	strh	r3, [r4, #12]
   82068:	b002      	add	sp, #8
   8206a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8206e:	1e7b      	subs	r3, r7, #1
   82070:	2bfe      	cmp	r3, #254	; 0xfe
   82072:	d8bd      	bhi.n	81ff0 <_fputwc_r+0x28>
   82074:	b2f9      	uxtb	r1, r7
   82076:	4606      	mov	r6, r0
   82078:	f88d 1004 	strb.w	r1, [sp, #4]
   8207c:	e7c6      	b.n	8200c <_fputwc_r+0x44>
   8207e:	4638      	mov	r0, r7
   82080:	b002      	add	sp, #8
   82082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82086:	bf00      	nop

00082088 <_malloc_trim_r>:
   82088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8208a:	4d23      	ldr	r5, [pc, #140]	; (82118 <_malloc_trim_r+0x90>)
   8208c:	460f      	mov	r7, r1
   8208e:	4604      	mov	r4, r0
   82090:	f000 ff08 	bl	82ea4 <__malloc_lock>
   82094:	68ab      	ldr	r3, [r5, #8]
   82096:	685e      	ldr	r6, [r3, #4]
   82098:	f026 0603 	bic.w	r6, r6, #3
   8209c:	1bf1      	subs	r1, r6, r7
   8209e:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   820a2:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   820a6:	f021 010f 	bic.w	r1, r1, #15
   820aa:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   820ae:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   820b2:	db07      	blt.n	820c4 <_malloc_trim_r+0x3c>
   820b4:	4620      	mov	r0, r4
   820b6:	2100      	movs	r1, #0
   820b8:	f001 f8d8 	bl	8326c <_sbrk_r>
   820bc:	68ab      	ldr	r3, [r5, #8]
   820be:	4433      	add	r3, r6
   820c0:	4298      	cmp	r0, r3
   820c2:	d004      	beq.n	820ce <_malloc_trim_r+0x46>
   820c4:	4620      	mov	r0, r4
   820c6:	f000 feef 	bl	82ea8 <__malloc_unlock>
   820ca:	2000      	movs	r0, #0
   820cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   820ce:	4620      	mov	r0, r4
   820d0:	4279      	negs	r1, r7
   820d2:	f001 f8cb 	bl	8326c <_sbrk_r>
   820d6:	3001      	adds	r0, #1
   820d8:	d00d      	beq.n	820f6 <_malloc_trim_r+0x6e>
   820da:	4b10      	ldr	r3, [pc, #64]	; (8211c <_malloc_trim_r+0x94>)
   820dc:	68aa      	ldr	r2, [r5, #8]
   820de:	6819      	ldr	r1, [r3, #0]
   820e0:	1bf6      	subs	r6, r6, r7
   820e2:	f046 0601 	orr.w	r6, r6, #1
   820e6:	4620      	mov	r0, r4
   820e8:	1bc9      	subs	r1, r1, r7
   820ea:	6056      	str	r6, [r2, #4]
   820ec:	6019      	str	r1, [r3, #0]
   820ee:	f000 fedb 	bl	82ea8 <__malloc_unlock>
   820f2:	2001      	movs	r0, #1
   820f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   820f6:	4620      	mov	r0, r4
   820f8:	2100      	movs	r1, #0
   820fa:	f001 f8b7 	bl	8326c <_sbrk_r>
   820fe:	68ab      	ldr	r3, [r5, #8]
   82100:	1ac2      	subs	r2, r0, r3
   82102:	2a0f      	cmp	r2, #15
   82104:	ddde      	ble.n	820c4 <_malloc_trim_r+0x3c>
   82106:	4d06      	ldr	r5, [pc, #24]	; (82120 <_malloc_trim_r+0x98>)
   82108:	4904      	ldr	r1, [pc, #16]	; (8211c <_malloc_trim_r+0x94>)
   8210a:	682d      	ldr	r5, [r5, #0]
   8210c:	f042 0201 	orr.w	r2, r2, #1
   82110:	1b40      	subs	r0, r0, r5
   82112:	605a      	str	r2, [r3, #4]
   82114:	6008      	str	r0, [r1, #0]
   82116:	e7d5      	b.n	820c4 <_malloc_trim_r+0x3c>
   82118:	20070590 	.word	0x20070590
   8211c:	20070ae4 	.word	0x20070ae4
   82120:	2007099c 	.word	0x2007099c

00082124 <_free_r>:
   82124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82128:	460d      	mov	r5, r1
   8212a:	4606      	mov	r6, r0
   8212c:	2900      	cmp	r1, #0
   8212e:	d055      	beq.n	821dc <_free_r+0xb8>
   82130:	f000 feb8 	bl	82ea4 <__malloc_lock>
   82134:	f855 1c04 	ldr.w	r1, [r5, #-4]
   82138:	f8df c170 	ldr.w	ip, [pc, #368]	; 822ac <_free_r+0x188>
   8213c:	f1a5 0408 	sub.w	r4, r5, #8
   82140:	f021 0301 	bic.w	r3, r1, #1
   82144:	18e2      	adds	r2, r4, r3
   82146:	f8dc 0008 	ldr.w	r0, [ip, #8]
   8214a:	6857      	ldr	r7, [r2, #4]
   8214c:	4290      	cmp	r0, r2
   8214e:	f027 0703 	bic.w	r7, r7, #3
   82152:	d068      	beq.n	82226 <_free_r+0x102>
   82154:	f011 0101 	ands.w	r1, r1, #1
   82158:	6057      	str	r7, [r2, #4]
   8215a:	d032      	beq.n	821c2 <_free_r+0x9e>
   8215c:	2100      	movs	r1, #0
   8215e:	19d0      	adds	r0, r2, r7
   82160:	6840      	ldr	r0, [r0, #4]
   82162:	07c0      	lsls	r0, r0, #31
   82164:	d406      	bmi.n	82174 <_free_r+0x50>
   82166:	443b      	add	r3, r7
   82168:	6890      	ldr	r0, [r2, #8]
   8216a:	2900      	cmp	r1, #0
   8216c:	d04d      	beq.n	8220a <_free_r+0xe6>
   8216e:	68d2      	ldr	r2, [r2, #12]
   82170:	60c2      	str	r2, [r0, #12]
   82172:	6090      	str	r0, [r2, #8]
   82174:	f043 0201 	orr.w	r2, r3, #1
   82178:	6062      	str	r2, [r4, #4]
   8217a:	50e3      	str	r3, [r4, r3]
   8217c:	b9e1      	cbnz	r1, 821b8 <_free_r+0x94>
   8217e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   82182:	d32d      	bcc.n	821e0 <_free_r+0xbc>
   82184:	0a5a      	lsrs	r2, r3, #9
   82186:	2a04      	cmp	r2, #4
   82188:	d869      	bhi.n	8225e <_free_r+0x13a>
   8218a:	0998      	lsrs	r0, r3, #6
   8218c:	3038      	adds	r0, #56	; 0x38
   8218e:	0041      	lsls	r1, r0, #1
   82190:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   82194:	f8dc 2008 	ldr.w	r2, [ip, #8]
   82198:	4944      	ldr	r1, [pc, #272]	; (822ac <_free_r+0x188>)
   8219a:	4562      	cmp	r2, ip
   8219c:	d065      	beq.n	8226a <_free_r+0x146>
   8219e:	6851      	ldr	r1, [r2, #4]
   821a0:	f021 0103 	bic.w	r1, r1, #3
   821a4:	428b      	cmp	r3, r1
   821a6:	d202      	bcs.n	821ae <_free_r+0x8a>
   821a8:	6892      	ldr	r2, [r2, #8]
   821aa:	4594      	cmp	ip, r2
   821ac:	d1f7      	bne.n	8219e <_free_r+0x7a>
   821ae:	68d3      	ldr	r3, [r2, #12]
   821b0:	60e3      	str	r3, [r4, #12]
   821b2:	60a2      	str	r2, [r4, #8]
   821b4:	609c      	str	r4, [r3, #8]
   821b6:	60d4      	str	r4, [r2, #12]
   821b8:	4630      	mov	r0, r6
   821ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   821be:	f000 be73 	b.w	82ea8 <__malloc_unlock>
   821c2:	f855 5c08 	ldr.w	r5, [r5, #-8]
   821c6:	f10c 0808 	add.w	r8, ip, #8
   821ca:	1b64      	subs	r4, r4, r5
   821cc:	68a0      	ldr	r0, [r4, #8]
   821ce:	442b      	add	r3, r5
   821d0:	4540      	cmp	r0, r8
   821d2:	d042      	beq.n	8225a <_free_r+0x136>
   821d4:	68e5      	ldr	r5, [r4, #12]
   821d6:	60c5      	str	r5, [r0, #12]
   821d8:	60a8      	str	r0, [r5, #8]
   821da:	e7c0      	b.n	8215e <_free_r+0x3a>
   821dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   821e0:	08db      	lsrs	r3, r3, #3
   821e2:	109a      	asrs	r2, r3, #2
   821e4:	2001      	movs	r0, #1
   821e6:	4090      	lsls	r0, r2
   821e8:	f8dc 1004 	ldr.w	r1, [ip, #4]
   821ec:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   821f0:	689a      	ldr	r2, [r3, #8]
   821f2:	4301      	orrs	r1, r0
   821f4:	60a2      	str	r2, [r4, #8]
   821f6:	60e3      	str	r3, [r4, #12]
   821f8:	f8cc 1004 	str.w	r1, [ip, #4]
   821fc:	4630      	mov	r0, r6
   821fe:	609c      	str	r4, [r3, #8]
   82200:	60d4      	str	r4, [r2, #12]
   82202:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   82206:	f000 be4f 	b.w	82ea8 <__malloc_unlock>
   8220a:	4d29      	ldr	r5, [pc, #164]	; (822b0 <_free_r+0x18c>)
   8220c:	42a8      	cmp	r0, r5
   8220e:	d1ae      	bne.n	8216e <_free_r+0x4a>
   82210:	f043 0201 	orr.w	r2, r3, #1
   82214:	f8cc 4014 	str.w	r4, [ip, #20]
   82218:	f8cc 4010 	str.w	r4, [ip, #16]
   8221c:	60e0      	str	r0, [r4, #12]
   8221e:	60a0      	str	r0, [r4, #8]
   82220:	6062      	str	r2, [r4, #4]
   82222:	50e3      	str	r3, [r4, r3]
   82224:	e7c8      	b.n	821b8 <_free_r+0x94>
   82226:	441f      	add	r7, r3
   82228:	07cb      	lsls	r3, r1, #31
   8222a:	d407      	bmi.n	8223c <_free_r+0x118>
   8222c:	f855 1c08 	ldr.w	r1, [r5, #-8]
   82230:	1a64      	subs	r4, r4, r1
   82232:	68e3      	ldr	r3, [r4, #12]
   82234:	68a2      	ldr	r2, [r4, #8]
   82236:	440f      	add	r7, r1
   82238:	60d3      	str	r3, [r2, #12]
   8223a:	609a      	str	r2, [r3, #8]
   8223c:	4b1d      	ldr	r3, [pc, #116]	; (822b4 <_free_r+0x190>)
   8223e:	f047 0201 	orr.w	r2, r7, #1
   82242:	681b      	ldr	r3, [r3, #0]
   82244:	6062      	str	r2, [r4, #4]
   82246:	429f      	cmp	r7, r3
   82248:	f8cc 4008 	str.w	r4, [ip, #8]
   8224c:	d3b4      	bcc.n	821b8 <_free_r+0x94>
   8224e:	4b1a      	ldr	r3, [pc, #104]	; (822b8 <_free_r+0x194>)
   82250:	4630      	mov	r0, r6
   82252:	6819      	ldr	r1, [r3, #0]
   82254:	f7ff ff18 	bl	82088 <_malloc_trim_r>
   82258:	e7ae      	b.n	821b8 <_free_r+0x94>
   8225a:	2101      	movs	r1, #1
   8225c:	e77f      	b.n	8215e <_free_r+0x3a>
   8225e:	2a14      	cmp	r2, #20
   82260:	d80b      	bhi.n	8227a <_free_r+0x156>
   82262:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   82266:	0041      	lsls	r1, r0, #1
   82268:	e792      	b.n	82190 <_free_r+0x6c>
   8226a:	1080      	asrs	r0, r0, #2
   8226c:	2501      	movs	r5, #1
   8226e:	4085      	lsls	r5, r0
   82270:	6848      	ldr	r0, [r1, #4]
   82272:	4613      	mov	r3, r2
   82274:	4328      	orrs	r0, r5
   82276:	6048      	str	r0, [r1, #4]
   82278:	e79a      	b.n	821b0 <_free_r+0x8c>
   8227a:	2a54      	cmp	r2, #84	; 0x54
   8227c:	d803      	bhi.n	82286 <_free_r+0x162>
   8227e:	0b18      	lsrs	r0, r3, #12
   82280:	306e      	adds	r0, #110	; 0x6e
   82282:	0041      	lsls	r1, r0, #1
   82284:	e784      	b.n	82190 <_free_r+0x6c>
   82286:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   8228a:	d803      	bhi.n	82294 <_free_r+0x170>
   8228c:	0bd8      	lsrs	r0, r3, #15
   8228e:	3077      	adds	r0, #119	; 0x77
   82290:	0041      	lsls	r1, r0, #1
   82292:	e77d      	b.n	82190 <_free_r+0x6c>
   82294:	f240 5154 	movw	r1, #1364	; 0x554
   82298:	428a      	cmp	r2, r1
   8229a:	d803      	bhi.n	822a4 <_free_r+0x180>
   8229c:	0c98      	lsrs	r0, r3, #18
   8229e:	307c      	adds	r0, #124	; 0x7c
   822a0:	0041      	lsls	r1, r0, #1
   822a2:	e775      	b.n	82190 <_free_r+0x6c>
   822a4:	21fc      	movs	r1, #252	; 0xfc
   822a6:	207e      	movs	r0, #126	; 0x7e
   822a8:	e772      	b.n	82190 <_free_r+0x6c>
   822aa:	bf00      	nop
   822ac:	20070590 	.word	0x20070590
   822b0:	20070598 	.word	0x20070598
   822b4:	20070998 	.word	0x20070998
   822b8:	20070ae0 	.word	0x20070ae0

000822bc <__sfvwrite_r>:
   822bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   822c0:	6893      	ldr	r3, [r2, #8]
   822c2:	b083      	sub	sp, #12
   822c4:	4616      	mov	r6, r2
   822c6:	4681      	mov	r9, r0
   822c8:	460c      	mov	r4, r1
   822ca:	b32b      	cbz	r3, 82318 <__sfvwrite_r+0x5c>
   822cc:	898b      	ldrh	r3, [r1, #12]
   822ce:	0719      	lsls	r1, r3, #28
   822d0:	d526      	bpl.n	82320 <__sfvwrite_r+0x64>
   822d2:	6922      	ldr	r2, [r4, #16]
   822d4:	b322      	cbz	r2, 82320 <__sfvwrite_r+0x64>
   822d6:	f003 0202 	and.w	r2, r3, #2
   822da:	b292      	uxth	r2, r2
   822dc:	6835      	ldr	r5, [r6, #0]
   822de:	2a00      	cmp	r2, #0
   822e0:	d02c      	beq.n	8233c <__sfvwrite_r+0x80>
   822e2:	f04f 0a00 	mov.w	sl, #0
   822e6:	f8df b2e8 	ldr.w	fp, [pc, #744]	; 825d0 <__sfvwrite_r+0x314>
   822ea:	46d0      	mov	r8, sl
   822ec:	45d8      	cmp	r8, fp
   822ee:	bf34      	ite	cc
   822f0:	4643      	movcc	r3, r8
   822f2:	465b      	movcs	r3, fp
   822f4:	4652      	mov	r2, sl
   822f6:	4648      	mov	r0, r9
   822f8:	f1b8 0f00 	cmp.w	r8, #0
   822fc:	d04f      	beq.n	8239e <__sfvwrite_r+0xe2>
   822fe:	69e1      	ldr	r1, [r4, #28]
   82300:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82302:	47b8      	blx	r7
   82304:	2800      	cmp	r0, #0
   82306:	dd56      	ble.n	823b6 <__sfvwrite_r+0xfa>
   82308:	68b3      	ldr	r3, [r6, #8]
   8230a:	4482      	add	sl, r0
   8230c:	1a1b      	subs	r3, r3, r0
   8230e:	ebc0 0808 	rsb	r8, r0, r8
   82312:	60b3      	str	r3, [r6, #8]
   82314:	2b00      	cmp	r3, #0
   82316:	d1e9      	bne.n	822ec <__sfvwrite_r+0x30>
   82318:	2000      	movs	r0, #0
   8231a:	b003      	add	sp, #12
   8231c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82320:	4648      	mov	r0, r9
   82322:	4621      	mov	r1, r4
   82324:	f7ff fc88 	bl	81c38 <__swsetup_r>
   82328:	2800      	cmp	r0, #0
   8232a:	f040 8148 	bne.w	825be <__sfvwrite_r+0x302>
   8232e:	89a3      	ldrh	r3, [r4, #12]
   82330:	6835      	ldr	r5, [r6, #0]
   82332:	f003 0202 	and.w	r2, r3, #2
   82336:	b292      	uxth	r2, r2
   82338:	2a00      	cmp	r2, #0
   8233a:	d1d2      	bne.n	822e2 <__sfvwrite_r+0x26>
   8233c:	f013 0a01 	ands.w	sl, r3, #1
   82340:	d142      	bne.n	823c8 <__sfvwrite_r+0x10c>
   82342:	46d0      	mov	r8, sl
   82344:	f1b8 0f00 	cmp.w	r8, #0
   82348:	d023      	beq.n	82392 <__sfvwrite_r+0xd6>
   8234a:	059a      	lsls	r2, r3, #22
   8234c:	68a7      	ldr	r7, [r4, #8]
   8234e:	d576      	bpl.n	8243e <__sfvwrite_r+0x182>
   82350:	45b8      	cmp	r8, r7
   82352:	f0c0 80a4 	bcc.w	8249e <__sfvwrite_r+0x1e2>
   82356:	f413 6f90 	tst.w	r3, #1152	; 0x480
   8235a:	f040 80b2 	bne.w	824c2 <__sfvwrite_r+0x206>
   8235e:	6820      	ldr	r0, [r4, #0]
   82360:	46bb      	mov	fp, r7
   82362:	4651      	mov	r1, sl
   82364:	465a      	mov	r2, fp
   82366:	f000 fd37 	bl	82dd8 <memmove>
   8236a:	68a2      	ldr	r2, [r4, #8]
   8236c:	6821      	ldr	r1, [r4, #0]
   8236e:	1bd2      	subs	r2, r2, r7
   82370:	eb01 030b 	add.w	r3, r1, fp
   82374:	60a2      	str	r2, [r4, #8]
   82376:	6023      	str	r3, [r4, #0]
   82378:	4642      	mov	r2, r8
   8237a:	68b3      	ldr	r3, [r6, #8]
   8237c:	4492      	add	sl, r2
   8237e:	1a9b      	subs	r3, r3, r2
   82380:	ebc2 0808 	rsb	r8, r2, r8
   82384:	60b3      	str	r3, [r6, #8]
   82386:	2b00      	cmp	r3, #0
   82388:	d0c6      	beq.n	82318 <__sfvwrite_r+0x5c>
   8238a:	89a3      	ldrh	r3, [r4, #12]
   8238c:	f1b8 0f00 	cmp.w	r8, #0
   82390:	d1db      	bne.n	8234a <__sfvwrite_r+0x8e>
   82392:	f8d5 a000 	ldr.w	sl, [r5]
   82396:	f8d5 8004 	ldr.w	r8, [r5, #4]
   8239a:	3508      	adds	r5, #8
   8239c:	e7d2      	b.n	82344 <__sfvwrite_r+0x88>
   8239e:	f8d5 a000 	ldr.w	sl, [r5]
   823a2:	f8d5 8004 	ldr.w	r8, [r5, #4]
   823a6:	3508      	adds	r5, #8
   823a8:	e7a0      	b.n	822ec <__sfvwrite_r+0x30>
   823aa:	4648      	mov	r0, r9
   823ac:	4621      	mov	r1, r4
   823ae:	f7ff fd59 	bl	81e64 <_fflush_r>
   823b2:	2800      	cmp	r0, #0
   823b4:	d059      	beq.n	8246a <__sfvwrite_r+0x1ae>
   823b6:	89a3      	ldrh	r3, [r4, #12]
   823b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   823bc:	f04f 30ff 	mov.w	r0, #4294967295
   823c0:	81a3      	strh	r3, [r4, #12]
   823c2:	b003      	add	sp, #12
   823c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   823c8:	4692      	mov	sl, r2
   823ca:	9201      	str	r2, [sp, #4]
   823cc:	4693      	mov	fp, r2
   823ce:	4690      	mov	r8, r2
   823d0:	f1b8 0f00 	cmp.w	r8, #0
   823d4:	d02b      	beq.n	8242e <__sfvwrite_r+0x172>
   823d6:	9f01      	ldr	r7, [sp, #4]
   823d8:	2f00      	cmp	r7, #0
   823da:	d064      	beq.n	824a6 <__sfvwrite_r+0x1ea>
   823dc:	6820      	ldr	r0, [r4, #0]
   823de:	6921      	ldr	r1, [r4, #16]
   823e0:	45c2      	cmp	sl, r8
   823e2:	bf34      	ite	cc
   823e4:	4653      	movcc	r3, sl
   823e6:	4643      	movcs	r3, r8
   823e8:	4288      	cmp	r0, r1
   823ea:	461f      	mov	r7, r3
   823ec:	f8d4 c008 	ldr.w	ip, [r4, #8]
   823f0:	6962      	ldr	r2, [r4, #20]
   823f2:	d903      	bls.n	823fc <__sfvwrite_r+0x140>
   823f4:	4494      	add	ip, r2
   823f6:	4563      	cmp	r3, ip
   823f8:	f300 80ae 	bgt.w	82558 <__sfvwrite_r+0x29c>
   823fc:	4293      	cmp	r3, r2
   823fe:	db36      	blt.n	8246e <__sfvwrite_r+0x1b2>
   82400:	4613      	mov	r3, r2
   82402:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82404:	4648      	mov	r0, r9
   82406:	69e1      	ldr	r1, [r4, #28]
   82408:	465a      	mov	r2, fp
   8240a:	47b8      	blx	r7
   8240c:	1e07      	subs	r7, r0, #0
   8240e:	ddd2      	ble.n	823b6 <__sfvwrite_r+0xfa>
   82410:	ebba 0a07 	subs.w	sl, sl, r7
   82414:	d03a      	beq.n	8248c <__sfvwrite_r+0x1d0>
   82416:	68b3      	ldr	r3, [r6, #8]
   82418:	44bb      	add	fp, r7
   8241a:	1bdb      	subs	r3, r3, r7
   8241c:	ebc7 0808 	rsb	r8, r7, r8
   82420:	60b3      	str	r3, [r6, #8]
   82422:	2b00      	cmp	r3, #0
   82424:	f43f af78 	beq.w	82318 <__sfvwrite_r+0x5c>
   82428:	f1b8 0f00 	cmp.w	r8, #0
   8242c:	d1d3      	bne.n	823d6 <__sfvwrite_r+0x11a>
   8242e:	2700      	movs	r7, #0
   82430:	f8d5 b000 	ldr.w	fp, [r5]
   82434:	f8d5 8004 	ldr.w	r8, [r5, #4]
   82438:	9701      	str	r7, [sp, #4]
   8243a:	3508      	adds	r5, #8
   8243c:	e7c8      	b.n	823d0 <__sfvwrite_r+0x114>
   8243e:	6820      	ldr	r0, [r4, #0]
   82440:	6923      	ldr	r3, [r4, #16]
   82442:	4298      	cmp	r0, r3
   82444:	d802      	bhi.n	8244c <__sfvwrite_r+0x190>
   82446:	6963      	ldr	r3, [r4, #20]
   82448:	4598      	cmp	r8, r3
   8244a:	d272      	bcs.n	82532 <__sfvwrite_r+0x276>
   8244c:	45b8      	cmp	r8, r7
   8244e:	bf38      	it	cc
   82450:	4647      	movcc	r7, r8
   82452:	463a      	mov	r2, r7
   82454:	4651      	mov	r1, sl
   82456:	f000 fcbf 	bl	82dd8 <memmove>
   8245a:	68a3      	ldr	r3, [r4, #8]
   8245c:	6822      	ldr	r2, [r4, #0]
   8245e:	1bdb      	subs	r3, r3, r7
   82460:	443a      	add	r2, r7
   82462:	60a3      	str	r3, [r4, #8]
   82464:	6022      	str	r2, [r4, #0]
   82466:	2b00      	cmp	r3, #0
   82468:	d09f      	beq.n	823aa <__sfvwrite_r+0xee>
   8246a:	463a      	mov	r2, r7
   8246c:	e785      	b.n	8237a <__sfvwrite_r+0xbe>
   8246e:	461a      	mov	r2, r3
   82470:	4659      	mov	r1, fp
   82472:	9300      	str	r3, [sp, #0]
   82474:	f000 fcb0 	bl	82dd8 <memmove>
   82478:	9b00      	ldr	r3, [sp, #0]
   8247a:	68a1      	ldr	r1, [r4, #8]
   8247c:	6822      	ldr	r2, [r4, #0]
   8247e:	1ac9      	subs	r1, r1, r3
   82480:	ebba 0a07 	subs.w	sl, sl, r7
   82484:	4413      	add	r3, r2
   82486:	60a1      	str	r1, [r4, #8]
   82488:	6023      	str	r3, [r4, #0]
   8248a:	d1c4      	bne.n	82416 <__sfvwrite_r+0x15a>
   8248c:	4648      	mov	r0, r9
   8248e:	4621      	mov	r1, r4
   82490:	f7ff fce8 	bl	81e64 <_fflush_r>
   82494:	2800      	cmp	r0, #0
   82496:	d18e      	bne.n	823b6 <__sfvwrite_r+0xfa>
   82498:	f8cd a004 	str.w	sl, [sp, #4]
   8249c:	e7bb      	b.n	82416 <__sfvwrite_r+0x15a>
   8249e:	6820      	ldr	r0, [r4, #0]
   824a0:	4647      	mov	r7, r8
   824a2:	46c3      	mov	fp, r8
   824a4:	e75d      	b.n	82362 <__sfvwrite_r+0xa6>
   824a6:	4658      	mov	r0, fp
   824a8:	210a      	movs	r1, #10
   824aa:	4642      	mov	r2, r8
   824ac:	f000 fbd4 	bl	82c58 <memchr>
   824b0:	2800      	cmp	r0, #0
   824b2:	d07f      	beq.n	825b4 <__sfvwrite_r+0x2f8>
   824b4:	f100 0a01 	add.w	sl, r0, #1
   824b8:	2701      	movs	r7, #1
   824ba:	ebcb 0a0a 	rsb	sl, fp, sl
   824be:	9701      	str	r7, [sp, #4]
   824c0:	e78c      	b.n	823dc <__sfvwrite_r+0x120>
   824c2:	6822      	ldr	r2, [r4, #0]
   824c4:	6921      	ldr	r1, [r4, #16]
   824c6:	6967      	ldr	r7, [r4, #20]
   824c8:	ebc1 0c02 	rsb	ip, r1, r2
   824cc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   824d0:	f10c 0201 	add.w	r2, ip, #1
   824d4:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   824d8:	4442      	add	r2, r8
   824da:	107f      	asrs	r7, r7, #1
   824dc:	4297      	cmp	r7, r2
   824de:	bf34      	ite	cc
   824e0:	4617      	movcc	r7, r2
   824e2:	463a      	movcs	r2, r7
   824e4:	055b      	lsls	r3, r3, #21
   824e6:	d54f      	bpl.n	82588 <__sfvwrite_r+0x2cc>
   824e8:	4611      	mov	r1, r2
   824ea:	4648      	mov	r0, r9
   824ec:	f8cd c000 	str.w	ip, [sp]
   824f0:	f000 f916 	bl	82720 <_malloc_r>
   824f4:	f8dd c000 	ldr.w	ip, [sp]
   824f8:	4683      	mov	fp, r0
   824fa:	2800      	cmp	r0, #0
   824fc:	d062      	beq.n	825c4 <__sfvwrite_r+0x308>
   824fe:	4662      	mov	r2, ip
   82500:	6921      	ldr	r1, [r4, #16]
   82502:	f8cd c000 	str.w	ip, [sp]
   82506:	f000 fbf1 	bl	82cec <memcpy>
   8250a:	89a2      	ldrh	r2, [r4, #12]
   8250c:	f8dd c000 	ldr.w	ip, [sp]
   82510:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   82514:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   82518:	81a2      	strh	r2, [r4, #12]
   8251a:	eb0b 000c 	add.w	r0, fp, ip
   8251e:	ebcc 0207 	rsb	r2, ip, r7
   82522:	f8c4 b010 	str.w	fp, [r4, #16]
   82526:	6167      	str	r7, [r4, #20]
   82528:	6020      	str	r0, [r4, #0]
   8252a:	60a2      	str	r2, [r4, #8]
   8252c:	4647      	mov	r7, r8
   8252e:	46c3      	mov	fp, r8
   82530:	e717      	b.n	82362 <__sfvwrite_r+0xa6>
   82532:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   82536:	4590      	cmp	r8, r2
   82538:	bf38      	it	cc
   8253a:	4642      	movcc	r2, r8
   8253c:	fb92 f2f3 	sdiv	r2, r2, r3
   82540:	fb02 f303 	mul.w	r3, r2, r3
   82544:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82546:	4648      	mov	r0, r9
   82548:	69e1      	ldr	r1, [r4, #28]
   8254a:	4652      	mov	r2, sl
   8254c:	47b8      	blx	r7
   8254e:	2800      	cmp	r0, #0
   82550:	f77f af31 	ble.w	823b6 <__sfvwrite_r+0xfa>
   82554:	4602      	mov	r2, r0
   82556:	e710      	b.n	8237a <__sfvwrite_r+0xbe>
   82558:	4662      	mov	r2, ip
   8255a:	4659      	mov	r1, fp
   8255c:	f8cd c000 	str.w	ip, [sp]
   82560:	f000 fc3a 	bl	82dd8 <memmove>
   82564:	f8dd c000 	ldr.w	ip, [sp]
   82568:	6823      	ldr	r3, [r4, #0]
   8256a:	4648      	mov	r0, r9
   8256c:	4463      	add	r3, ip
   8256e:	6023      	str	r3, [r4, #0]
   82570:	4621      	mov	r1, r4
   82572:	f8cd c000 	str.w	ip, [sp]
   82576:	f7ff fc75 	bl	81e64 <_fflush_r>
   8257a:	f8dd c000 	ldr.w	ip, [sp]
   8257e:	2800      	cmp	r0, #0
   82580:	f47f af19 	bne.w	823b6 <__sfvwrite_r+0xfa>
   82584:	4667      	mov	r7, ip
   82586:	e743      	b.n	82410 <__sfvwrite_r+0x154>
   82588:	4648      	mov	r0, r9
   8258a:	f8cd c000 	str.w	ip, [sp]
   8258e:	f000 fc8d 	bl	82eac <_realloc_r>
   82592:	f8dd c000 	ldr.w	ip, [sp]
   82596:	4683      	mov	fp, r0
   82598:	2800      	cmp	r0, #0
   8259a:	d1be      	bne.n	8251a <__sfvwrite_r+0x25e>
   8259c:	4648      	mov	r0, r9
   8259e:	6921      	ldr	r1, [r4, #16]
   825a0:	f7ff fdc0 	bl	82124 <_free_r>
   825a4:	89a3      	ldrh	r3, [r4, #12]
   825a6:	220c      	movs	r2, #12
   825a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   825ac:	b29b      	uxth	r3, r3
   825ae:	f8c9 2000 	str.w	r2, [r9]
   825b2:	e701      	b.n	823b8 <__sfvwrite_r+0xfc>
   825b4:	2701      	movs	r7, #1
   825b6:	f108 0a01 	add.w	sl, r8, #1
   825ba:	9701      	str	r7, [sp, #4]
   825bc:	e70e      	b.n	823dc <__sfvwrite_r+0x120>
   825be:	f04f 30ff 	mov.w	r0, #4294967295
   825c2:	e6aa      	b.n	8231a <__sfvwrite_r+0x5e>
   825c4:	230c      	movs	r3, #12
   825c6:	f8c9 3000 	str.w	r3, [r9]
   825ca:	89a3      	ldrh	r3, [r4, #12]
   825cc:	e6f4      	b.n	823b8 <__sfvwrite_r+0xfc>
   825ce:	bf00      	nop
   825d0:	7ffffc00 	.word	0x7ffffc00

000825d4 <_fwalk>:
   825d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   825d8:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
   825dc:	4688      	mov	r8, r1
   825de:	d019      	beq.n	82614 <_fwalk+0x40>
   825e0:	2600      	movs	r6, #0
   825e2:	687d      	ldr	r5, [r7, #4]
   825e4:	68bc      	ldr	r4, [r7, #8]
   825e6:	3d01      	subs	r5, #1
   825e8:	d40e      	bmi.n	82608 <_fwalk+0x34>
   825ea:	89a3      	ldrh	r3, [r4, #12]
   825ec:	3d01      	subs	r5, #1
   825ee:	2b01      	cmp	r3, #1
   825f0:	d906      	bls.n	82600 <_fwalk+0x2c>
   825f2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   825f6:	4620      	mov	r0, r4
   825f8:	3301      	adds	r3, #1
   825fa:	d001      	beq.n	82600 <_fwalk+0x2c>
   825fc:	47c0      	blx	r8
   825fe:	4306      	orrs	r6, r0
   82600:	1c6b      	adds	r3, r5, #1
   82602:	f104 0468 	add.w	r4, r4, #104	; 0x68
   82606:	d1f0      	bne.n	825ea <_fwalk+0x16>
   82608:	683f      	ldr	r7, [r7, #0]
   8260a:	2f00      	cmp	r7, #0
   8260c:	d1e9      	bne.n	825e2 <_fwalk+0xe>
   8260e:	4630      	mov	r0, r6
   82610:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82614:	463e      	mov	r6, r7
   82616:	4630      	mov	r0, r6
   82618:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0008261c <__locale_charset>:
   8261c:	4800      	ldr	r0, [pc, #0]	; (82620 <__locale_charset+0x4>)
   8261e:	4770      	bx	lr
   82620:	2007056c 	.word	0x2007056c

00082624 <__locale_mb_cur_max>:
   82624:	4b01      	ldr	r3, [pc, #4]	; (8262c <__locale_mb_cur_max+0x8>)
   82626:	6818      	ldr	r0, [r3, #0]
   82628:	4770      	bx	lr
   8262a:	bf00      	nop
   8262c:	2007058c 	.word	0x2007058c

00082630 <__smakebuf_r>:
   82630:	b5f0      	push	{r4, r5, r6, r7, lr}
   82632:	898b      	ldrh	r3, [r1, #12]
   82634:	b091      	sub	sp, #68	; 0x44
   82636:	b29a      	uxth	r2, r3
   82638:	0796      	lsls	r6, r2, #30
   8263a:	460c      	mov	r4, r1
   8263c:	4605      	mov	r5, r0
   8263e:	d437      	bmi.n	826b0 <__smakebuf_r+0x80>
   82640:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   82644:	2900      	cmp	r1, #0
   82646:	db17      	blt.n	82678 <__smakebuf_r+0x48>
   82648:	aa01      	add	r2, sp, #4
   8264a:	f000 ffaf 	bl	835ac <_fstat_r>
   8264e:	2800      	cmp	r0, #0
   82650:	db10      	blt.n	82674 <__smakebuf_r+0x44>
   82652:	9b02      	ldr	r3, [sp, #8]
   82654:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
   82658:	f5b3 5100 	subs.w	r1, r3, #8192	; 0x2000
   8265c:	424f      	negs	r7, r1
   8265e:	414f      	adcs	r7, r1
   82660:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
   82664:	d02c      	beq.n	826c0 <__smakebuf_r+0x90>
   82666:	89a3      	ldrh	r3, [r4, #12]
   82668:	f44f 6680 	mov.w	r6, #1024	; 0x400
   8266c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   82670:	81a3      	strh	r3, [r4, #12]
   82672:	e00b      	b.n	8268c <__smakebuf_r+0x5c>
   82674:	89a3      	ldrh	r3, [r4, #12]
   82676:	b29a      	uxth	r2, r3
   82678:	f012 0f80 	tst.w	r2, #128	; 0x80
   8267c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   82680:	81a3      	strh	r3, [r4, #12]
   82682:	bf14      	ite	ne
   82684:	2640      	movne	r6, #64	; 0x40
   82686:	f44f 6680 	moveq.w	r6, #1024	; 0x400
   8268a:	2700      	movs	r7, #0
   8268c:	4628      	mov	r0, r5
   8268e:	4631      	mov	r1, r6
   82690:	f000 f846 	bl	82720 <_malloc_r>
   82694:	89a3      	ldrh	r3, [r4, #12]
   82696:	2800      	cmp	r0, #0
   82698:	d029      	beq.n	826ee <__smakebuf_r+0xbe>
   8269a:	4a1b      	ldr	r2, [pc, #108]	; (82708 <__smakebuf_r+0xd8>)
   8269c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   826a0:	63ea      	str	r2, [r5, #60]	; 0x3c
   826a2:	81a3      	strh	r3, [r4, #12]
   826a4:	6020      	str	r0, [r4, #0]
   826a6:	6120      	str	r0, [r4, #16]
   826a8:	6166      	str	r6, [r4, #20]
   826aa:	b9a7      	cbnz	r7, 826d6 <__smakebuf_r+0xa6>
   826ac:	b011      	add	sp, #68	; 0x44
   826ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
   826b0:	f101 0343 	add.w	r3, r1, #67	; 0x43
   826b4:	2201      	movs	r2, #1
   826b6:	600b      	str	r3, [r1, #0]
   826b8:	610b      	str	r3, [r1, #16]
   826ba:	614a      	str	r2, [r1, #20]
   826bc:	b011      	add	sp, #68	; 0x44
   826be:	bdf0      	pop	{r4, r5, r6, r7, pc}
   826c0:	4a12      	ldr	r2, [pc, #72]	; (8270c <__smakebuf_r+0xdc>)
   826c2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
   826c4:	4293      	cmp	r3, r2
   826c6:	d1ce      	bne.n	82666 <__smakebuf_r+0x36>
   826c8:	89a3      	ldrh	r3, [r4, #12]
   826ca:	f44f 6680 	mov.w	r6, #1024	; 0x400
   826ce:	4333      	orrs	r3, r6
   826d0:	81a3      	strh	r3, [r4, #12]
   826d2:	64e6      	str	r6, [r4, #76]	; 0x4c
   826d4:	e7da      	b.n	8268c <__smakebuf_r+0x5c>
   826d6:	4628      	mov	r0, r5
   826d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   826dc:	f000 ff7a 	bl	835d4 <_isatty_r>
   826e0:	2800      	cmp	r0, #0
   826e2:	d0e3      	beq.n	826ac <__smakebuf_r+0x7c>
   826e4:	89a3      	ldrh	r3, [r4, #12]
   826e6:	f043 0301 	orr.w	r3, r3, #1
   826ea:	81a3      	strh	r3, [r4, #12]
   826ec:	e7de      	b.n	826ac <__smakebuf_r+0x7c>
   826ee:	059a      	lsls	r2, r3, #22
   826f0:	d4dc      	bmi.n	826ac <__smakebuf_r+0x7c>
   826f2:	f104 0243 	add.w	r2, r4, #67	; 0x43
   826f6:	f043 0302 	orr.w	r3, r3, #2
   826fa:	2101      	movs	r1, #1
   826fc:	81a3      	strh	r3, [r4, #12]
   826fe:	6022      	str	r2, [r4, #0]
   82700:	6122      	str	r2, [r4, #16]
   82702:	6161      	str	r1, [r4, #20]
   82704:	e7d2      	b.n	826ac <__smakebuf_r+0x7c>
   82706:	bf00      	nop
   82708:	00081e91 	.word	0x00081e91
   8270c:	000832ed 	.word	0x000832ed

00082710 <malloc>:
   82710:	4b02      	ldr	r3, [pc, #8]	; (8271c <malloc+0xc>)
   82712:	4601      	mov	r1, r0
   82714:	6818      	ldr	r0, [r3, #0]
   82716:	f000 b803 	b.w	82720 <_malloc_r>
   8271a:	bf00      	nop
   8271c:	20070568 	.word	0x20070568

00082720 <_malloc_r>:
   82720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82724:	f101 050b 	add.w	r5, r1, #11
   82728:	2d16      	cmp	r5, #22
   8272a:	b083      	sub	sp, #12
   8272c:	4606      	mov	r6, r0
   8272e:	d927      	bls.n	82780 <_malloc_r+0x60>
   82730:	f035 0507 	bics.w	r5, r5, #7
   82734:	d427      	bmi.n	82786 <_malloc_r+0x66>
   82736:	42a9      	cmp	r1, r5
   82738:	d825      	bhi.n	82786 <_malloc_r+0x66>
   8273a:	4630      	mov	r0, r6
   8273c:	f000 fbb2 	bl	82ea4 <__malloc_lock>
   82740:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   82744:	d226      	bcs.n	82794 <_malloc_r+0x74>
   82746:	4fc1      	ldr	r7, [pc, #772]	; (82a4c <_malloc_r+0x32c>)
   82748:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   8274c:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   82750:	68dc      	ldr	r4, [r3, #12]
   82752:	429c      	cmp	r4, r3
   82754:	f000 81d2 	beq.w	82afc <_malloc_r+0x3dc>
   82758:	6863      	ldr	r3, [r4, #4]
   8275a:	68e2      	ldr	r2, [r4, #12]
   8275c:	f023 0303 	bic.w	r3, r3, #3
   82760:	4423      	add	r3, r4
   82762:	6858      	ldr	r0, [r3, #4]
   82764:	68a1      	ldr	r1, [r4, #8]
   82766:	f040 0501 	orr.w	r5, r0, #1
   8276a:	60ca      	str	r2, [r1, #12]
   8276c:	4630      	mov	r0, r6
   8276e:	6091      	str	r1, [r2, #8]
   82770:	605d      	str	r5, [r3, #4]
   82772:	f000 fb99 	bl	82ea8 <__malloc_unlock>
   82776:	3408      	adds	r4, #8
   82778:	4620      	mov	r0, r4
   8277a:	b003      	add	sp, #12
   8277c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82780:	2510      	movs	r5, #16
   82782:	42a9      	cmp	r1, r5
   82784:	d9d9      	bls.n	8273a <_malloc_r+0x1a>
   82786:	2400      	movs	r4, #0
   82788:	230c      	movs	r3, #12
   8278a:	4620      	mov	r0, r4
   8278c:	6033      	str	r3, [r6, #0]
   8278e:	b003      	add	sp, #12
   82790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82794:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   82798:	f000 8089 	beq.w	828ae <_malloc_r+0x18e>
   8279c:	f1bc 0f04 	cmp.w	ip, #4
   827a0:	f200 8160 	bhi.w	82a64 <_malloc_r+0x344>
   827a4:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   827a8:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   827ac:	ea4f 014c 	mov.w	r1, ip, lsl #1
   827b0:	4fa6      	ldr	r7, [pc, #664]	; (82a4c <_malloc_r+0x32c>)
   827b2:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   827b6:	68cc      	ldr	r4, [r1, #12]
   827b8:	42a1      	cmp	r1, r4
   827ba:	d105      	bne.n	827c8 <_malloc_r+0xa8>
   827bc:	e00c      	b.n	827d8 <_malloc_r+0xb8>
   827be:	2b00      	cmp	r3, #0
   827c0:	da79      	bge.n	828b6 <_malloc_r+0x196>
   827c2:	68e4      	ldr	r4, [r4, #12]
   827c4:	42a1      	cmp	r1, r4
   827c6:	d007      	beq.n	827d8 <_malloc_r+0xb8>
   827c8:	6862      	ldr	r2, [r4, #4]
   827ca:	f022 0203 	bic.w	r2, r2, #3
   827ce:	1b53      	subs	r3, r2, r5
   827d0:	2b0f      	cmp	r3, #15
   827d2:	ddf4      	ble.n	827be <_malloc_r+0x9e>
   827d4:	f10c 3cff 	add.w	ip, ip, #4294967295
   827d8:	f10c 0c01 	add.w	ip, ip, #1
   827dc:	4b9b      	ldr	r3, [pc, #620]	; (82a4c <_malloc_r+0x32c>)
   827de:	693c      	ldr	r4, [r7, #16]
   827e0:	f103 0e08 	add.w	lr, r3, #8
   827e4:	4574      	cmp	r4, lr
   827e6:	f000 817e 	beq.w	82ae6 <_malloc_r+0x3c6>
   827ea:	6861      	ldr	r1, [r4, #4]
   827ec:	f021 0103 	bic.w	r1, r1, #3
   827f0:	1b4a      	subs	r2, r1, r5
   827f2:	2a0f      	cmp	r2, #15
   827f4:	f300 8164 	bgt.w	82ac0 <_malloc_r+0x3a0>
   827f8:	2a00      	cmp	r2, #0
   827fa:	f8c3 e014 	str.w	lr, [r3, #20]
   827fe:	f8c3 e010 	str.w	lr, [r3, #16]
   82802:	da69      	bge.n	828d8 <_malloc_r+0x1b8>
   82804:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   82808:	f080 813a 	bcs.w	82a80 <_malloc_r+0x360>
   8280c:	08c9      	lsrs	r1, r1, #3
   8280e:	108a      	asrs	r2, r1, #2
   82810:	f04f 0801 	mov.w	r8, #1
   82814:	fa08 f802 	lsl.w	r8, r8, r2
   82818:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   8281c:	685a      	ldr	r2, [r3, #4]
   8281e:	6888      	ldr	r0, [r1, #8]
   82820:	ea48 0202 	orr.w	r2, r8, r2
   82824:	60a0      	str	r0, [r4, #8]
   82826:	60e1      	str	r1, [r4, #12]
   82828:	605a      	str	r2, [r3, #4]
   8282a:	608c      	str	r4, [r1, #8]
   8282c:	60c4      	str	r4, [r0, #12]
   8282e:	ea4f 03ac 	mov.w	r3, ip, asr #2
   82832:	2001      	movs	r0, #1
   82834:	4098      	lsls	r0, r3
   82836:	4290      	cmp	r0, r2
   82838:	d85b      	bhi.n	828f2 <_malloc_r+0x1d2>
   8283a:	4202      	tst	r2, r0
   8283c:	d106      	bne.n	8284c <_malloc_r+0x12c>
   8283e:	f02c 0c03 	bic.w	ip, ip, #3
   82842:	0040      	lsls	r0, r0, #1
   82844:	4202      	tst	r2, r0
   82846:	f10c 0c04 	add.w	ip, ip, #4
   8284a:	d0fa      	beq.n	82842 <_malloc_r+0x122>
   8284c:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   82850:	4644      	mov	r4, r8
   82852:	46e1      	mov	r9, ip
   82854:	68e3      	ldr	r3, [r4, #12]
   82856:	429c      	cmp	r4, r3
   82858:	d107      	bne.n	8286a <_malloc_r+0x14a>
   8285a:	e146      	b.n	82aea <_malloc_r+0x3ca>
   8285c:	2a00      	cmp	r2, #0
   8285e:	f280 8157 	bge.w	82b10 <_malloc_r+0x3f0>
   82862:	68db      	ldr	r3, [r3, #12]
   82864:	429c      	cmp	r4, r3
   82866:	f000 8140 	beq.w	82aea <_malloc_r+0x3ca>
   8286a:	6859      	ldr	r1, [r3, #4]
   8286c:	f021 0103 	bic.w	r1, r1, #3
   82870:	1b4a      	subs	r2, r1, r5
   82872:	2a0f      	cmp	r2, #15
   82874:	ddf2      	ble.n	8285c <_malloc_r+0x13c>
   82876:	461c      	mov	r4, r3
   82878:	f854 cf08 	ldr.w	ip, [r4, #8]!
   8287c:	68d9      	ldr	r1, [r3, #12]
   8287e:	f045 0901 	orr.w	r9, r5, #1
   82882:	f042 0801 	orr.w	r8, r2, #1
   82886:	441d      	add	r5, r3
   82888:	f8c3 9004 	str.w	r9, [r3, #4]
   8288c:	4630      	mov	r0, r6
   8288e:	f8cc 100c 	str.w	r1, [ip, #12]
   82892:	f8c1 c008 	str.w	ip, [r1, #8]
   82896:	617d      	str	r5, [r7, #20]
   82898:	613d      	str	r5, [r7, #16]
   8289a:	f8c5 e00c 	str.w	lr, [r5, #12]
   8289e:	f8c5 e008 	str.w	lr, [r5, #8]
   828a2:	f8c5 8004 	str.w	r8, [r5, #4]
   828a6:	50aa      	str	r2, [r5, r2]
   828a8:	f000 fafe 	bl	82ea8 <__malloc_unlock>
   828ac:	e764      	b.n	82778 <_malloc_r+0x58>
   828ae:	217e      	movs	r1, #126	; 0x7e
   828b0:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   828b4:	e77c      	b.n	827b0 <_malloc_r+0x90>
   828b6:	4422      	add	r2, r4
   828b8:	6850      	ldr	r0, [r2, #4]
   828ba:	68e3      	ldr	r3, [r4, #12]
   828bc:	68a1      	ldr	r1, [r4, #8]
   828be:	f040 0501 	orr.w	r5, r0, #1
   828c2:	60cb      	str	r3, [r1, #12]
   828c4:	4630      	mov	r0, r6
   828c6:	6099      	str	r1, [r3, #8]
   828c8:	6055      	str	r5, [r2, #4]
   828ca:	f000 faed 	bl	82ea8 <__malloc_unlock>
   828ce:	3408      	adds	r4, #8
   828d0:	4620      	mov	r0, r4
   828d2:	b003      	add	sp, #12
   828d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   828d8:	4421      	add	r1, r4
   828da:	684b      	ldr	r3, [r1, #4]
   828dc:	4630      	mov	r0, r6
   828de:	f043 0301 	orr.w	r3, r3, #1
   828e2:	604b      	str	r3, [r1, #4]
   828e4:	f000 fae0 	bl	82ea8 <__malloc_unlock>
   828e8:	3408      	adds	r4, #8
   828ea:	4620      	mov	r0, r4
   828ec:	b003      	add	sp, #12
   828ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   828f2:	68bc      	ldr	r4, [r7, #8]
   828f4:	6863      	ldr	r3, [r4, #4]
   828f6:	f023 0903 	bic.w	r9, r3, #3
   828fa:	45a9      	cmp	r9, r5
   828fc:	d304      	bcc.n	82908 <_malloc_r+0x1e8>
   828fe:	ebc5 0309 	rsb	r3, r5, r9
   82902:	2b0f      	cmp	r3, #15
   82904:	f300 8091 	bgt.w	82a2a <_malloc_r+0x30a>
   82908:	4b51      	ldr	r3, [pc, #324]	; (82a50 <_malloc_r+0x330>)
   8290a:	4a52      	ldr	r2, [pc, #328]	; (82a54 <_malloc_r+0x334>)
   8290c:	6819      	ldr	r1, [r3, #0]
   8290e:	6813      	ldr	r3, [r2, #0]
   82910:	eb05 0a01 	add.w	sl, r5, r1
   82914:	3301      	adds	r3, #1
   82916:	eb04 0b09 	add.w	fp, r4, r9
   8291a:	f000 8161 	beq.w	82be0 <_malloc_r+0x4c0>
   8291e:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   82922:	f10a 0a0f 	add.w	sl, sl, #15
   82926:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   8292a:	f02a 0a0f 	bic.w	sl, sl, #15
   8292e:	4630      	mov	r0, r6
   82930:	4651      	mov	r1, sl
   82932:	9201      	str	r2, [sp, #4]
   82934:	f000 fc9a 	bl	8326c <_sbrk_r>
   82938:	f1b0 3fff 	cmp.w	r0, #4294967295
   8293c:	4680      	mov	r8, r0
   8293e:	9a01      	ldr	r2, [sp, #4]
   82940:	f000 8101 	beq.w	82b46 <_malloc_r+0x426>
   82944:	4583      	cmp	fp, r0
   82946:	f200 80fb 	bhi.w	82b40 <_malloc_r+0x420>
   8294a:	f8df c114 	ldr.w	ip, [pc, #276]	; 82a60 <_malloc_r+0x340>
   8294e:	45c3      	cmp	fp, r8
   82950:	f8dc 3000 	ldr.w	r3, [ip]
   82954:	4453      	add	r3, sl
   82956:	f8cc 3000 	str.w	r3, [ip]
   8295a:	f000 814a 	beq.w	82bf2 <_malloc_r+0x4d2>
   8295e:	6812      	ldr	r2, [r2, #0]
   82960:	493c      	ldr	r1, [pc, #240]	; (82a54 <_malloc_r+0x334>)
   82962:	3201      	adds	r2, #1
   82964:	bf1b      	ittet	ne
   82966:	ebcb 0b08 	rsbne	fp, fp, r8
   8296a:	445b      	addne	r3, fp
   8296c:	f8c1 8000 	streq.w	r8, [r1]
   82970:	f8cc 3000 	strne.w	r3, [ip]
   82974:	f018 0307 	ands.w	r3, r8, #7
   82978:	f000 8114 	beq.w	82ba4 <_malloc_r+0x484>
   8297c:	f1c3 0208 	rsb	r2, r3, #8
   82980:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   82984:	4490      	add	r8, r2
   82986:	3308      	adds	r3, #8
   82988:	44c2      	add	sl, r8
   8298a:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   8298e:	ebca 0a03 	rsb	sl, sl, r3
   82992:	4651      	mov	r1, sl
   82994:	4630      	mov	r0, r6
   82996:	f8cd c004 	str.w	ip, [sp, #4]
   8299a:	f000 fc67 	bl	8326c <_sbrk_r>
   8299e:	1c43      	adds	r3, r0, #1
   829a0:	f8dd c004 	ldr.w	ip, [sp, #4]
   829a4:	f000 8135 	beq.w	82c12 <_malloc_r+0x4f2>
   829a8:	ebc8 0200 	rsb	r2, r8, r0
   829ac:	4452      	add	r2, sl
   829ae:	f042 0201 	orr.w	r2, r2, #1
   829b2:	f8dc 3000 	ldr.w	r3, [ip]
   829b6:	42bc      	cmp	r4, r7
   829b8:	4453      	add	r3, sl
   829ba:	f8c7 8008 	str.w	r8, [r7, #8]
   829be:	f8cc 3000 	str.w	r3, [ip]
   829c2:	f8c8 2004 	str.w	r2, [r8, #4]
   829c6:	f8df a098 	ldr.w	sl, [pc, #152]	; 82a60 <_malloc_r+0x340>
   829ca:	d015      	beq.n	829f8 <_malloc_r+0x2d8>
   829cc:	f1b9 0f0f 	cmp.w	r9, #15
   829d0:	f240 80eb 	bls.w	82baa <_malloc_r+0x48a>
   829d4:	6861      	ldr	r1, [r4, #4]
   829d6:	f1a9 020c 	sub.w	r2, r9, #12
   829da:	f022 0207 	bic.w	r2, r2, #7
   829de:	f001 0101 	and.w	r1, r1, #1
   829e2:	ea42 0e01 	orr.w	lr, r2, r1
   829e6:	2005      	movs	r0, #5
   829e8:	18a1      	adds	r1, r4, r2
   829ea:	2a0f      	cmp	r2, #15
   829ec:	f8c4 e004 	str.w	lr, [r4, #4]
   829f0:	6048      	str	r0, [r1, #4]
   829f2:	6088      	str	r0, [r1, #8]
   829f4:	f200 8111 	bhi.w	82c1a <_malloc_r+0x4fa>
   829f8:	4a17      	ldr	r2, [pc, #92]	; (82a58 <_malloc_r+0x338>)
   829fa:	68bc      	ldr	r4, [r7, #8]
   829fc:	6811      	ldr	r1, [r2, #0]
   829fe:	428b      	cmp	r3, r1
   82a00:	bf88      	it	hi
   82a02:	6013      	strhi	r3, [r2, #0]
   82a04:	4a15      	ldr	r2, [pc, #84]	; (82a5c <_malloc_r+0x33c>)
   82a06:	6811      	ldr	r1, [r2, #0]
   82a08:	428b      	cmp	r3, r1
   82a0a:	bf88      	it	hi
   82a0c:	6013      	strhi	r3, [r2, #0]
   82a0e:	6862      	ldr	r2, [r4, #4]
   82a10:	f022 0203 	bic.w	r2, r2, #3
   82a14:	4295      	cmp	r5, r2
   82a16:	ebc5 0302 	rsb	r3, r5, r2
   82a1a:	d801      	bhi.n	82a20 <_malloc_r+0x300>
   82a1c:	2b0f      	cmp	r3, #15
   82a1e:	dc04      	bgt.n	82a2a <_malloc_r+0x30a>
   82a20:	4630      	mov	r0, r6
   82a22:	f000 fa41 	bl	82ea8 <__malloc_unlock>
   82a26:	2400      	movs	r4, #0
   82a28:	e6a6      	b.n	82778 <_malloc_r+0x58>
   82a2a:	f045 0201 	orr.w	r2, r5, #1
   82a2e:	f043 0301 	orr.w	r3, r3, #1
   82a32:	4425      	add	r5, r4
   82a34:	6062      	str	r2, [r4, #4]
   82a36:	4630      	mov	r0, r6
   82a38:	60bd      	str	r5, [r7, #8]
   82a3a:	606b      	str	r3, [r5, #4]
   82a3c:	f000 fa34 	bl	82ea8 <__malloc_unlock>
   82a40:	3408      	adds	r4, #8
   82a42:	4620      	mov	r0, r4
   82a44:	b003      	add	sp, #12
   82a46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a4a:	bf00      	nop
   82a4c:	20070590 	.word	0x20070590
   82a50:	20070ae0 	.word	0x20070ae0
   82a54:	2007099c 	.word	0x2007099c
   82a58:	20070adc 	.word	0x20070adc
   82a5c:	20070ad8 	.word	0x20070ad8
   82a60:	20070ae4 	.word	0x20070ae4
   82a64:	f1bc 0f14 	cmp.w	ip, #20
   82a68:	d961      	bls.n	82b2e <_malloc_r+0x40e>
   82a6a:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   82a6e:	f200 808f 	bhi.w	82b90 <_malloc_r+0x470>
   82a72:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   82a76:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   82a7a:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82a7e:	e697      	b.n	827b0 <_malloc_r+0x90>
   82a80:	0a4b      	lsrs	r3, r1, #9
   82a82:	2b04      	cmp	r3, #4
   82a84:	d958      	bls.n	82b38 <_malloc_r+0x418>
   82a86:	2b14      	cmp	r3, #20
   82a88:	f200 80ad 	bhi.w	82be6 <_malloc_r+0x4c6>
   82a8c:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   82a90:	0050      	lsls	r0, r2, #1
   82a92:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   82a96:	6883      	ldr	r3, [r0, #8]
   82a98:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 82c54 <_malloc_r+0x534>
   82a9c:	4283      	cmp	r3, r0
   82a9e:	f000 808a 	beq.w	82bb6 <_malloc_r+0x496>
   82aa2:	685a      	ldr	r2, [r3, #4]
   82aa4:	f022 0203 	bic.w	r2, r2, #3
   82aa8:	4291      	cmp	r1, r2
   82aaa:	d202      	bcs.n	82ab2 <_malloc_r+0x392>
   82aac:	689b      	ldr	r3, [r3, #8]
   82aae:	4298      	cmp	r0, r3
   82ab0:	d1f7      	bne.n	82aa2 <_malloc_r+0x382>
   82ab2:	68d9      	ldr	r1, [r3, #12]
   82ab4:	687a      	ldr	r2, [r7, #4]
   82ab6:	60e1      	str	r1, [r4, #12]
   82ab8:	60a3      	str	r3, [r4, #8]
   82aba:	608c      	str	r4, [r1, #8]
   82abc:	60dc      	str	r4, [r3, #12]
   82abe:	e6b6      	b.n	8282e <_malloc_r+0x10e>
   82ac0:	f045 0701 	orr.w	r7, r5, #1
   82ac4:	f042 0101 	orr.w	r1, r2, #1
   82ac8:	4425      	add	r5, r4
   82aca:	6067      	str	r7, [r4, #4]
   82acc:	4630      	mov	r0, r6
   82ace:	615d      	str	r5, [r3, #20]
   82ad0:	611d      	str	r5, [r3, #16]
   82ad2:	f8c5 e00c 	str.w	lr, [r5, #12]
   82ad6:	f8c5 e008 	str.w	lr, [r5, #8]
   82ada:	6069      	str	r1, [r5, #4]
   82adc:	50aa      	str	r2, [r5, r2]
   82ade:	3408      	adds	r4, #8
   82ae0:	f000 f9e2 	bl	82ea8 <__malloc_unlock>
   82ae4:	e648      	b.n	82778 <_malloc_r+0x58>
   82ae6:	685a      	ldr	r2, [r3, #4]
   82ae8:	e6a1      	b.n	8282e <_malloc_r+0x10e>
   82aea:	f109 0901 	add.w	r9, r9, #1
   82aee:	f019 0f03 	tst.w	r9, #3
   82af2:	f104 0408 	add.w	r4, r4, #8
   82af6:	f47f aead 	bne.w	82854 <_malloc_r+0x134>
   82afa:	e02d      	b.n	82b58 <_malloc_r+0x438>
   82afc:	f104 0308 	add.w	r3, r4, #8
   82b00:	6964      	ldr	r4, [r4, #20]
   82b02:	42a3      	cmp	r3, r4
   82b04:	bf08      	it	eq
   82b06:	f10c 0c02 	addeq.w	ip, ip, #2
   82b0a:	f43f ae67 	beq.w	827dc <_malloc_r+0xbc>
   82b0e:	e623      	b.n	82758 <_malloc_r+0x38>
   82b10:	4419      	add	r1, r3
   82b12:	6848      	ldr	r0, [r1, #4]
   82b14:	461c      	mov	r4, r3
   82b16:	f854 2f08 	ldr.w	r2, [r4, #8]!
   82b1a:	68db      	ldr	r3, [r3, #12]
   82b1c:	f040 0501 	orr.w	r5, r0, #1
   82b20:	604d      	str	r5, [r1, #4]
   82b22:	4630      	mov	r0, r6
   82b24:	60d3      	str	r3, [r2, #12]
   82b26:	609a      	str	r2, [r3, #8]
   82b28:	f000 f9be 	bl	82ea8 <__malloc_unlock>
   82b2c:	e624      	b.n	82778 <_malloc_r+0x58>
   82b2e:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   82b32:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82b36:	e63b      	b.n	827b0 <_malloc_r+0x90>
   82b38:	098a      	lsrs	r2, r1, #6
   82b3a:	3238      	adds	r2, #56	; 0x38
   82b3c:	0050      	lsls	r0, r2, #1
   82b3e:	e7a8      	b.n	82a92 <_malloc_r+0x372>
   82b40:	42bc      	cmp	r4, r7
   82b42:	f43f af02 	beq.w	8294a <_malloc_r+0x22a>
   82b46:	68bc      	ldr	r4, [r7, #8]
   82b48:	6862      	ldr	r2, [r4, #4]
   82b4a:	f022 0203 	bic.w	r2, r2, #3
   82b4e:	e761      	b.n	82a14 <_malloc_r+0x2f4>
   82b50:	f8d8 8000 	ldr.w	r8, [r8]
   82b54:	4598      	cmp	r8, r3
   82b56:	d17a      	bne.n	82c4e <_malloc_r+0x52e>
   82b58:	f01c 0f03 	tst.w	ip, #3
   82b5c:	f1a8 0308 	sub.w	r3, r8, #8
   82b60:	f10c 3cff 	add.w	ip, ip, #4294967295
   82b64:	d1f4      	bne.n	82b50 <_malloc_r+0x430>
   82b66:	687b      	ldr	r3, [r7, #4]
   82b68:	ea23 0300 	bic.w	r3, r3, r0
   82b6c:	607b      	str	r3, [r7, #4]
   82b6e:	0040      	lsls	r0, r0, #1
   82b70:	4298      	cmp	r0, r3
   82b72:	f63f aebe 	bhi.w	828f2 <_malloc_r+0x1d2>
   82b76:	2800      	cmp	r0, #0
   82b78:	f43f aebb 	beq.w	828f2 <_malloc_r+0x1d2>
   82b7c:	4203      	tst	r3, r0
   82b7e:	46cc      	mov	ip, r9
   82b80:	f47f ae64 	bne.w	8284c <_malloc_r+0x12c>
   82b84:	0040      	lsls	r0, r0, #1
   82b86:	4203      	tst	r3, r0
   82b88:	f10c 0c04 	add.w	ip, ip, #4
   82b8c:	d0fa      	beq.n	82b84 <_malloc_r+0x464>
   82b8e:	e65d      	b.n	8284c <_malloc_r+0x12c>
   82b90:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   82b94:	d819      	bhi.n	82bca <_malloc_r+0x4aa>
   82b96:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   82b9a:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   82b9e:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82ba2:	e605      	b.n	827b0 <_malloc_r+0x90>
   82ba4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   82ba8:	e6ee      	b.n	82988 <_malloc_r+0x268>
   82baa:	2301      	movs	r3, #1
   82bac:	f8c8 3004 	str.w	r3, [r8, #4]
   82bb0:	4644      	mov	r4, r8
   82bb2:	2200      	movs	r2, #0
   82bb4:	e72e      	b.n	82a14 <_malloc_r+0x2f4>
   82bb6:	1092      	asrs	r2, r2, #2
   82bb8:	2001      	movs	r0, #1
   82bba:	4090      	lsls	r0, r2
   82bbc:	f8d8 2004 	ldr.w	r2, [r8, #4]
   82bc0:	4619      	mov	r1, r3
   82bc2:	4302      	orrs	r2, r0
   82bc4:	f8c8 2004 	str.w	r2, [r8, #4]
   82bc8:	e775      	b.n	82ab6 <_malloc_r+0x396>
   82bca:	f240 5354 	movw	r3, #1364	; 0x554
   82bce:	459c      	cmp	ip, r3
   82bd0:	d81b      	bhi.n	82c0a <_malloc_r+0x4ea>
   82bd2:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   82bd6:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   82bda:	ea4f 014c 	mov.w	r1, ip, lsl #1
   82bde:	e5e7      	b.n	827b0 <_malloc_r+0x90>
   82be0:	f10a 0a10 	add.w	sl, sl, #16
   82be4:	e6a3      	b.n	8292e <_malloc_r+0x20e>
   82be6:	2b54      	cmp	r3, #84	; 0x54
   82be8:	d81f      	bhi.n	82c2a <_malloc_r+0x50a>
   82bea:	0b0a      	lsrs	r2, r1, #12
   82bec:	326e      	adds	r2, #110	; 0x6e
   82bee:	0050      	lsls	r0, r2, #1
   82bf0:	e74f      	b.n	82a92 <_malloc_r+0x372>
   82bf2:	f3cb 010b 	ubfx	r1, fp, #0, #12
   82bf6:	2900      	cmp	r1, #0
   82bf8:	f47f aeb1 	bne.w	8295e <_malloc_r+0x23e>
   82bfc:	eb0a 0109 	add.w	r1, sl, r9
   82c00:	68ba      	ldr	r2, [r7, #8]
   82c02:	f041 0101 	orr.w	r1, r1, #1
   82c06:	6051      	str	r1, [r2, #4]
   82c08:	e6f6      	b.n	829f8 <_malloc_r+0x2d8>
   82c0a:	21fc      	movs	r1, #252	; 0xfc
   82c0c:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   82c10:	e5ce      	b.n	827b0 <_malloc_r+0x90>
   82c12:	2201      	movs	r2, #1
   82c14:	f04f 0a00 	mov.w	sl, #0
   82c18:	e6cb      	b.n	829b2 <_malloc_r+0x292>
   82c1a:	f104 0108 	add.w	r1, r4, #8
   82c1e:	4630      	mov	r0, r6
   82c20:	f7ff fa80 	bl	82124 <_free_r>
   82c24:	f8da 3000 	ldr.w	r3, [sl]
   82c28:	e6e6      	b.n	829f8 <_malloc_r+0x2d8>
   82c2a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   82c2e:	d803      	bhi.n	82c38 <_malloc_r+0x518>
   82c30:	0bca      	lsrs	r2, r1, #15
   82c32:	3277      	adds	r2, #119	; 0x77
   82c34:	0050      	lsls	r0, r2, #1
   82c36:	e72c      	b.n	82a92 <_malloc_r+0x372>
   82c38:	f240 5254 	movw	r2, #1364	; 0x554
   82c3c:	4293      	cmp	r3, r2
   82c3e:	d803      	bhi.n	82c48 <_malloc_r+0x528>
   82c40:	0c8a      	lsrs	r2, r1, #18
   82c42:	327c      	adds	r2, #124	; 0x7c
   82c44:	0050      	lsls	r0, r2, #1
   82c46:	e724      	b.n	82a92 <_malloc_r+0x372>
   82c48:	20fc      	movs	r0, #252	; 0xfc
   82c4a:	227e      	movs	r2, #126	; 0x7e
   82c4c:	e721      	b.n	82a92 <_malloc_r+0x372>
   82c4e:	687b      	ldr	r3, [r7, #4]
   82c50:	e78d      	b.n	82b6e <_malloc_r+0x44e>
   82c52:	bf00      	nop
   82c54:	20070590 	.word	0x20070590

00082c58 <memchr>:
   82c58:	0783      	lsls	r3, r0, #30
   82c5a:	b470      	push	{r4, r5, r6}
   82c5c:	b2c9      	uxtb	r1, r1
   82c5e:	d040      	beq.n	82ce2 <memchr+0x8a>
   82c60:	1e54      	subs	r4, r2, #1
   82c62:	b32a      	cbz	r2, 82cb0 <memchr+0x58>
   82c64:	7803      	ldrb	r3, [r0, #0]
   82c66:	428b      	cmp	r3, r1
   82c68:	d023      	beq.n	82cb2 <memchr+0x5a>
   82c6a:	1c43      	adds	r3, r0, #1
   82c6c:	e004      	b.n	82c78 <memchr+0x20>
   82c6e:	b1fc      	cbz	r4, 82cb0 <memchr+0x58>
   82c70:	7805      	ldrb	r5, [r0, #0]
   82c72:	4614      	mov	r4, r2
   82c74:	428d      	cmp	r5, r1
   82c76:	d01c      	beq.n	82cb2 <memchr+0x5a>
   82c78:	f013 0f03 	tst.w	r3, #3
   82c7c:	4618      	mov	r0, r3
   82c7e:	f104 32ff 	add.w	r2, r4, #4294967295
   82c82:	f103 0301 	add.w	r3, r3, #1
   82c86:	d1f2      	bne.n	82c6e <memchr+0x16>
   82c88:	2c03      	cmp	r4, #3
   82c8a:	d814      	bhi.n	82cb6 <memchr+0x5e>
   82c8c:	1e65      	subs	r5, r4, #1
   82c8e:	b354      	cbz	r4, 82ce6 <memchr+0x8e>
   82c90:	7803      	ldrb	r3, [r0, #0]
   82c92:	428b      	cmp	r3, r1
   82c94:	d00d      	beq.n	82cb2 <memchr+0x5a>
   82c96:	1c42      	adds	r2, r0, #1
   82c98:	2300      	movs	r3, #0
   82c9a:	e002      	b.n	82ca2 <memchr+0x4a>
   82c9c:	7804      	ldrb	r4, [r0, #0]
   82c9e:	428c      	cmp	r4, r1
   82ca0:	d007      	beq.n	82cb2 <memchr+0x5a>
   82ca2:	42ab      	cmp	r3, r5
   82ca4:	4610      	mov	r0, r2
   82ca6:	f103 0301 	add.w	r3, r3, #1
   82caa:	f102 0201 	add.w	r2, r2, #1
   82cae:	d1f5      	bne.n	82c9c <memchr+0x44>
   82cb0:	2000      	movs	r0, #0
   82cb2:	bc70      	pop	{r4, r5, r6}
   82cb4:	4770      	bx	lr
   82cb6:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   82cba:	4603      	mov	r3, r0
   82cbc:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   82cc0:	681a      	ldr	r2, [r3, #0]
   82cc2:	4618      	mov	r0, r3
   82cc4:	4072      	eors	r2, r6
   82cc6:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   82cca:	ea25 0202 	bic.w	r2, r5, r2
   82cce:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   82cd2:	f103 0304 	add.w	r3, r3, #4
   82cd6:	d1d9      	bne.n	82c8c <memchr+0x34>
   82cd8:	3c04      	subs	r4, #4
   82cda:	2c03      	cmp	r4, #3
   82cdc:	4618      	mov	r0, r3
   82cde:	d8ef      	bhi.n	82cc0 <memchr+0x68>
   82ce0:	e7d4      	b.n	82c8c <memchr+0x34>
   82ce2:	4614      	mov	r4, r2
   82ce4:	e7d0      	b.n	82c88 <memchr+0x30>
   82ce6:	4620      	mov	r0, r4
   82ce8:	e7e3      	b.n	82cb2 <memchr+0x5a>
   82cea:	bf00      	nop

00082cec <memcpy>:
   82cec:	4684      	mov	ip, r0
   82cee:	ea41 0300 	orr.w	r3, r1, r0
   82cf2:	f013 0303 	ands.w	r3, r3, #3
   82cf6:	d149      	bne.n	82d8c <memcpy+0xa0>
   82cf8:	3a40      	subs	r2, #64	; 0x40
   82cfa:	d323      	bcc.n	82d44 <memcpy+0x58>
   82cfc:	680b      	ldr	r3, [r1, #0]
   82cfe:	6003      	str	r3, [r0, #0]
   82d00:	684b      	ldr	r3, [r1, #4]
   82d02:	6043      	str	r3, [r0, #4]
   82d04:	688b      	ldr	r3, [r1, #8]
   82d06:	6083      	str	r3, [r0, #8]
   82d08:	68cb      	ldr	r3, [r1, #12]
   82d0a:	60c3      	str	r3, [r0, #12]
   82d0c:	690b      	ldr	r3, [r1, #16]
   82d0e:	6103      	str	r3, [r0, #16]
   82d10:	694b      	ldr	r3, [r1, #20]
   82d12:	6143      	str	r3, [r0, #20]
   82d14:	698b      	ldr	r3, [r1, #24]
   82d16:	6183      	str	r3, [r0, #24]
   82d18:	69cb      	ldr	r3, [r1, #28]
   82d1a:	61c3      	str	r3, [r0, #28]
   82d1c:	6a0b      	ldr	r3, [r1, #32]
   82d1e:	6203      	str	r3, [r0, #32]
   82d20:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   82d22:	6243      	str	r3, [r0, #36]	; 0x24
   82d24:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   82d26:	6283      	str	r3, [r0, #40]	; 0x28
   82d28:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   82d2a:	62c3      	str	r3, [r0, #44]	; 0x2c
   82d2c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82d2e:	6303      	str	r3, [r0, #48]	; 0x30
   82d30:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   82d32:	6343      	str	r3, [r0, #52]	; 0x34
   82d34:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   82d36:	6383      	str	r3, [r0, #56]	; 0x38
   82d38:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   82d3a:	63c3      	str	r3, [r0, #60]	; 0x3c
   82d3c:	3040      	adds	r0, #64	; 0x40
   82d3e:	3140      	adds	r1, #64	; 0x40
   82d40:	3a40      	subs	r2, #64	; 0x40
   82d42:	d2db      	bcs.n	82cfc <memcpy+0x10>
   82d44:	3230      	adds	r2, #48	; 0x30
   82d46:	d30b      	bcc.n	82d60 <memcpy+0x74>
   82d48:	680b      	ldr	r3, [r1, #0]
   82d4a:	6003      	str	r3, [r0, #0]
   82d4c:	684b      	ldr	r3, [r1, #4]
   82d4e:	6043      	str	r3, [r0, #4]
   82d50:	688b      	ldr	r3, [r1, #8]
   82d52:	6083      	str	r3, [r0, #8]
   82d54:	68cb      	ldr	r3, [r1, #12]
   82d56:	60c3      	str	r3, [r0, #12]
   82d58:	3010      	adds	r0, #16
   82d5a:	3110      	adds	r1, #16
   82d5c:	3a10      	subs	r2, #16
   82d5e:	d2f3      	bcs.n	82d48 <memcpy+0x5c>
   82d60:	320c      	adds	r2, #12
   82d62:	d305      	bcc.n	82d70 <memcpy+0x84>
   82d64:	f851 3b04 	ldr.w	r3, [r1], #4
   82d68:	f840 3b04 	str.w	r3, [r0], #4
   82d6c:	3a04      	subs	r2, #4
   82d6e:	d2f9      	bcs.n	82d64 <memcpy+0x78>
   82d70:	3204      	adds	r2, #4
   82d72:	d008      	beq.n	82d86 <memcpy+0x9a>
   82d74:	07d2      	lsls	r2, r2, #31
   82d76:	bf1c      	itt	ne
   82d78:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82d7c:	f800 3b01 	strbne.w	r3, [r0], #1
   82d80:	d301      	bcc.n	82d86 <memcpy+0x9a>
   82d82:	880b      	ldrh	r3, [r1, #0]
   82d84:	8003      	strh	r3, [r0, #0]
   82d86:	4660      	mov	r0, ip
   82d88:	4770      	bx	lr
   82d8a:	bf00      	nop
   82d8c:	2a08      	cmp	r2, #8
   82d8e:	d313      	bcc.n	82db8 <memcpy+0xcc>
   82d90:	078b      	lsls	r3, r1, #30
   82d92:	d0b1      	beq.n	82cf8 <memcpy+0xc>
   82d94:	f010 0303 	ands.w	r3, r0, #3
   82d98:	d0ae      	beq.n	82cf8 <memcpy+0xc>
   82d9a:	f1c3 0304 	rsb	r3, r3, #4
   82d9e:	1ad2      	subs	r2, r2, r3
   82da0:	07db      	lsls	r3, r3, #31
   82da2:	bf1c      	itt	ne
   82da4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82da8:	f800 3b01 	strbne.w	r3, [r0], #1
   82dac:	d3a4      	bcc.n	82cf8 <memcpy+0xc>
   82dae:	f831 3b02 	ldrh.w	r3, [r1], #2
   82db2:	f820 3b02 	strh.w	r3, [r0], #2
   82db6:	e79f      	b.n	82cf8 <memcpy+0xc>
   82db8:	3a04      	subs	r2, #4
   82dba:	d3d9      	bcc.n	82d70 <memcpy+0x84>
   82dbc:	3a01      	subs	r2, #1
   82dbe:	f811 3b01 	ldrb.w	r3, [r1], #1
   82dc2:	f800 3b01 	strb.w	r3, [r0], #1
   82dc6:	d2f9      	bcs.n	82dbc <memcpy+0xd0>
   82dc8:	780b      	ldrb	r3, [r1, #0]
   82dca:	7003      	strb	r3, [r0, #0]
   82dcc:	784b      	ldrb	r3, [r1, #1]
   82dce:	7043      	strb	r3, [r0, #1]
   82dd0:	788b      	ldrb	r3, [r1, #2]
   82dd2:	7083      	strb	r3, [r0, #2]
   82dd4:	4660      	mov	r0, ip
   82dd6:	4770      	bx	lr

00082dd8 <memmove>:
   82dd8:	4288      	cmp	r0, r1
   82dda:	b4f0      	push	{r4, r5, r6, r7}
   82ddc:	d910      	bls.n	82e00 <memmove+0x28>
   82dde:	188c      	adds	r4, r1, r2
   82de0:	42a0      	cmp	r0, r4
   82de2:	d20d      	bcs.n	82e00 <memmove+0x28>
   82de4:	1885      	adds	r5, r0, r2
   82de6:	1e53      	subs	r3, r2, #1
   82de8:	b142      	cbz	r2, 82dfc <memmove+0x24>
   82dea:	4621      	mov	r1, r4
   82dec:	462a      	mov	r2, r5
   82dee:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   82df2:	3b01      	subs	r3, #1
   82df4:	f802 4d01 	strb.w	r4, [r2, #-1]!
   82df8:	1c5c      	adds	r4, r3, #1
   82dfa:	d1f8      	bne.n	82dee <memmove+0x16>
   82dfc:	bcf0      	pop	{r4, r5, r6, r7}
   82dfe:	4770      	bx	lr
   82e00:	2a0f      	cmp	r2, #15
   82e02:	d944      	bls.n	82e8e <memmove+0xb6>
   82e04:	ea40 0301 	orr.w	r3, r0, r1
   82e08:	079b      	lsls	r3, r3, #30
   82e0a:	d144      	bne.n	82e96 <memmove+0xbe>
   82e0c:	f1a2 0710 	sub.w	r7, r2, #16
   82e10:	093f      	lsrs	r7, r7, #4
   82e12:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   82e16:	3610      	adds	r6, #16
   82e18:	460c      	mov	r4, r1
   82e1a:	4603      	mov	r3, r0
   82e1c:	6825      	ldr	r5, [r4, #0]
   82e1e:	3310      	adds	r3, #16
   82e20:	f843 5c10 	str.w	r5, [r3, #-16]
   82e24:	6865      	ldr	r5, [r4, #4]
   82e26:	3410      	adds	r4, #16
   82e28:	f843 5c0c 	str.w	r5, [r3, #-12]
   82e2c:	f854 5c08 	ldr.w	r5, [r4, #-8]
   82e30:	f843 5c08 	str.w	r5, [r3, #-8]
   82e34:	f854 5c04 	ldr.w	r5, [r4, #-4]
   82e38:	f843 5c04 	str.w	r5, [r3, #-4]
   82e3c:	42b3      	cmp	r3, r6
   82e3e:	d1ed      	bne.n	82e1c <memmove+0x44>
   82e40:	1c7b      	adds	r3, r7, #1
   82e42:	f002 0c0f 	and.w	ip, r2, #15
   82e46:	011b      	lsls	r3, r3, #4
   82e48:	f1bc 0f03 	cmp.w	ip, #3
   82e4c:	4419      	add	r1, r3
   82e4e:	4403      	add	r3, r0
   82e50:	d923      	bls.n	82e9a <memmove+0xc2>
   82e52:	460e      	mov	r6, r1
   82e54:	461d      	mov	r5, r3
   82e56:	4664      	mov	r4, ip
   82e58:	f856 7b04 	ldr.w	r7, [r6], #4
   82e5c:	3c04      	subs	r4, #4
   82e5e:	2c03      	cmp	r4, #3
   82e60:	f845 7b04 	str.w	r7, [r5], #4
   82e64:	d8f8      	bhi.n	82e58 <memmove+0x80>
   82e66:	f1ac 0404 	sub.w	r4, ip, #4
   82e6a:	f024 0403 	bic.w	r4, r4, #3
   82e6e:	3404      	adds	r4, #4
   82e70:	f002 0203 	and.w	r2, r2, #3
   82e74:	4423      	add	r3, r4
   82e76:	4421      	add	r1, r4
   82e78:	2a00      	cmp	r2, #0
   82e7a:	d0bf      	beq.n	82dfc <memmove+0x24>
   82e7c:	441a      	add	r2, r3
   82e7e:	f811 4b01 	ldrb.w	r4, [r1], #1
   82e82:	f803 4b01 	strb.w	r4, [r3], #1
   82e86:	4293      	cmp	r3, r2
   82e88:	d1f9      	bne.n	82e7e <memmove+0xa6>
   82e8a:	bcf0      	pop	{r4, r5, r6, r7}
   82e8c:	4770      	bx	lr
   82e8e:	4603      	mov	r3, r0
   82e90:	2a00      	cmp	r2, #0
   82e92:	d1f3      	bne.n	82e7c <memmove+0xa4>
   82e94:	e7b2      	b.n	82dfc <memmove+0x24>
   82e96:	4603      	mov	r3, r0
   82e98:	e7f0      	b.n	82e7c <memmove+0xa4>
   82e9a:	4662      	mov	r2, ip
   82e9c:	2a00      	cmp	r2, #0
   82e9e:	d1ed      	bne.n	82e7c <memmove+0xa4>
   82ea0:	e7ac      	b.n	82dfc <memmove+0x24>
   82ea2:	bf00      	nop

00082ea4 <__malloc_lock>:
   82ea4:	4770      	bx	lr
   82ea6:	bf00      	nop

00082ea8 <__malloc_unlock>:
   82ea8:	4770      	bx	lr
   82eaa:	bf00      	nop

00082eac <_realloc_r>:
   82eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82eb0:	460c      	mov	r4, r1
   82eb2:	b083      	sub	sp, #12
   82eb4:	4690      	mov	r8, r2
   82eb6:	4681      	mov	r9, r0
   82eb8:	2900      	cmp	r1, #0
   82eba:	f000 80ba 	beq.w	83032 <_realloc_r+0x186>
   82ebe:	f7ff fff1 	bl	82ea4 <__malloc_lock>
   82ec2:	f108 060b 	add.w	r6, r8, #11
   82ec6:	f854 3c04 	ldr.w	r3, [r4, #-4]
   82eca:	2e16      	cmp	r6, #22
   82ecc:	f023 0503 	bic.w	r5, r3, #3
   82ed0:	f1a4 0708 	sub.w	r7, r4, #8
   82ed4:	d84b      	bhi.n	82f6e <_realloc_r+0xc2>
   82ed6:	2110      	movs	r1, #16
   82ed8:	460e      	mov	r6, r1
   82eda:	45b0      	cmp	r8, r6
   82edc:	d84c      	bhi.n	82f78 <_realloc_r+0xcc>
   82ede:	428d      	cmp	r5, r1
   82ee0:	da51      	bge.n	82f86 <_realloc_r+0xda>
   82ee2:	f8df b384 	ldr.w	fp, [pc, #900]	; 83268 <_realloc_r+0x3bc>
   82ee6:	1978      	adds	r0, r7, r5
   82ee8:	f8db e008 	ldr.w	lr, [fp, #8]
   82eec:	4586      	cmp	lr, r0
   82eee:	f000 80a6 	beq.w	8303e <_realloc_r+0x192>
   82ef2:	6842      	ldr	r2, [r0, #4]
   82ef4:	f022 0c01 	bic.w	ip, r2, #1
   82ef8:	4484      	add	ip, r0
   82efa:	f8dc c004 	ldr.w	ip, [ip, #4]
   82efe:	f01c 0f01 	tst.w	ip, #1
   82f02:	d054      	beq.n	82fae <_realloc_r+0x102>
   82f04:	2200      	movs	r2, #0
   82f06:	4610      	mov	r0, r2
   82f08:	07db      	lsls	r3, r3, #31
   82f0a:	d46f      	bmi.n	82fec <_realloc_r+0x140>
   82f0c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   82f10:	ebc3 0a07 	rsb	sl, r3, r7
   82f14:	f8da 3004 	ldr.w	r3, [sl, #4]
   82f18:	f023 0303 	bic.w	r3, r3, #3
   82f1c:	442b      	add	r3, r5
   82f1e:	2800      	cmp	r0, #0
   82f20:	d062      	beq.n	82fe8 <_realloc_r+0x13c>
   82f22:	4570      	cmp	r0, lr
   82f24:	f000 80e9 	beq.w	830fa <_realloc_r+0x24e>
   82f28:	eb02 0e03 	add.w	lr, r2, r3
   82f2c:	458e      	cmp	lr, r1
   82f2e:	db5b      	blt.n	82fe8 <_realloc_r+0x13c>
   82f30:	68c3      	ldr	r3, [r0, #12]
   82f32:	6882      	ldr	r2, [r0, #8]
   82f34:	46d0      	mov	r8, sl
   82f36:	60d3      	str	r3, [r2, #12]
   82f38:	609a      	str	r2, [r3, #8]
   82f3a:	f858 1f08 	ldr.w	r1, [r8, #8]!
   82f3e:	f8da 300c 	ldr.w	r3, [sl, #12]
   82f42:	1f2a      	subs	r2, r5, #4
   82f44:	2a24      	cmp	r2, #36	; 0x24
   82f46:	60cb      	str	r3, [r1, #12]
   82f48:	6099      	str	r1, [r3, #8]
   82f4a:	f200 8123 	bhi.w	83194 <_realloc_r+0x2e8>
   82f4e:	2a13      	cmp	r2, #19
   82f50:	f240 80b0 	bls.w	830b4 <_realloc_r+0x208>
   82f54:	6823      	ldr	r3, [r4, #0]
   82f56:	2a1b      	cmp	r2, #27
   82f58:	f8ca 3008 	str.w	r3, [sl, #8]
   82f5c:	6863      	ldr	r3, [r4, #4]
   82f5e:	f8ca 300c 	str.w	r3, [sl, #12]
   82f62:	f200 812b 	bhi.w	831bc <_realloc_r+0x310>
   82f66:	3408      	adds	r4, #8
   82f68:	f10a 0310 	add.w	r3, sl, #16
   82f6c:	e0a3      	b.n	830b6 <_realloc_r+0x20a>
   82f6e:	f026 0607 	bic.w	r6, r6, #7
   82f72:	2e00      	cmp	r6, #0
   82f74:	4631      	mov	r1, r6
   82f76:	dab0      	bge.n	82eda <_realloc_r+0x2e>
   82f78:	230c      	movs	r3, #12
   82f7a:	2000      	movs	r0, #0
   82f7c:	f8c9 3000 	str.w	r3, [r9]
   82f80:	b003      	add	sp, #12
   82f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82f86:	46a0      	mov	r8, r4
   82f88:	1baa      	subs	r2, r5, r6
   82f8a:	2a0f      	cmp	r2, #15
   82f8c:	f003 0301 	and.w	r3, r3, #1
   82f90:	d81a      	bhi.n	82fc8 <_realloc_r+0x11c>
   82f92:	432b      	orrs	r3, r5
   82f94:	607b      	str	r3, [r7, #4]
   82f96:	443d      	add	r5, r7
   82f98:	686b      	ldr	r3, [r5, #4]
   82f9a:	f043 0301 	orr.w	r3, r3, #1
   82f9e:	606b      	str	r3, [r5, #4]
   82fa0:	4648      	mov	r0, r9
   82fa2:	f7ff ff81 	bl	82ea8 <__malloc_unlock>
   82fa6:	4640      	mov	r0, r8
   82fa8:	b003      	add	sp, #12
   82faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82fae:	f022 0203 	bic.w	r2, r2, #3
   82fb2:	eb02 0c05 	add.w	ip, r2, r5
   82fb6:	458c      	cmp	ip, r1
   82fb8:	dba6      	blt.n	82f08 <_realloc_r+0x5c>
   82fba:	68c2      	ldr	r2, [r0, #12]
   82fbc:	6881      	ldr	r1, [r0, #8]
   82fbe:	46a0      	mov	r8, r4
   82fc0:	60ca      	str	r2, [r1, #12]
   82fc2:	4665      	mov	r5, ip
   82fc4:	6091      	str	r1, [r2, #8]
   82fc6:	e7df      	b.n	82f88 <_realloc_r+0xdc>
   82fc8:	19b9      	adds	r1, r7, r6
   82fca:	4333      	orrs	r3, r6
   82fcc:	f042 0001 	orr.w	r0, r2, #1
   82fd0:	607b      	str	r3, [r7, #4]
   82fd2:	440a      	add	r2, r1
   82fd4:	6048      	str	r0, [r1, #4]
   82fd6:	6853      	ldr	r3, [r2, #4]
   82fd8:	3108      	adds	r1, #8
   82fda:	f043 0301 	orr.w	r3, r3, #1
   82fde:	6053      	str	r3, [r2, #4]
   82fe0:	4648      	mov	r0, r9
   82fe2:	f7ff f89f 	bl	82124 <_free_r>
   82fe6:	e7db      	b.n	82fa0 <_realloc_r+0xf4>
   82fe8:	428b      	cmp	r3, r1
   82fea:	da33      	bge.n	83054 <_realloc_r+0x1a8>
   82fec:	4641      	mov	r1, r8
   82fee:	4648      	mov	r0, r9
   82ff0:	f7ff fb96 	bl	82720 <_malloc_r>
   82ff4:	4680      	mov	r8, r0
   82ff6:	2800      	cmp	r0, #0
   82ff8:	d0d2      	beq.n	82fa0 <_realloc_r+0xf4>
   82ffa:	f854 3c04 	ldr.w	r3, [r4, #-4]
   82ffe:	f1a0 0108 	sub.w	r1, r0, #8
   83002:	f023 0201 	bic.w	r2, r3, #1
   83006:	443a      	add	r2, r7
   83008:	4291      	cmp	r1, r2
   8300a:	f000 80bc 	beq.w	83186 <_realloc_r+0x2da>
   8300e:	1f2a      	subs	r2, r5, #4
   83010:	2a24      	cmp	r2, #36	; 0x24
   83012:	d86e      	bhi.n	830f2 <_realloc_r+0x246>
   83014:	2a13      	cmp	r2, #19
   83016:	d842      	bhi.n	8309e <_realloc_r+0x1f2>
   83018:	4603      	mov	r3, r0
   8301a:	4622      	mov	r2, r4
   8301c:	6811      	ldr	r1, [r2, #0]
   8301e:	6019      	str	r1, [r3, #0]
   83020:	6851      	ldr	r1, [r2, #4]
   83022:	6059      	str	r1, [r3, #4]
   83024:	6892      	ldr	r2, [r2, #8]
   83026:	609a      	str	r2, [r3, #8]
   83028:	4621      	mov	r1, r4
   8302a:	4648      	mov	r0, r9
   8302c:	f7ff f87a 	bl	82124 <_free_r>
   83030:	e7b6      	b.n	82fa0 <_realloc_r+0xf4>
   83032:	4611      	mov	r1, r2
   83034:	b003      	add	sp, #12
   83036:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8303a:	f7ff bb71 	b.w	82720 <_malloc_r>
   8303e:	f8de 2004 	ldr.w	r2, [lr, #4]
   83042:	f106 0c10 	add.w	ip, r6, #16
   83046:	f022 0203 	bic.w	r2, r2, #3
   8304a:	1950      	adds	r0, r2, r5
   8304c:	4560      	cmp	r0, ip
   8304e:	da3d      	bge.n	830cc <_realloc_r+0x220>
   83050:	4670      	mov	r0, lr
   83052:	e759      	b.n	82f08 <_realloc_r+0x5c>
   83054:	46d0      	mov	r8, sl
   83056:	f858 0f08 	ldr.w	r0, [r8, #8]!
   8305a:	f8da 100c 	ldr.w	r1, [sl, #12]
   8305e:	1f2a      	subs	r2, r5, #4
   83060:	2a24      	cmp	r2, #36	; 0x24
   83062:	60c1      	str	r1, [r0, #12]
   83064:	6088      	str	r0, [r1, #8]
   83066:	f200 80a0 	bhi.w	831aa <_realloc_r+0x2fe>
   8306a:	2a13      	cmp	r2, #19
   8306c:	f240 809b 	bls.w	831a6 <_realloc_r+0x2fa>
   83070:	6821      	ldr	r1, [r4, #0]
   83072:	2a1b      	cmp	r2, #27
   83074:	f8ca 1008 	str.w	r1, [sl, #8]
   83078:	6861      	ldr	r1, [r4, #4]
   8307a:	f8ca 100c 	str.w	r1, [sl, #12]
   8307e:	f200 80b2 	bhi.w	831e6 <_realloc_r+0x33a>
   83082:	3408      	adds	r4, #8
   83084:	f10a 0210 	add.w	r2, sl, #16
   83088:	6821      	ldr	r1, [r4, #0]
   8308a:	461d      	mov	r5, r3
   8308c:	6011      	str	r1, [r2, #0]
   8308e:	6861      	ldr	r1, [r4, #4]
   83090:	4657      	mov	r7, sl
   83092:	6051      	str	r1, [r2, #4]
   83094:	68a3      	ldr	r3, [r4, #8]
   83096:	6093      	str	r3, [r2, #8]
   83098:	f8da 3004 	ldr.w	r3, [sl, #4]
   8309c:	e774      	b.n	82f88 <_realloc_r+0xdc>
   8309e:	6823      	ldr	r3, [r4, #0]
   830a0:	2a1b      	cmp	r2, #27
   830a2:	6003      	str	r3, [r0, #0]
   830a4:	6863      	ldr	r3, [r4, #4]
   830a6:	6043      	str	r3, [r0, #4]
   830a8:	d862      	bhi.n	83170 <_realloc_r+0x2c4>
   830aa:	f100 0308 	add.w	r3, r0, #8
   830ae:	f104 0208 	add.w	r2, r4, #8
   830b2:	e7b3      	b.n	8301c <_realloc_r+0x170>
   830b4:	4643      	mov	r3, r8
   830b6:	6822      	ldr	r2, [r4, #0]
   830b8:	4675      	mov	r5, lr
   830ba:	601a      	str	r2, [r3, #0]
   830bc:	6862      	ldr	r2, [r4, #4]
   830be:	4657      	mov	r7, sl
   830c0:	605a      	str	r2, [r3, #4]
   830c2:	68a2      	ldr	r2, [r4, #8]
   830c4:	609a      	str	r2, [r3, #8]
   830c6:	f8da 3004 	ldr.w	r3, [sl, #4]
   830ca:	e75d      	b.n	82f88 <_realloc_r+0xdc>
   830cc:	1b83      	subs	r3, r0, r6
   830ce:	4437      	add	r7, r6
   830d0:	f043 0301 	orr.w	r3, r3, #1
   830d4:	f8cb 7008 	str.w	r7, [fp, #8]
   830d8:	607b      	str	r3, [r7, #4]
   830da:	f854 3c04 	ldr.w	r3, [r4, #-4]
   830de:	4648      	mov	r0, r9
   830e0:	f003 0301 	and.w	r3, r3, #1
   830e4:	431e      	orrs	r6, r3
   830e6:	f844 6c04 	str.w	r6, [r4, #-4]
   830ea:	f7ff fedd 	bl	82ea8 <__malloc_unlock>
   830ee:	4620      	mov	r0, r4
   830f0:	e75a      	b.n	82fa8 <_realloc_r+0xfc>
   830f2:	4621      	mov	r1, r4
   830f4:	f7ff fe70 	bl	82dd8 <memmove>
   830f8:	e796      	b.n	83028 <_realloc_r+0x17c>
   830fa:	eb02 0c03 	add.w	ip, r2, r3
   830fe:	f106 0210 	add.w	r2, r6, #16
   83102:	4594      	cmp	ip, r2
   83104:	f6ff af70 	blt.w	82fe8 <_realloc_r+0x13c>
   83108:	4657      	mov	r7, sl
   8310a:	f857 1f08 	ldr.w	r1, [r7, #8]!
   8310e:	f8da 300c 	ldr.w	r3, [sl, #12]
   83112:	1f2a      	subs	r2, r5, #4
   83114:	2a24      	cmp	r2, #36	; 0x24
   83116:	60cb      	str	r3, [r1, #12]
   83118:	6099      	str	r1, [r3, #8]
   8311a:	f200 8086 	bhi.w	8322a <_realloc_r+0x37e>
   8311e:	2a13      	cmp	r2, #19
   83120:	d977      	bls.n	83212 <_realloc_r+0x366>
   83122:	6823      	ldr	r3, [r4, #0]
   83124:	2a1b      	cmp	r2, #27
   83126:	f8ca 3008 	str.w	r3, [sl, #8]
   8312a:	6863      	ldr	r3, [r4, #4]
   8312c:	f8ca 300c 	str.w	r3, [sl, #12]
   83130:	f200 8084 	bhi.w	8323c <_realloc_r+0x390>
   83134:	3408      	adds	r4, #8
   83136:	f10a 0310 	add.w	r3, sl, #16
   8313a:	6822      	ldr	r2, [r4, #0]
   8313c:	601a      	str	r2, [r3, #0]
   8313e:	6862      	ldr	r2, [r4, #4]
   83140:	605a      	str	r2, [r3, #4]
   83142:	68a2      	ldr	r2, [r4, #8]
   83144:	609a      	str	r2, [r3, #8]
   83146:	ebc6 020c 	rsb	r2, r6, ip
   8314a:	eb0a 0306 	add.w	r3, sl, r6
   8314e:	f042 0201 	orr.w	r2, r2, #1
   83152:	f8cb 3008 	str.w	r3, [fp, #8]
   83156:	605a      	str	r2, [r3, #4]
   83158:	f8da 3004 	ldr.w	r3, [sl, #4]
   8315c:	4648      	mov	r0, r9
   8315e:	f003 0301 	and.w	r3, r3, #1
   83162:	431e      	orrs	r6, r3
   83164:	f8ca 6004 	str.w	r6, [sl, #4]
   83168:	f7ff fe9e 	bl	82ea8 <__malloc_unlock>
   8316c:	4638      	mov	r0, r7
   8316e:	e71b      	b.n	82fa8 <_realloc_r+0xfc>
   83170:	68a3      	ldr	r3, [r4, #8]
   83172:	2a24      	cmp	r2, #36	; 0x24
   83174:	6083      	str	r3, [r0, #8]
   83176:	68e3      	ldr	r3, [r4, #12]
   83178:	60c3      	str	r3, [r0, #12]
   8317a:	d02b      	beq.n	831d4 <_realloc_r+0x328>
   8317c:	f100 0310 	add.w	r3, r0, #16
   83180:	f104 0210 	add.w	r2, r4, #16
   83184:	e74a      	b.n	8301c <_realloc_r+0x170>
   83186:	f850 2c04 	ldr.w	r2, [r0, #-4]
   8318a:	46a0      	mov	r8, r4
   8318c:	f022 0203 	bic.w	r2, r2, #3
   83190:	4415      	add	r5, r2
   83192:	e6f9      	b.n	82f88 <_realloc_r+0xdc>
   83194:	4621      	mov	r1, r4
   83196:	4640      	mov	r0, r8
   83198:	4675      	mov	r5, lr
   8319a:	4657      	mov	r7, sl
   8319c:	f7ff fe1c 	bl	82dd8 <memmove>
   831a0:	f8da 3004 	ldr.w	r3, [sl, #4]
   831a4:	e6f0      	b.n	82f88 <_realloc_r+0xdc>
   831a6:	4642      	mov	r2, r8
   831a8:	e76e      	b.n	83088 <_realloc_r+0x1dc>
   831aa:	4621      	mov	r1, r4
   831ac:	4640      	mov	r0, r8
   831ae:	461d      	mov	r5, r3
   831b0:	4657      	mov	r7, sl
   831b2:	f7ff fe11 	bl	82dd8 <memmove>
   831b6:	f8da 3004 	ldr.w	r3, [sl, #4]
   831ba:	e6e5      	b.n	82f88 <_realloc_r+0xdc>
   831bc:	68a3      	ldr	r3, [r4, #8]
   831be:	2a24      	cmp	r2, #36	; 0x24
   831c0:	f8ca 3010 	str.w	r3, [sl, #16]
   831c4:	68e3      	ldr	r3, [r4, #12]
   831c6:	f8ca 3014 	str.w	r3, [sl, #20]
   831ca:	d018      	beq.n	831fe <_realloc_r+0x352>
   831cc:	3410      	adds	r4, #16
   831ce:	f10a 0318 	add.w	r3, sl, #24
   831d2:	e770      	b.n	830b6 <_realloc_r+0x20a>
   831d4:	6922      	ldr	r2, [r4, #16]
   831d6:	f100 0318 	add.w	r3, r0, #24
   831da:	6102      	str	r2, [r0, #16]
   831dc:	6961      	ldr	r1, [r4, #20]
   831de:	f104 0218 	add.w	r2, r4, #24
   831e2:	6141      	str	r1, [r0, #20]
   831e4:	e71a      	b.n	8301c <_realloc_r+0x170>
   831e6:	68a1      	ldr	r1, [r4, #8]
   831e8:	2a24      	cmp	r2, #36	; 0x24
   831ea:	f8ca 1010 	str.w	r1, [sl, #16]
   831ee:	68e1      	ldr	r1, [r4, #12]
   831f0:	f8ca 1014 	str.w	r1, [sl, #20]
   831f4:	d00f      	beq.n	83216 <_realloc_r+0x36a>
   831f6:	3410      	adds	r4, #16
   831f8:	f10a 0218 	add.w	r2, sl, #24
   831fc:	e744      	b.n	83088 <_realloc_r+0x1dc>
   831fe:	6922      	ldr	r2, [r4, #16]
   83200:	f10a 0320 	add.w	r3, sl, #32
   83204:	f8ca 2018 	str.w	r2, [sl, #24]
   83208:	6962      	ldr	r2, [r4, #20]
   8320a:	3418      	adds	r4, #24
   8320c:	f8ca 201c 	str.w	r2, [sl, #28]
   83210:	e751      	b.n	830b6 <_realloc_r+0x20a>
   83212:	463b      	mov	r3, r7
   83214:	e791      	b.n	8313a <_realloc_r+0x28e>
   83216:	6921      	ldr	r1, [r4, #16]
   83218:	f10a 0220 	add.w	r2, sl, #32
   8321c:	f8ca 1018 	str.w	r1, [sl, #24]
   83220:	6961      	ldr	r1, [r4, #20]
   83222:	3418      	adds	r4, #24
   83224:	f8ca 101c 	str.w	r1, [sl, #28]
   83228:	e72e      	b.n	83088 <_realloc_r+0x1dc>
   8322a:	4621      	mov	r1, r4
   8322c:	4638      	mov	r0, r7
   8322e:	f8cd c004 	str.w	ip, [sp, #4]
   83232:	f7ff fdd1 	bl	82dd8 <memmove>
   83236:	f8dd c004 	ldr.w	ip, [sp, #4]
   8323a:	e784      	b.n	83146 <_realloc_r+0x29a>
   8323c:	68a3      	ldr	r3, [r4, #8]
   8323e:	2a24      	cmp	r2, #36	; 0x24
   83240:	f8ca 3010 	str.w	r3, [sl, #16]
   83244:	68e3      	ldr	r3, [r4, #12]
   83246:	f8ca 3014 	str.w	r3, [sl, #20]
   8324a:	d003      	beq.n	83254 <_realloc_r+0x3a8>
   8324c:	3410      	adds	r4, #16
   8324e:	f10a 0318 	add.w	r3, sl, #24
   83252:	e772      	b.n	8313a <_realloc_r+0x28e>
   83254:	6922      	ldr	r2, [r4, #16]
   83256:	f10a 0320 	add.w	r3, sl, #32
   8325a:	f8ca 2018 	str.w	r2, [sl, #24]
   8325e:	6962      	ldr	r2, [r4, #20]
   83260:	3418      	adds	r4, #24
   83262:	f8ca 201c 	str.w	r2, [sl, #28]
   83266:	e768      	b.n	8313a <_realloc_r+0x28e>
   83268:	20070590 	.word	0x20070590

0008326c <_sbrk_r>:
   8326c:	b538      	push	{r3, r4, r5, lr}
   8326e:	4c07      	ldr	r4, [pc, #28]	; (8328c <_sbrk_r+0x20>)
   83270:	2300      	movs	r3, #0
   83272:	4605      	mov	r5, r0
   83274:	4608      	mov	r0, r1
   83276:	6023      	str	r3, [r4, #0]
   83278:	f7fd fcd4 	bl	80c24 <_sbrk>
   8327c:	1c43      	adds	r3, r0, #1
   8327e:	d000      	beq.n	83282 <_sbrk_r+0x16>
   83280:	bd38      	pop	{r3, r4, r5, pc}
   83282:	6823      	ldr	r3, [r4, #0]
   83284:	2b00      	cmp	r3, #0
   83286:	d0fb      	beq.n	83280 <_sbrk_r+0x14>
   83288:	602b      	str	r3, [r5, #0]
   8328a:	bd38      	pop	{r3, r4, r5, pc}
   8328c:	20070b18 	.word	0x20070b18

00083290 <__sread>:
   83290:	b510      	push	{r4, lr}
   83292:	460c      	mov	r4, r1
   83294:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83298:	f000 f9c2 	bl	83620 <_read_r>
   8329c:	2800      	cmp	r0, #0
   8329e:	db03      	blt.n	832a8 <__sread+0x18>
   832a0:	6d23      	ldr	r3, [r4, #80]	; 0x50
   832a2:	4403      	add	r3, r0
   832a4:	6523      	str	r3, [r4, #80]	; 0x50
   832a6:	bd10      	pop	{r4, pc}
   832a8:	89a3      	ldrh	r3, [r4, #12]
   832aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   832ae:	81a3      	strh	r3, [r4, #12]
   832b0:	bd10      	pop	{r4, pc}
   832b2:	bf00      	nop

000832b4 <__swrite>:
   832b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   832b8:	460c      	mov	r4, r1
   832ba:	8989      	ldrh	r1, [r1, #12]
   832bc:	461d      	mov	r5, r3
   832be:	05cb      	lsls	r3, r1, #23
   832c0:	4616      	mov	r6, r2
   832c2:	4607      	mov	r7, r0
   832c4:	d506      	bpl.n	832d4 <__swrite+0x20>
   832c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   832ca:	2200      	movs	r2, #0
   832cc:	2302      	movs	r3, #2
   832ce:	f000 f993 	bl	835f8 <_lseek_r>
   832d2:	89a1      	ldrh	r1, [r4, #12]
   832d4:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   832d8:	81a1      	strh	r1, [r4, #12]
   832da:	4638      	mov	r0, r7
   832dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   832e0:	4632      	mov	r2, r6
   832e2:	462b      	mov	r3, r5
   832e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   832e8:	f000 b89e 	b.w	83428 <_write_r>

000832ec <__sseek>:
   832ec:	b510      	push	{r4, lr}
   832ee:	460c      	mov	r4, r1
   832f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   832f4:	f000 f980 	bl	835f8 <_lseek_r>
   832f8:	89a3      	ldrh	r3, [r4, #12]
   832fa:	1c42      	adds	r2, r0, #1
   832fc:	bf0e      	itee	eq
   832fe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   83302:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   83306:	6520      	strne	r0, [r4, #80]	; 0x50
   83308:	81a3      	strh	r3, [r4, #12]
   8330a:	bd10      	pop	{r4, pc}

0008330c <__sclose>:
   8330c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83310:	f000 b8f2 	b.w	834f8 <_close_r>

00083314 <__swbuf_r>:
   83314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83316:	460d      	mov	r5, r1
   83318:	4614      	mov	r4, r2
   8331a:	4607      	mov	r7, r0
   8331c:	b110      	cbz	r0, 83324 <__swbuf_r+0x10>
   8331e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83320:	2b00      	cmp	r3, #0
   83322:	d048      	beq.n	833b6 <__swbuf_r+0xa2>
   83324:	89a2      	ldrh	r2, [r4, #12]
   83326:	69a0      	ldr	r0, [r4, #24]
   83328:	b293      	uxth	r3, r2
   8332a:	60a0      	str	r0, [r4, #8]
   8332c:	0718      	lsls	r0, r3, #28
   8332e:	d538      	bpl.n	833a2 <__swbuf_r+0x8e>
   83330:	6926      	ldr	r6, [r4, #16]
   83332:	2e00      	cmp	r6, #0
   83334:	d035      	beq.n	833a2 <__swbuf_r+0x8e>
   83336:	0499      	lsls	r1, r3, #18
   83338:	b2ed      	uxtb	r5, r5
   8333a:	d515      	bpl.n	83368 <__swbuf_r+0x54>
   8333c:	6823      	ldr	r3, [r4, #0]
   8333e:	6962      	ldr	r2, [r4, #20]
   83340:	1b9e      	subs	r6, r3, r6
   83342:	4296      	cmp	r6, r2
   83344:	da1c      	bge.n	83380 <__swbuf_r+0x6c>
   83346:	3601      	adds	r6, #1
   83348:	68a2      	ldr	r2, [r4, #8]
   8334a:	1c59      	adds	r1, r3, #1
   8334c:	3a01      	subs	r2, #1
   8334e:	60a2      	str	r2, [r4, #8]
   83350:	6021      	str	r1, [r4, #0]
   83352:	701d      	strb	r5, [r3, #0]
   83354:	6963      	ldr	r3, [r4, #20]
   83356:	42b3      	cmp	r3, r6
   83358:	d01a      	beq.n	83390 <__swbuf_r+0x7c>
   8335a:	89a3      	ldrh	r3, [r4, #12]
   8335c:	07db      	lsls	r3, r3, #31
   8335e:	d501      	bpl.n	83364 <__swbuf_r+0x50>
   83360:	2d0a      	cmp	r5, #10
   83362:	d015      	beq.n	83390 <__swbuf_r+0x7c>
   83364:	4628      	mov	r0, r5
   83366:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83368:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8336a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   8336e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   83372:	6663      	str	r3, [r4, #100]	; 0x64
   83374:	6823      	ldr	r3, [r4, #0]
   83376:	81a2      	strh	r2, [r4, #12]
   83378:	6962      	ldr	r2, [r4, #20]
   8337a:	1b9e      	subs	r6, r3, r6
   8337c:	4296      	cmp	r6, r2
   8337e:	dbe2      	blt.n	83346 <__swbuf_r+0x32>
   83380:	4638      	mov	r0, r7
   83382:	4621      	mov	r1, r4
   83384:	f7fe fd6e 	bl	81e64 <_fflush_r>
   83388:	b940      	cbnz	r0, 8339c <__swbuf_r+0x88>
   8338a:	6823      	ldr	r3, [r4, #0]
   8338c:	2601      	movs	r6, #1
   8338e:	e7db      	b.n	83348 <__swbuf_r+0x34>
   83390:	4638      	mov	r0, r7
   83392:	4621      	mov	r1, r4
   83394:	f7fe fd66 	bl	81e64 <_fflush_r>
   83398:	2800      	cmp	r0, #0
   8339a:	d0e3      	beq.n	83364 <__swbuf_r+0x50>
   8339c:	f04f 30ff 	mov.w	r0, #4294967295
   833a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   833a2:	4638      	mov	r0, r7
   833a4:	4621      	mov	r1, r4
   833a6:	f7fe fc47 	bl	81c38 <__swsetup_r>
   833aa:	2800      	cmp	r0, #0
   833ac:	d1f6      	bne.n	8339c <__swbuf_r+0x88>
   833ae:	89a2      	ldrh	r2, [r4, #12]
   833b0:	6926      	ldr	r6, [r4, #16]
   833b2:	b293      	uxth	r3, r2
   833b4:	e7bf      	b.n	83336 <__swbuf_r+0x22>
   833b6:	f7fe fd71 	bl	81e9c <__sinit>
   833ba:	e7b3      	b.n	83324 <__swbuf_r+0x10>

000833bc <_wcrtomb_r>:
   833bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   833c0:	461e      	mov	r6, r3
   833c2:	b086      	sub	sp, #24
   833c4:	460c      	mov	r4, r1
   833c6:	4605      	mov	r5, r0
   833c8:	4617      	mov	r7, r2
   833ca:	4b0f      	ldr	r3, [pc, #60]	; (83408 <_wcrtomb_r+0x4c>)
   833cc:	b191      	cbz	r1, 833f4 <_wcrtomb_r+0x38>
   833ce:	f8d3 8000 	ldr.w	r8, [r3]
   833d2:	f7ff f923 	bl	8261c <__locale_charset>
   833d6:	9600      	str	r6, [sp, #0]
   833d8:	4603      	mov	r3, r0
   833da:	4621      	mov	r1, r4
   833dc:	463a      	mov	r2, r7
   833de:	4628      	mov	r0, r5
   833e0:	47c0      	blx	r8
   833e2:	1c43      	adds	r3, r0, #1
   833e4:	d103      	bne.n	833ee <_wcrtomb_r+0x32>
   833e6:	2200      	movs	r2, #0
   833e8:	238a      	movs	r3, #138	; 0x8a
   833ea:	6032      	str	r2, [r6, #0]
   833ec:	602b      	str	r3, [r5, #0]
   833ee:	b006      	add	sp, #24
   833f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   833f4:	681f      	ldr	r7, [r3, #0]
   833f6:	f7ff f911 	bl	8261c <__locale_charset>
   833fa:	9600      	str	r6, [sp, #0]
   833fc:	4603      	mov	r3, r0
   833fe:	4622      	mov	r2, r4
   83400:	4628      	mov	r0, r5
   83402:	a903      	add	r1, sp, #12
   83404:	47b8      	blx	r7
   83406:	e7ec      	b.n	833e2 <_wcrtomb_r+0x26>
   83408:	200709a0 	.word	0x200709a0

0008340c <__ascii_wctomb>:
   8340c:	b121      	cbz	r1, 83418 <__ascii_wctomb+0xc>
   8340e:	2aff      	cmp	r2, #255	; 0xff
   83410:	d804      	bhi.n	8341c <__ascii_wctomb+0x10>
   83412:	700a      	strb	r2, [r1, #0]
   83414:	2001      	movs	r0, #1
   83416:	4770      	bx	lr
   83418:	4608      	mov	r0, r1
   8341a:	4770      	bx	lr
   8341c:	238a      	movs	r3, #138	; 0x8a
   8341e:	6003      	str	r3, [r0, #0]
   83420:	f04f 30ff 	mov.w	r0, #4294967295
   83424:	4770      	bx	lr
   83426:	bf00      	nop

00083428 <_write_r>:
   83428:	b570      	push	{r4, r5, r6, lr}
   8342a:	4c08      	ldr	r4, [pc, #32]	; (8344c <_write_r+0x24>)
   8342c:	4606      	mov	r6, r0
   8342e:	2500      	movs	r5, #0
   83430:	4608      	mov	r0, r1
   83432:	4611      	mov	r1, r2
   83434:	461a      	mov	r2, r3
   83436:	6025      	str	r5, [r4, #0]
   83438:	f7fc ff64 	bl	80304 <_write>
   8343c:	1c43      	adds	r3, r0, #1
   8343e:	d000      	beq.n	83442 <_write_r+0x1a>
   83440:	bd70      	pop	{r4, r5, r6, pc}
   83442:	6823      	ldr	r3, [r4, #0]
   83444:	2b00      	cmp	r3, #0
   83446:	d0fb      	beq.n	83440 <_write_r+0x18>
   83448:	6033      	str	r3, [r6, #0]
   8344a:	bd70      	pop	{r4, r5, r6, pc}
   8344c:	20070b18 	.word	0x20070b18

00083450 <__register_exitproc>:
   83450:	b5f0      	push	{r4, r5, r6, r7, lr}
   83452:	4c27      	ldr	r4, [pc, #156]	; (834f0 <__register_exitproc+0xa0>)
   83454:	b085      	sub	sp, #20
   83456:	6826      	ldr	r6, [r4, #0]
   83458:	4607      	mov	r7, r0
   8345a:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   8345e:	2c00      	cmp	r4, #0
   83460:	d040      	beq.n	834e4 <__register_exitproc+0x94>
   83462:	6865      	ldr	r5, [r4, #4]
   83464:	2d1f      	cmp	r5, #31
   83466:	dd1e      	ble.n	834a6 <__register_exitproc+0x56>
   83468:	4822      	ldr	r0, [pc, #136]	; (834f4 <__register_exitproc+0xa4>)
   8346a:	b918      	cbnz	r0, 83474 <__register_exitproc+0x24>
   8346c:	f04f 30ff 	mov.w	r0, #4294967295
   83470:	b005      	add	sp, #20
   83472:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83474:	f44f 70c8 	mov.w	r0, #400	; 0x190
   83478:	9103      	str	r1, [sp, #12]
   8347a:	9202      	str	r2, [sp, #8]
   8347c:	9301      	str	r3, [sp, #4]
   8347e:	f7ff f947 	bl	82710 <malloc>
   83482:	9903      	ldr	r1, [sp, #12]
   83484:	4604      	mov	r4, r0
   83486:	9a02      	ldr	r2, [sp, #8]
   83488:	9b01      	ldr	r3, [sp, #4]
   8348a:	2800      	cmp	r0, #0
   8348c:	d0ee      	beq.n	8346c <__register_exitproc+0x1c>
   8348e:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   83492:	2000      	movs	r0, #0
   83494:	6025      	str	r5, [r4, #0]
   83496:	6060      	str	r0, [r4, #4]
   83498:	4605      	mov	r5, r0
   8349a:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   8349e:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   834a2:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   834a6:	b93f      	cbnz	r7, 834b8 <__register_exitproc+0x68>
   834a8:	1c6b      	adds	r3, r5, #1
   834aa:	2000      	movs	r0, #0
   834ac:	3502      	adds	r5, #2
   834ae:	6063      	str	r3, [r4, #4]
   834b0:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   834b4:	b005      	add	sp, #20
   834b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   834b8:	2601      	movs	r6, #1
   834ba:	40ae      	lsls	r6, r5
   834bc:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   834c0:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   834c4:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   834c8:	2f02      	cmp	r7, #2
   834ca:	ea42 0206 	orr.w	r2, r2, r6
   834ce:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   834d2:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   834d6:	d1e7      	bne.n	834a8 <__register_exitproc+0x58>
   834d8:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   834dc:	431e      	orrs	r6, r3
   834de:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   834e2:	e7e1      	b.n	834a8 <__register_exitproc+0x58>
   834e4:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   834e8:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   834ec:	e7b9      	b.n	83462 <__register_exitproc+0x12>
   834ee:	bf00      	nop
   834f0:	00083c2c 	.word	0x00083c2c
   834f4:	00082711 	.word	0x00082711

000834f8 <_close_r>:
   834f8:	b538      	push	{r3, r4, r5, lr}
   834fa:	4c07      	ldr	r4, [pc, #28]	; (83518 <_close_r+0x20>)
   834fc:	2300      	movs	r3, #0
   834fe:	4605      	mov	r5, r0
   83500:	4608      	mov	r0, r1
   83502:	6023      	str	r3, [r4, #0]
   83504:	f7fd fba8 	bl	80c58 <_close>
   83508:	1c43      	adds	r3, r0, #1
   8350a:	d000      	beq.n	8350e <_close_r+0x16>
   8350c:	bd38      	pop	{r3, r4, r5, pc}
   8350e:	6823      	ldr	r3, [r4, #0]
   83510:	2b00      	cmp	r3, #0
   83512:	d0fb      	beq.n	8350c <_close_r+0x14>
   83514:	602b      	str	r3, [r5, #0]
   83516:	bd38      	pop	{r3, r4, r5, pc}
   83518:	20070b18 	.word	0x20070b18

0008351c <_fclose_r>:
   8351c:	b570      	push	{r4, r5, r6, lr}
   8351e:	460c      	mov	r4, r1
   83520:	4605      	mov	r5, r0
   83522:	b131      	cbz	r1, 83532 <_fclose_r+0x16>
   83524:	b110      	cbz	r0, 8352c <_fclose_r+0x10>
   83526:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83528:	2b00      	cmp	r3, #0
   8352a:	d02f      	beq.n	8358c <_fclose_r+0x70>
   8352c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83530:	b90b      	cbnz	r3, 83536 <_fclose_r+0x1a>
   83532:	2000      	movs	r0, #0
   83534:	bd70      	pop	{r4, r5, r6, pc}
   83536:	4628      	mov	r0, r5
   83538:	4621      	mov	r1, r4
   8353a:	f7fe fc93 	bl	81e64 <_fflush_r>
   8353e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   83540:	4606      	mov	r6, r0
   83542:	b133      	cbz	r3, 83552 <_fclose_r+0x36>
   83544:	4628      	mov	r0, r5
   83546:	69e1      	ldr	r1, [r4, #28]
   83548:	4798      	blx	r3
   8354a:	2800      	cmp	r0, #0
   8354c:	bfb8      	it	lt
   8354e:	f04f 36ff 	movlt.w	r6, #4294967295
   83552:	89a3      	ldrh	r3, [r4, #12]
   83554:	061b      	lsls	r3, r3, #24
   83556:	d41c      	bmi.n	83592 <_fclose_r+0x76>
   83558:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8355a:	b141      	cbz	r1, 8356e <_fclose_r+0x52>
   8355c:	f104 0340 	add.w	r3, r4, #64	; 0x40
   83560:	4299      	cmp	r1, r3
   83562:	d002      	beq.n	8356a <_fclose_r+0x4e>
   83564:	4628      	mov	r0, r5
   83566:	f7fe fddd 	bl	82124 <_free_r>
   8356a:	2300      	movs	r3, #0
   8356c:	6323      	str	r3, [r4, #48]	; 0x30
   8356e:	6c61      	ldr	r1, [r4, #68]	; 0x44
   83570:	b121      	cbz	r1, 8357c <_fclose_r+0x60>
   83572:	4628      	mov	r0, r5
   83574:	f7fe fdd6 	bl	82124 <_free_r>
   83578:	2300      	movs	r3, #0
   8357a:	6463      	str	r3, [r4, #68]	; 0x44
   8357c:	f7fe fd08 	bl	81f90 <__sfp_lock_acquire>
   83580:	2300      	movs	r3, #0
   83582:	81a3      	strh	r3, [r4, #12]
   83584:	f7fe fd06 	bl	81f94 <__sfp_lock_release>
   83588:	4630      	mov	r0, r6
   8358a:	bd70      	pop	{r4, r5, r6, pc}
   8358c:	f7fe fc86 	bl	81e9c <__sinit>
   83590:	e7cc      	b.n	8352c <_fclose_r+0x10>
   83592:	4628      	mov	r0, r5
   83594:	6921      	ldr	r1, [r4, #16]
   83596:	f7fe fdc5 	bl	82124 <_free_r>
   8359a:	e7dd      	b.n	83558 <_fclose_r+0x3c>

0008359c <fclose>:
   8359c:	4b02      	ldr	r3, [pc, #8]	; (835a8 <fclose+0xc>)
   8359e:	4601      	mov	r1, r0
   835a0:	6818      	ldr	r0, [r3, #0]
   835a2:	f7ff bfbb 	b.w	8351c <_fclose_r>
   835a6:	bf00      	nop
   835a8:	20070568 	.word	0x20070568

000835ac <_fstat_r>:
   835ac:	b538      	push	{r3, r4, r5, lr}
   835ae:	4c08      	ldr	r4, [pc, #32]	; (835d0 <_fstat_r+0x24>)
   835b0:	2300      	movs	r3, #0
   835b2:	4605      	mov	r5, r0
   835b4:	4608      	mov	r0, r1
   835b6:	4611      	mov	r1, r2
   835b8:	6023      	str	r3, [r4, #0]
   835ba:	f7fd fb51 	bl	80c60 <_fstat>
   835be:	1c43      	adds	r3, r0, #1
   835c0:	d000      	beq.n	835c4 <_fstat_r+0x18>
   835c2:	bd38      	pop	{r3, r4, r5, pc}
   835c4:	6823      	ldr	r3, [r4, #0]
   835c6:	2b00      	cmp	r3, #0
   835c8:	d0fb      	beq.n	835c2 <_fstat_r+0x16>
   835ca:	602b      	str	r3, [r5, #0]
   835cc:	bd38      	pop	{r3, r4, r5, pc}
   835ce:	bf00      	nop
   835d0:	20070b18 	.word	0x20070b18

000835d4 <_isatty_r>:
   835d4:	b538      	push	{r3, r4, r5, lr}
   835d6:	4c07      	ldr	r4, [pc, #28]	; (835f4 <_isatty_r+0x20>)
   835d8:	2300      	movs	r3, #0
   835da:	4605      	mov	r5, r0
   835dc:	4608      	mov	r0, r1
   835de:	6023      	str	r3, [r4, #0]
   835e0:	f7fd fb44 	bl	80c6c <_isatty>
   835e4:	1c43      	adds	r3, r0, #1
   835e6:	d000      	beq.n	835ea <_isatty_r+0x16>
   835e8:	bd38      	pop	{r3, r4, r5, pc}
   835ea:	6823      	ldr	r3, [r4, #0]
   835ec:	2b00      	cmp	r3, #0
   835ee:	d0fb      	beq.n	835e8 <_isatty_r+0x14>
   835f0:	602b      	str	r3, [r5, #0]
   835f2:	bd38      	pop	{r3, r4, r5, pc}
   835f4:	20070b18 	.word	0x20070b18

000835f8 <_lseek_r>:
   835f8:	b570      	push	{r4, r5, r6, lr}
   835fa:	4c08      	ldr	r4, [pc, #32]	; (8361c <_lseek_r+0x24>)
   835fc:	4606      	mov	r6, r0
   835fe:	2500      	movs	r5, #0
   83600:	4608      	mov	r0, r1
   83602:	4611      	mov	r1, r2
   83604:	461a      	mov	r2, r3
   83606:	6025      	str	r5, [r4, #0]
   83608:	f7fd fb32 	bl	80c70 <_lseek>
   8360c:	1c43      	adds	r3, r0, #1
   8360e:	d000      	beq.n	83612 <_lseek_r+0x1a>
   83610:	bd70      	pop	{r4, r5, r6, pc}
   83612:	6823      	ldr	r3, [r4, #0]
   83614:	2b00      	cmp	r3, #0
   83616:	d0fb      	beq.n	83610 <_lseek_r+0x18>
   83618:	6033      	str	r3, [r6, #0]
   8361a:	bd70      	pop	{r4, r5, r6, pc}
   8361c:	20070b18 	.word	0x20070b18

00083620 <_read_r>:
   83620:	b570      	push	{r4, r5, r6, lr}
   83622:	4c08      	ldr	r4, [pc, #32]	; (83644 <_read_r+0x24>)
   83624:	4606      	mov	r6, r0
   83626:	2500      	movs	r5, #0
   83628:	4608      	mov	r0, r1
   8362a:	4611      	mov	r1, r2
   8362c:	461a      	mov	r2, r3
   8362e:	6025      	str	r5, [r4, #0]
   83630:	f7fc fe48 	bl	802c4 <_read>
   83634:	1c43      	adds	r3, r0, #1
   83636:	d000      	beq.n	8363a <_read_r+0x1a>
   83638:	bd70      	pop	{r4, r5, r6, pc}
   8363a:	6823      	ldr	r3, [r4, #0]
   8363c:	2b00      	cmp	r3, #0
   8363e:	d0fb      	beq.n	83638 <_read_r+0x18>
   83640:	6033      	str	r3, [r6, #0]
   83642:	bd70      	pop	{r4, r5, r6, pc}
   83644:	20070b18 	.word	0x20070b18

00083648 <__aeabi_uldivmod>:
   83648:	b94b      	cbnz	r3, 8365e <__aeabi_uldivmod+0x16>
   8364a:	b942      	cbnz	r2, 8365e <__aeabi_uldivmod+0x16>
   8364c:	2900      	cmp	r1, #0
   8364e:	bf08      	it	eq
   83650:	2800      	cmpeq	r0, #0
   83652:	d002      	beq.n	8365a <__aeabi_uldivmod+0x12>
   83654:	f04f 31ff 	mov.w	r1, #4294967295
   83658:	4608      	mov	r0, r1
   8365a:	f000 b83b 	b.w	836d4 <__aeabi_idiv0>
   8365e:	b082      	sub	sp, #8
   83660:	46ec      	mov	ip, sp
   83662:	e92d 5000 	stmdb	sp!, {ip, lr}
   83666:	f000 f81d 	bl	836a4 <__gnu_uldivmod_helper>
   8366a:	f8dd e004 	ldr.w	lr, [sp, #4]
   8366e:	b002      	add	sp, #8
   83670:	bc0c      	pop	{r2, r3}
   83672:	4770      	bx	lr

00083674 <__gnu_ldivmod_helper>:
   83674:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   83678:	9e08      	ldr	r6, [sp, #32]
   8367a:	4614      	mov	r4, r2
   8367c:	461d      	mov	r5, r3
   8367e:	4680      	mov	r8, r0
   83680:	4689      	mov	r9, r1
   83682:	f000 f829 	bl	836d8 <__divdi3>
   83686:	fb04 f301 	mul.w	r3, r4, r1
   8368a:	fba4 ab00 	umull	sl, fp, r4, r0
   8368e:	fb00 3205 	mla	r2, r0, r5, r3
   83692:	4493      	add	fp, r2
   83694:	ebb8 080a 	subs.w	r8, r8, sl
   83698:	eb69 090b 	sbc.w	r9, r9, fp
   8369c:	e9c6 8900 	strd	r8, r9, [r6]
   836a0:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000836a4 <__gnu_uldivmod_helper>:
   836a4:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   836a8:	9e08      	ldr	r6, [sp, #32]
   836aa:	4614      	mov	r4, r2
   836ac:	461d      	mov	r5, r3
   836ae:	4680      	mov	r8, r0
   836b0:	4689      	mov	r9, r1
   836b2:	f000 f961 	bl	83978 <__udivdi3>
   836b6:	fb00 f505 	mul.w	r5, r0, r5
   836ba:	fba0 ab04 	umull	sl, fp, r0, r4
   836be:	fb04 5401 	mla	r4, r4, r1, r5
   836c2:	44a3      	add	fp, r4
   836c4:	ebb8 080a 	subs.w	r8, r8, sl
   836c8:	eb69 090b 	sbc.w	r9, r9, fp
   836cc:	e9c6 8900 	strd	r8, r9, [r6]
   836d0:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000836d4 <__aeabi_idiv0>:
   836d4:	4770      	bx	lr
   836d6:	bf00      	nop

000836d8 <__divdi3>:
   836d8:	2900      	cmp	r1, #0
   836da:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   836de:	f2c0 80a1 	blt.w	83824 <__divdi3+0x14c>
   836e2:	2400      	movs	r4, #0
   836e4:	2b00      	cmp	r3, #0
   836e6:	f2c0 8098 	blt.w	8381a <__divdi3+0x142>
   836ea:	4615      	mov	r5, r2
   836ec:	4606      	mov	r6, r0
   836ee:	460f      	mov	r7, r1
   836f0:	2b00      	cmp	r3, #0
   836f2:	d13f      	bne.n	83774 <__divdi3+0x9c>
   836f4:	428a      	cmp	r2, r1
   836f6:	d958      	bls.n	837aa <__divdi3+0xd2>
   836f8:	fab2 f382 	clz	r3, r2
   836fc:	b14b      	cbz	r3, 83712 <__divdi3+0x3a>
   836fe:	f1c3 0220 	rsb	r2, r3, #32
   83702:	fa01 f703 	lsl.w	r7, r1, r3
   83706:	fa20 f202 	lsr.w	r2, r0, r2
   8370a:	409d      	lsls	r5, r3
   8370c:	fa00 f603 	lsl.w	r6, r0, r3
   83710:	4317      	orrs	r7, r2
   83712:	0c29      	lsrs	r1, r5, #16
   83714:	fbb7 f2f1 	udiv	r2, r7, r1
   83718:	fb01 7712 	mls	r7, r1, r2, r7
   8371c:	b2a8      	uxth	r0, r5
   8371e:	fb00 f302 	mul.w	r3, r0, r2
   83722:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   83726:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   8372a:	42bb      	cmp	r3, r7
   8372c:	d909      	bls.n	83742 <__divdi3+0x6a>
   8372e:	197f      	adds	r7, r7, r5
   83730:	f102 3cff 	add.w	ip, r2, #4294967295
   83734:	f080 8105 	bcs.w	83942 <__divdi3+0x26a>
   83738:	42bb      	cmp	r3, r7
   8373a:	f240 8102 	bls.w	83942 <__divdi3+0x26a>
   8373e:	3a02      	subs	r2, #2
   83740:	442f      	add	r7, r5
   83742:	1aff      	subs	r7, r7, r3
   83744:	fbb7 f3f1 	udiv	r3, r7, r1
   83748:	fb01 7113 	mls	r1, r1, r3, r7
   8374c:	fb00 f003 	mul.w	r0, r0, r3
   83750:	b2b6      	uxth	r6, r6
   83752:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   83756:	4288      	cmp	r0, r1
   83758:	d908      	bls.n	8376c <__divdi3+0x94>
   8375a:	1949      	adds	r1, r1, r5
   8375c:	f103 37ff 	add.w	r7, r3, #4294967295
   83760:	f080 80f1 	bcs.w	83946 <__divdi3+0x26e>
   83764:	4288      	cmp	r0, r1
   83766:	f240 80ee 	bls.w	83946 <__divdi3+0x26e>
   8376a:	3b02      	subs	r3, #2
   8376c:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   83770:	2300      	movs	r3, #0
   83772:	e003      	b.n	8377c <__divdi3+0xa4>
   83774:	428b      	cmp	r3, r1
   83776:	d90a      	bls.n	8378e <__divdi3+0xb6>
   83778:	2300      	movs	r3, #0
   8377a:	461a      	mov	r2, r3
   8377c:	4610      	mov	r0, r2
   8377e:	4619      	mov	r1, r3
   83780:	b114      	cbz	r4, 83788 <__divdi3+0xb0>
   83782:	4240      	negs	r0, r0
   83784:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   83788:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8378c:	4770      	bx	lr
   8378e:	fab3 f883 	clz	r8, r3
   83792:	f1b8 0f00 	cmp.w	r8, #0
   83796:	f040 8088 	bne.w	838aa <__divdi3+0x1d2>
   8379a:	428b      	cmp	r3, r1
   8379c:	d302      	bcc.n	837a4 <__divdi3+0xcc>
   8379e:	4282      	cmp	r2, r0
   837a0:	f200 80e2 	bhi.w	83968 <__divdi3+0x290>
   837a4:	2300      	movs	r3, #0
   837a6:	2201      	movs	r2, #1
   837a8:	e7e8      	b.n	8377c <__divdi3+0xa4>
   837aa:	b912      	cbnz	r2, 837b2 <__divdi3+0xda>
   837ac:	2301      	movs	r3, #1
   837ae:	fbb3 f5f2 	udiv	r5, r3, r2
   837b2:	fab5 f285 	clz	r2, r5
   837b6:	2a00      	cmp	r2, #0
   837b8:	d13a      	bne.n	83830 <__divdi3+0x158>
   837ba:	1b7f      	subs	r7, r7, r5
   837bc:	0c28      	lsrs	r0, r5, #16
   837be:	fa1f fc85 	uxth.w	ip, r5
   837c2:	2301      	movs	r3, #1
   837c4:	fbb7 f1f0 	udiv	r1, r7, r0
   837c8:	fb00 7711 	mls	r7, r0, r1, r7
   837cc:	fb0c f201 	mul.w	r2, ip, r1
   837d0:	ea4f 4816 	mov.w	r8, r6, lsr #16
   837d4:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   837d8:	42ba      	cmp	r2, r7
   837da:	d907      	bls.n	837ec <__divdi3+0x114>
   837dc:	197f      	adds	r7, r7, r5
   837de:	f101 38ff 	add.w	r8, r1, #4294967295
   837e2:	d202      	bcs.n	837ea <__divdi3+0x112>
   837e4:	42ba      	cmp	r2, r7
   837e6:	f200 80c4 	bhi.w	83972 <__divdi3+0x29a>
   837ea:	4641      	mov	r1, r8
   837ec:	1abf      	subs	r7, r7, r2
   837ee:	fbb7 f2f0 	udiv	r2, r7, r0
   837f2:	fb00 7012 	mls	r0, r0, r2, r7
   837f6:	fb0c fc02 	mul.w	ip, ip, r2
   837fa:	b2b6      	uxth	r6, r6
   837fc:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   83800:	4584      	cmp	ip, r0
   83802:	d907      	bls.n	83814 <__divdi3+0x13c>
   83804:	1940      	adds	r0, r0, r5
   83806:	f102 37ff 	add.w	r7, r2, #4294967295
   8380a:	d202      	bcs.n	83812 <__divdi3+0x13a>
   8380c:	4584      	cmp	ip, r0
   8380e:	f200 80ae 	bhi.w	8396e <__divdi3+0x296>
   83812:	463a      	mov	r2, r7
   83814:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   83818:	e7b0      	b.n	8377c <__divdi3+0xa4>
   8381a:	43e4      	mvns	r4, r4
   8381c:	4252      	negs	r2, r2
   8381e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   83822:	e762      	b.n	836ea <__divdi3+0x12>
   83824:	4240      	negs	r0, r0
   83826:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8382a:	f04f 34ff 	mov.w	r4, #4294967295
   8382e:	e759      	b.n	836e4 <__divdi3+0xc>
   83830:	4095      	lsls	r5, r2
   83832:	f1c2 0920 	rsb	r9, r2, #32
   83836:	fa27 f109 	lsr.w	r1, r7, r9
   8383a:	fa26 f909 	lsr.w	r9, r6, r9
   8383e:	4097      	lsls	r7, r2
   83840:	0c28      	lsrs	r0, r5, #16
   83842:	fbb1 f8f0 	udiv	r8, r1, r0
   83846:	fb00 1118 	mls	r1, r0, r8, r1
   8384a:	fa1f fc85 	uxth.w	ip, r5
   8384e:	fb0c f308 	mul.w	r3, ip, r8
   83852:	ea49 0907 	orr.w	r9, r9, r7
   83856:	ea4f 4719 	mov.w	r7, r9, lsr #16
   8385a:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   8385e:	428b      	cmp	r3, r1
   83860:	fa06 f602 	lsl.w	r6, r6, r2
   83864:	d908      	bls.n	83878 <__divdi3+0x1a0>
   83866:	1949      	adds	r1, r1, r5
   83868:	f108 32ff 	add.w	r2, r8, #4294967295
   8386c:	d27a      	bcs.n	83964 <__divdi3+0x28c>
   8386e:	428b      	cmp	r3, r1
   83870:	d978      	bls.n	83964 <__divdi3+0x28c>
   83872:	f1a8 0802 	sub.w	r8, r8, #2
   83876:	4429      	add	r1, r5
   83878:	1ac9      	subs	r1, r1, r3
   8387a:	fbb1 f3f0 	udiv	r3, r1, r0
   8387e:	fb00 1713 	mls	r7, r0, r3, r1
   83882:	fb0c f203 	mul.w	r2, ip, r3
   83886:	fa1f f989 	uxth.w	r9, r9
   8388a:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   8388e:	42ba      	cmp	r2, r7
   83890:	d907      	bls.n	838a2 <__divdi3+0x1ca>
   83892:	197f      	adds	r7, r7, r5
   83894:	f103 31ff 	add.w	r1, r3, #4294967295
   83898:	d260      	bcs.n	8395c <__divdi3+0x284>
   8389a:	42ba      	cmp	r2, r7
   8389c:	d95e      	bls.n	8395c <__divdi3+0x284>
   8389e:	3b02      	subs	r3, #2
   838a0:	442f      	add	r7, r5
   838a2:	1abf      	subs	r7, r7, r2
   838a4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   838a8:	e78c      	b.n	837c4 <__divdi3+0xec>
   838aa:	f1c8 0220 	rsb	r2, r8, #32
   838ae:	fa25 f102 	lsr.w	r1, r5, r2
   838b2:	fa03 fc08 	lsl.w	ip, r3, r8
   838b6:	fa27 f302 	lsr.w	r3, r7, r2
   838ba:	fa20 f202 	lsr.w	r2, r0, r2
   838be:	fa07 f708 	lsl.w	r7, r7, r8
   838c2:	ea41 0c0c 	orr.w	ip, r1, ip
   838c6:	ea4f 491c 	mov.w	r9, ip, lsr #16
   838ca:	fbb3 f1f9 	udiv	r1, r3, r9
   838ce:	fb09 3311 	mls	r3, r9, r1, r3
   838d2:	fa1f fa8c 	uxth.w	sl, ip
   838d6:	fb0a fb01 	mul.w	fp, sl, r1
   838da:	4317      	orrs	r7, r2
   838dc:	0c3a      	lsrs	r2, r7, #16
   838de:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   838e2:	459b      	cmp	fp, r3
   838e4:	fa05 f008 	lsl.w	r0, r5, r8
   838e8:	d908      	bls.n	838fc <__divdi3+0x224>
   838ea:	eb13 030c 	adds.w	r3, r3, ip
   838ee:	f101 32ff 	add.w	r2, r1, #4294967295
   838f2:	d235      	bcs.n	83960 <__divdi3+0x288>
   838f4:	459b      	cmp	fp, r3
   838f6:	d933      	bls.n	83960 <__divdi3+0x288>
   838f8:	3902      	subs	r1, #2
   838fa:	4463      	add	r3, ip
   838fc:	ebcb 0303 	rsb	r3, fp, r3
   83900:	fbb3 f2f9 	udiv	r2, r3, r9
   83904:	fb09 3312 	mls	r3, r9, r2, r3
   83908:	fb0a fa02 	mul.w	sl, sl, r2
   8390c:	b2bf      	uxth	r7, r7
   8390e:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   83912:	45ba      	cmp	sl, r7
   83914:	d908      	bls.n	83928 <__divdi3+0x250>
   83916:	eb17 070c 	adds.w	r7, r7, ip
   8391a:	f102 33ff 	add.w	r3, r2, #4294967295
   8391e:	d21b      	bcs.n	83958 <__divdi3+0x280>
   83920:	45ba      	cmp	sl, r7
   83922:	d919      	bls.n	83958 <__divdi3+0x280>
   83924:	3a02      	subs	r2, #2
   83926:	4467      	add	r7, ip
   83928:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   8392c:	fba5 0100 	umull	r0, r1, r5, r0
   83930:	ebca 0707 	rsb	r7, sl, r7
   83934:	428f      	cmp	r7, r1
   83936:	f04f 0300 	mov.w	r3, #0
   8393a:	d30a      	bcc.n	83952 <__divdi3+0x27a>
   8393c:	d005      	beq.n	8394a <__divdi3+0x272>
   8393e:	462a      	mov	r2, r5
   83940:	e71c      	b.n	8377c <__divdi3+0xa4>
   83942:	4662      	mov	r2, ip
   83944:	e6fd      	b.n	83742 <__divdi3+0x6a>
   83946:	463b      	mov	r3, r7
   83948:	e710      	b.n	8376c <__divdi3+0x94>
   8394a:	fa06 f608 	lsl.w	r6, r6, r8
   8394e:	4286      	cmp	r6, r0
   83950:	d2f5      	bcs.n	8393e <__divdi3+0x266>
   83952:	1e6a      	subs	r2, r5, #1
   83954:	2300      	movs	r3, #0
   83956:	e711      	b.n	8377c <__divdi3+0xa4>
   83958:	461a      	mov	r2, r3
   8395a:	e7e5      	b.n	83928 <__divdi3+0x250>
   8395c:	460b      	mov	r3, r1
   8395e:	e7a0      	b.n	838a2 <__divdi3+0x1ca>
   83960:	4611      	mov	r1, r2
   83962:	e7cb      	b.n	838fc <__divdi3+0x224>
   83964:	4690      	mov	r8, r2
   83966:	e787      	b.n	83878 <__divdi3+0x1a0>
   83968:	4643      	mov	r3, r8
   8396a:	4642      	mov	r2, r8
   8396c:	e706      	b.n	8377c <__divdi3+0xa4>
   8396e:	3a02      	subs	r2, #2
   83970:	e750      	b.n	83814 <__divdi3+0x13c>
   83972:	3902      	subs	r1, #2
   83974:	442f      	add	r7, r5
   83976:	e739      	b.n	837ec <__divdi3+0x114>

00083978 <__udivdi3>:
   83978:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8397c:	4614      	mov	r4, r2
   8397e:	4605      	mov	r5, r0
   83980:	460e      	mov	r6, r1
   83982:	2b00      	cmp	r3, #0
   83984:	d143      	bne.n	83a0e <__udivdi3+0x96>
   83986:	428a      	cmp	r2, r1
   83988:	d953      	bls.n	83a32 <__udivdi3+0xba>
   8398a:	fab2 f782 	clz	r7, r2
   8398e:	b157      	cbz	r7, 839a6 <__udivdi3+0x2e>
   83990:	f1c7 0620 	rsb	r6, r7, #32
   83994:	fa20 f606 	lsr.w	r6, r0, r6
   83998:	fa01 f307 	lsl.w	r3, r1, r7
   8399c:	fa02 f407 	lsl.w	r4, r2, r7
   839a0:	fa00 f507 	lsl.w	r5, r0, r7
   839a4:	431e      	orrs	r6, r3
   839a6:	0c21      	lsrs	r1, r4, #16
   839a8:	fbb6 f2f1 	udiv	r2, r6, r1
   839ac:	fb01 6612 	mls	r6, r1, r2, r6
   839b0:	b2a0      	uxth	r0, r4
   839b2:	fb00 f302 	mul.w	r3, r0, r2
   839b6:	0c2f      	lsrs	r7, r5, #16
   839b8:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   839bc:	42b3      	cmp	r3, r6
   839be:	d909      	bls.n	839d4 <__udivdi3+0x5c>
   839c0:	1936      	adds	r6, r6, r4
   839c2:	f102 37ff 	add.w	r7, r2, #4294967295
   839c6:	f080 80fd 	bcs.w	83bc4 <__udivdi3+0x24c>
   839ca:	42b3      	cmp	r3, r6
   839cc:	f240 80fa 	bls.w	83bc4 <__udivdi3+0x24c>
   839d0:	3a02      	subs	r2, #2
   839d2:	4426      	add	r6, r4
   839d4:	1af6      	subs	r6, r6, r3
   839d6:	fbb6 f3f1 	udiv	r3, r6, r1
   839da:	fb01 6113 	mls	r1, r1, r3, r6
   839de:	fb00 f003 	mul.w	r0, r0, r3
   839e2:	b2ad      	uxth	r5, r5
   839e4:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   839e8:	4288      	cmp	r0, r1
   839ea:	d908      	bls.n	839fe <__udivdi3+0x86>
   839ec:	1909      	adds	r1, r1, r4
   839ee:	f103 36ff 	add.w	r6, r3, #4294967295
   839f2:	f080 80e9 	bcs.w	83bc8 <__udivdi3+0x250>
   839f6:	4288      	cmp	r0, r1
   839f8:	f240 80e6 	bls.w	83bc8 <__udivdi3+0x250>
   839fc:	3b02      	subs	r3, #2
   839fe:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   83a02:	2300      	movs	r3, #0
   83a04:	4610      	mov	r0, r2
   83a06:	4619      	mov	r1, r3
   83a08:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83a0c:	4770      	bx	lr
   83a0e:	428b      	cmp	r3, r1
   83a10:	d84c      	bhi.n	83aac <__udivdi3+0x134>
   83a12:	fab3 f683 	clz	r6, r3
   83a16:	2e00      	cmp	r6, #0
   83a18:	d14f      	bne.n	83aba <__udivdi3+0x142>
   83a1a:	428b      	cmp	r3, r1
   83a1c:	d302      	bcc.n	83a24 <__udivdi3+0xac>
   83a1e:	4282      	cmp	r2, r0
   83a20:	f200 80dd 	bhi.w	83bde <__udivdi3+0x266>
   83a24:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83a28:	2300      	movs	r3, #0
   83a2a:	2201      	movs	r2, #1
   83a2c:	4610      	mov	r0, r2
   83a2e:	4619      	mov	r1, r3
   83a30:	4770      	bx	lr
   83a32:	b912      	cbnz	r2, 83a3a <__udivdi3+0xc2>
   83a34:	2401      	movs	r4, #1
   83a36:	fbb4 f4f2 	udiv	r4, r4, r2
   83a3a:	fab4 f284 	clz	r2, r4
   83a3e:	2a00      	cmp	r2, #0
   83a40:	f040 8082 	bne.w	83b48 <__udivdi3+0x1d0>
   83a44:	1b09      	subs	r1, r1, r4
   83a46:	0c26      	lsrs	r6, r4, #16
   83a48:	b2a7      	uxth	r7, r4
   83a4a:	2301      	movs	r3, #1
   83a4c:	fbb1 f0f6 	udiv	r0, r1, r6
   83a50:	fb06 1110 	mls	r1, r6, r0, r1
   83a54:	fb07 f200 	mul.w	r2, r7, r0
   83a58:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   83a5c:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   83a60:	428a      	cmp	r2, r1
   83a62:	d907      	bls.n	83a74 <__udivdi3+0xfc>
   83a64:	1909      	adds	r1, r1, r4
   83a66:	f100 3cff 	add.w	ip, r0, #4294967295
   83a6a:	d202      	bcs.n	83a72 <__udivdi3+0xfa>
   83a6c:	428a      	cmp	r2, r1
   83a6e:	f200 80c8 	bhi.w	83c02 <__udivdi3+0x28a>
   83a72:	4660      	mov	r0, ip
   83a74:	1a89      	subs	r1, r1, r2
   83a76:	fbb1 f2f6 	udiv	r2, r1, r6
   83a7a:	fb06 1112 	mls	r1, r6, r2, r1
   83a7e:	fb07 f702 	mul.w	r7, r7, r2
   83a82:	b2ad      	uxth	r5, r5
   83a84:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   83a88:	42af      	cmp	r7, r5
   83a8a:	d908      	bls.n	83a9e <__udivdi3+0x126>
   83a8c:	192c      	adds	r4, r5, r4
   83a8e:	f102 31ff 	add.w	r1, r2, #4294967295
   83a92:	f080 809b 	bcs.w	83bcc <__udivdi3+0x254>
   83a96:	42a7      	cmp	r7, r4
   83a98:	f240 8098 	bls.w	83bcc <__udivdi3+0x254>
   83a9c:	3a02      	subs	r2, #2
   83a9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   83aa2:	4610      	mov	r0, r2
   83aa4:	4619      	mov	r1, r3
   83aa6:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83aaa:	4770      	bx	lr
   83aac:	2300      	movs	r3, #0
   83aae:	461a      	mov	r2, r3
   83ab0:	4610      	mov	r0, r2
   83ab2:	4619      	mov	r1, r3
   83ab4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   83ab8:	4770      	bx	lr
   83aba:	f1c6 0520 	rsb	r5, r6, #32
   83abe:	fa22 f705 	lsr.w	r7, r2, r5
   83ac2:	fa03 f406 	lsl.w	r4, r3, r6
   83ac6:	fa21 f305 	lsr.w	r3, r1, r5
   83aca:	fa01 fb06 	lsl.w	fp, r1, r6
   83ace:	fa20 f505 	lsr.w	r5, r0, r5
   83ad2:	433c      	orrs	r4, r7
   83ad4:	ea4f 4814 	mov.w	r8, r4, lsr #16
   83ad8:	fbb3 fcf8 	udiv	ip, r3, r8
   83adc:	fb08 331c 	mls	r3, r8, ip, r3
   83ae0:	fa1f f984 	uxth.w	r9, r4
   83ae4:	fb09 fa0c 	mul.w	sl, r9, ip
   83ae8:	ea45 0b0b 	orr.w	fp, r5, fp
   83aec:	ea4f 451b 	mov.w	r5, fp, lsr #16
   83af0:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   83af4:	459a      	cmp	sl, r3
   83af6:	fa02 f206 	lsl.w	r2, r2, r6
   83afa:	d904      	bls.n	83b06 <__udivdi3+0x18e>
   83afc:	191b      	adds	r3, r3, r4
   83afe:	f10c 35ff 	add.w	r5, ip, #4294967295
   83b02:	d36f      	bcc.n	83be4 <__udivdi3+0x26c>
   83b04:	46ac      	mov	ip, r5
   83b06:	ebca 0303 	rsb	r3, sl, r3
   83b0a:	fbb3 f5f8 	udiv	r5, r3, r8
   83b0e:	fb08 3315 	mls	r3, r8, r5, r3
   83b12:	fb09 f905 	mul.w	r9, r9, r5
   83b16:	fa1f fb8b 	uxth.w	fp, fp
   83b1a:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   83b1e:	45b9      	cmp	r9, r7
   83b20:	d904      	bls.n	83b2c <__udivdi3+0x1b4>
   83b22:	193f      	adds	r7, r7, r4
   83b24:	f105 33ff 	add.w	r3, r5, #4294967295
   83b28:	d362      	bcc.n	83bf0 <__udivdi3+0x278>
   83b2a:	461d      	mov	r5, r3
   83b2c:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   83b30:	fbac 2302 	umull	r2, r3, ip, r2
   83b34:	ebc9 0707 	rsb	r7, r9, r7
   83b38:	429f      	cmp	r7, r3
   83b3a:	f04f 0500 	mov.w	r5, #0
   83b3e:	d34a      	bcc.n	83bd6 <__udivdi3+0x25e>
   83b40:	d046      	beq.n	83bd0 <__udivdi3+0x258>
   83b42:	4662      	mov	r2, ip
   83b44:	462b      	mov	r3, r5
   83b46:	e75d      	b.n	83a04 <__udivdi3+0x8c>
   83b48:	4094      	lsls	r4, r2
   83b4a:	f1c2 0920 	rsb	r9, r2, #32
   83b4e:	fa21 fc09 	lsr.w	ip, r1, r9
   83b52:	4091      	lsls	r1, r2
   83b54:	fa20 f909 	lsr.w	r9, r0, r9
   83b58:	0c26      	lsrs	r6, r4, #16
   83b5a:	fbbc f8f6 	udiv	r8, ip, r6
   83b5e:	fb06 cc18 	mls	ip, r6, r8, ip
   83b62:	b2a7      	uxth	r7, r4
   83b64:	fb07 f308 	mul.w	r3, r7, r8
   83b68:	ea49 0901 	orr.w	r9, r9, r1
   83b6c:	ea4f 4119 	mov.w	r1, r9, lsr #16
   83b70:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   83b74:	4563      	cmp	r3, ip
   83b76:	fa00 f502 	lsl.w	r5, r0, r2
   83b7a:	d909      	bls.n	83b90 <__udivdi3+0x218>
   83b7c:	eb1c 0c04 	adds.w	ip, ip, r4
   83b80:	f108 32ff 	add.w	r2, r8, #4294967295
   83b84:	d23b      	bcs.n	83bfe <__udivdi3+0x286>
   83b86:	4563      	cmp	r3, ip
   83b88:	d939      	bls.n	83bfe <__udivdi3+0x286>
   83b8a:	f1a8 0802 	sub.w	r8, r8, #2
   83b8e:	44a4      	add	ip, r4
   83b90:	ebc3 0c0c 	rsb	ip, r3, ip
   83b94:	fbbc f3f6 	udiv	r3, ip, r6
   83b98:	fb06 c113 	mls	r1, r6, r3, ip
   83b9c:	fb07 f203 	mul.w	r2, r7, r3
   83ba0:	fa1f f989 	uxth.w	r9, r9
   83ba4:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   83ba8:	428a      	cmp	r2, r1
   83baa:	d907      	bls.n	83bbc <__udivdi3+0x244>
   83bac:	1909      	adds	r1, r1, r4
   83bae:	f103 30ff 	add.w	r0, r3, #4294967295
   83bb2:	d222      	bcs.n	83bfa <__udivdi3+0x282>
   83bb4:	428a      	cmp	r2, r1
   83bb6:	d920      	bls.n	83bfa <__udivdi3+0x282>
   83bb8:	3b02      	subs	r3, #2
   83bba:	4421      	add	r1, r4
   83bbc:	1a89      	subs	r1, r1, r2
   83bbe:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   83bc2:	e743      	b.n	83a4c <__udivdi3+0xd4>
   83bc4:	463a      	mov	r2, r7
   83bc6:	e705      	b.n	839d4 <__udivdi3+0x5c>
   83bc8:	4633      	mov	r3, r6
   83bca:	e718      	b.n	839fe <__udivdi3+0x86>
   83bcc:	460a      	mov	r2, r1
   83bce:	e766      	b.n	83a9e <__udivdi3+0x126>
   83bd0:	40b0      	lsls	r0, r6
   83bd2:	4290      	cmp	r0, r2
   83bd4:	d2b5      	bcs.n	83b42 <__udivdi3+0x1ca>
   83bd6:	f10c 32ff 	add.w	r2, ip, #4294967295
   83bda:	2300      	movs	r3, #0
   83bdc:	e712      	b.n	83a04 <__udivdi3+0x8c>
   83bde:	4633      	mov	r3, r6
   83be0:	4632      	mov	r2, r6
   83be2:	e70f      	b.n	83a04 <__udivdi3+0x8c>
   83be4:	459a      	cmp	sl, r3
   83be6:	d98d      	bls.n	83b04 <__udivdi3+0x18c>
   83be8:	f1ac 0c02 	sub.w	ip, ip, #2
   83bec:	4423      	add	r3, r4
   83bee:	e78a      	b.n	83b06 <__udivdi3+0x18e>
   83bf0:	45b9      	cmp	r9, r7
   83bf2:	d99a      	bls.n	83b2a <__udivdi3+0x1b2>
   83bf4:	3d02      	subs	r5, #2
   83bf6:	4427      	add	r7, r4
   83bf8:	e798      	b.n	83b2c <__udivdi3+0x1b4>
   83bfa:	4603      	mov	r3, r0
   83bfc:	e7de      	b.n	83bbc <__udivdi3+0x244>
   83bfe:	4690      	mov	r8, r2
   83c00:	e7c6      	b.n	83b90 <__udivdi3+0x218>
   83c02:	3802      	subs	r0, #2
   83c04:	4421      	add	r1, r4
   83c06:	e735      	b.n	83a74 <__udivdi3+0xfc>
   83c08:	6e69616d 	.word	0x6e69616d
   83c0c:	00000000 	.word	0x00000000
   83c10:	356e6970 	.word	0x356e6970
   83c14:	00000031 	.word	0x00000031
   83c18:	206e6970 	.word	0x206e6970
   83c1c:	00003335 	.word	0x00003335
   83c20:	666e6f63 	.word	0x666e6f63
   83c24:	00006769 	.word	0x00006769
   83c28:	00000043 	.word	0x00000043

00083c2c <_global_impure_ptr>:
   83c2c:	20070140 33323130 37363534 42413938     @.. 0123456789AB
   83c3c:	46454443 00000000 33323130 37363534     CDEF....01234567
   83c4c:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   83c5c:	0000296c                                l)..

00083c60 <zeroes.6721>:
   83c60:	30303030 30303030 30303030 30303030     0000000000000000

00083c70 <blanks.6720>:
   83c70:	20202020 20202020 20202020 20202020                     

00083c80 <_init>:
   83c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83c82:	bf00      	nop
   83c84:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83c86:	bc08      	pop	{r3}
   83c88:	469e      	mov	lr, r3
   83c8a:	4770      	bx	lr

00083c8c <__init_array_start>:
   83c8c:	00081cfd 	.word	0x00081cfd

00083c90 <__frame_dummy_init_array_entry>:
   83c90:	00080119                                ....

00083c94 <_fini>:
   83c94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83c96:	bf00      	nop
   83c98:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83c9a:	bc08      	pop	{r3}
   83c9c:	469e      	mov	lr, r3
   83c9e:	4770      	bx	lr

00083ca0 <__fini_array_start>:
   83ca0:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
2007000a:	bf00      	nop

2007000c <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4b14      	ldr	r3, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b1a      	ldr	r2, [r3, #48]	; 0x30
20070048:	f022 0203 	bic.w	r2, r2, #3
2007004c:	f042 0201 	orr.w	r2, r2, #1
20070050:	631a      	str	r2, [r3, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	461a      	mov	r2, r3
20070054:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070056:	f013 0f08 	tst.w	r3, #8
2007005a:	d0fb      	beq.n	20070054 <SystemInit+0x48>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005c:	4a11      	ldr	r2, [pc, #68]	; (200700a4 <SystemInit+0x98>)
2007005e:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
20070060:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070062:	461a      	mov	r2, r3
20070064:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070066:	f013 0f02 	tst.w	r3, #2
2007006a:	d0fb      	beq.n	20070064 <SystemInit+0x58>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006c:	2211      	movs	r2, #17
2007006e:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
20070070:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070072:	461a      	mov	r2, r3
20070074:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070076:	f013 0f08 	tst.w	r3, #8
2007007a:	d0fb      	beq.n	20070074 <SystemInit+0x68>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007c:	2212      	movs	r2, #18
2007007e:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
20070080:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070082:	461a      	mov	r2, r3
20070084:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070086:	f013 0f08 	tst.w	r3, #8
2007008a:	d0fb      	beq.n	20070084 <SystemInit+0x78>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008c:	4a06      	ldr	r2, [pc, #24]	; (200700a8 <SystemInit+0x9c>)
2007008e:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
20070090:	601a      	str	r2, [r3, #0]
20070092:	4770      	bx	lr
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	2007013c 	.word	0x2007013c

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d806      	bhi.n	200700c4 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700b6:	2300      	movs	r3, #0
200700b8:	4a1a      	ldr	r2, [pc, #104]	; (20070124 <system_init_flash+0x74>)
200700ba:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700bc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700c0:	6013      	str	r3, [r2, #0]
200700c2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700c4:	4b18      	ldr	r3, [pc, #96]	; (20070128 <system_init_flash+0x78>)
200700c6:	4298      	cmp	r0, r3
200700c8:	d807      	bhi.n	200700da <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700ca:	f44f 7380 	mov.w	r3, #256	; 0x100
200700ce:	4a15      	ldr	r2, [pc, #84]	; (20070124 <system_init_flash+0x74>)
200700d0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700d2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700d6:	6013      	str	r3, [r2, #0]
200700d8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700da:	4b14      	ldr	r3, [pc, #80]	; (2007012c <system_init_flash+0x7c>)
200700dc:	4298      	cmp	r0, r3
200700de:	d807      	bhi.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700e0:	f44f 7300 	mov.w	r3, #512	; 0x200
200700e4:	4a0f      	ldr	r2, [pc, #60]	; (20070124 <system_init_flash+0x74>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700f0:	4b0f      	ldr	r3, [pc, #60]	; (20070130 <system_init_flash+0x80>)
200700f2:	4298      	cmp	r0, r3
200700f4:	d807      	bhi.n	20070106 <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700f6:	f44f 7340 	mov.w	r3, #768	; 0x300
200700fa:	4a0a      	ldr	r2, [pc, #40]	; (20070124 <system_init_flash+0x74>)
200700fc:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700fe:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070102:	6013      	str	r3, [r2, #0]
20070104:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
20070106:	4b0b      	ldr	r3, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070108:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007010a:	bf94      	ite	ls
2007010c:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070110:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070114:	4a03      	ldr	r2, [pc, #12]	; (20070124 <system_init_flash+0x74>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	400e0a00 	.word	0x400e0a00
20070128:	02faf07f 	.word	0x02faf07f
2007012c:	03d08fff 	.word	0x03d08fff
20070130:	04c4b3ff 	.word	0x04c4b3ff
20070134:	055d4a7f 	.word	0x055d4a7f

20070138 <g_interrupt_enabled>:
20070138:	00000001                                ....

2007013c <SystemCoreClock>:
2007013c:	003d0900                                ..=.

20070140 <impure_data>:
20070140:	00000000 2007042c 20070494 200704fc     ....,.. ... ... 
	...
20070174:	00083c28 00000000 00000000 00000000     (<..............
	...
200701e8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f8:	0005deec 0000000b 00000000 00000000     ................
	...

20070568 <_impure_ptr>:
20070568:	20070140                                @.. 

2007056c <lc_ctype_charset>:
2007056c:	49435341 00000049 00000000 00000000     ASCII...........
	...

2007058c <__mb_cur_max>:
2007058c:	00000001                                ....

20070590 <__malloc_av_>:
	...
20070598:	20070590 20070590 20070598 20070598     ... ... ... ... 
200705a8:	200705a0 200705a0 200705a8 200705a8     ... ... ... ... 
200705b8:	200705b0 200705b0 200705b8 200705b8     ... ... ... ... 
200705c8:	200705c0 200705c0 200705c8 200705c8     ... ... ... ... 
200705d8:	200705d0 200705d0 200705d8 200705d8     ... ... ... ... 
200705e8:	200705e0 200705e0 200705e8 200705e8     ... ... ... ... 
200705f8:	200705f0 200705f0 200705f8 200705f8     ... ... ... ... 
20070608:	20070600 20070600 20070608 20070608     ... ... ... ... 
20070618:	20070610 20070610 20070618 20070618     ... ... ... ... 
20070628:	20070620 20070620 20070628 20070628      ..  .. (.. (.. 
20070638:	20070630 20070630 20070638 20070638     0.. 0.. 8.. 8.. 
20070648:	20070640 20070640 20070648 20070648     @.. @.. H.. H.. 
20070658:	20070650 20070650 20070658 20070658     P.. P.. X.. X.. 
20070668:	20070660 20070660 20070668 20070668     `.. `.. h.. h.. 
20070678:	20070670 20070670 20070678 20070678     p.. p.. x.. x.. 
20070688:	20070680 20070680 20070688 20070688     ... ... ... ... 
20070698:	20070690 20070690 20070698 20070698     ... ... ... ... 
200706a8:	200706a0 200706a0 200706a8 200706a8     ... ... ... ... 
200706b8:	200706b0 200706b0 200706b8 200706b8     ... ... ... ... 
200706c8:	200706c0 200706c0 200706c8 200706c8     ... ... ... ... 
200706d8:	200706d0 200706d0 200706d8 200706d8     ... ... ... ... 
200706e8:	200706e0 200706e0 200706e8 200706e8     ... ... ... ... 
200706f8:	200706f0 200706f0 200706f8 200706f8     ... ... ... ... 
20070708:	20070700 20070700 20070708 20070708     ... ... ... ... 
20070718:	20070710 20070710 20070718 20070718     ... ... ... ... 
20070728:	20070720 20070720 20070728 20070728      ..  .. (.. (.. 
20070738:	20070730 20070730 20070738 20070738     0.. 0.. 8.. 8.. 
20070748:	20070740 20070740 20070748 20070748     @.. @.. H.. H.. 
20070758:	20070750 20070750 20070758 20070758     P.. P.. X.. X.. 
20070768:	20070760 20070760 20070768 20070768     `.. `.. h.. h.. 
20070778:	20070770 20070770 20070778 20070778     p.. p.. x.. x.. 
20070788:	20070780 20070780 20070788 20070788     ... ... ... ... 
20070798:	20070790 20070790 20070798 20070798     ... ... ... ... 
200707a8:	200707a0 200707a0 200707a8 200707a8     ... ... ... ... 
200707b8:	200707b0 200707b0 200707b8 200707b8     ... ... ... ... 
200707c8:	200707c0 200707c0 200707c8 200707c8     ... ... ... ... 
200707d8:	200707d0 200707d0 200707d8 200707d8     ... ... ... ... 
200707e8:	200707e0 200707e0 200707e8 200707e8     ... ... ... ... 
200707f8:	200707f0 200707f0 200707f8 200707f8     ... ... ... ... 
20070808:	20070800 20070800 20070808 20070808     ... ... ... ... 
20070818:	20070810 20070810 20070818 20070818     ... ... ... ... 
20070828:	20070820 20070820 20070828 20070828      ..  .. (.. (.. 
20070838:	20070830 20070830 20070838 20070838     0.. 0.. 8.. 8.. 
20070848:	20070840 20070840 20070848 20070848     @.. @.. H.. H.. 
20070858:	20070850 20070850 20070858 20070858     P.. P.. X.. X.. 
20070868:	20070860 20070860 20070868 20070868     `.. `.. h.. h.. 
20070878:	20070870 20070870 20070878 20070878     p.. p.. x.. x.. 
20070888:	20070880 20070880 20070888 20070888     ... ... ... ... 
20070898:	20070890 20070890 20070898 20070898     ... ... ... ... 
200708a8:	200708a0 200708a0 200708a8 200708a8     ... ... ... ... 
200708b8:	200708b0 200708b0 200708b8 200708b8     ... ... ... ... 
200708c8:	200708c0 200708c0 200708c8 200708c8     ... ... ... ... 
200708d8:	200708d0 200708d0 200708d8 200708d8     ... ... ... ... 
200708e8:	200708e0 200708e0 200708e8 200708e8     ... ... ... ... 
200708f8:	200708f0 200708f0 200708f8 200708f8     ... ... ... ... 
20070908:	20070900 20070900 20070908 20070908     ... ... ... ... 
20070918:	20070910 20070910 20070918 20070918     ... ... ... ... 
20070928:	20070920 20070920 20070928 20070928      ..  .. (.. (.. 
20070938:	20070930 20070930 20070938 20070938     0.. 0.. 8.. 8.. 
20070948:	20070940 20070940 20070948 20070948     @.. @.. H.. H.. 
20070958:	20070950 20070950 20070958 20070958     P.. P.. X.. X.. 
20070968:	20070960 20070960 20070968 20070968     `.. `.. h.. h.. 
20070978:	20070970 20070970 20070978 20070978     p.. p.. x.. x.. 
20070988:	20070980 20070980 20070988 20070988     ... ... ... ... 

20070998 <__malloc_trim_threshold>:
20070998:	00020000                                ....

2007099c <__malloc_sbrk_base>:
2007099c:	ffffffff                                ....

200709a0 <__wctomb>:
200709a0:	0008340d                                .4..
